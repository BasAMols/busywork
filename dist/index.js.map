{
  "version": 3,
  "sources": ["../ts/classes/math/vector2.ts", "../ts/classes/math/transform.ts", "../ts/classes/element/element.ts", "../ts/classes/busywork/events.ts", "../ts/classes/busywork/ticker.ts", "../ts/classes/busywork/base.ts", "../ts/classes/element/flex.ts", "../ts/classes/element/screen.ts", "../ts/classes/math/easings.ts", "../ts/classes/math/util.ts", "../ts/classes/busywork/screens/main/util/section.ts", "../ts/classes/busywork/screens/main/sections/computer/computer.ts", "../ts/classes/element/button.ts", "../ts/classes/busywork/screens/main/sections/keyboard/asset.ts", "../ts/classes/busywork/screens/main/sections/keyboard/keyboard.ts", "../ts/classes/element/tile.ts", "../ts/classes/busywork/screens/main/sections/office/clutter.ts", "../ts/classes/busywork/screens/main/sections/office/prop.ts", "../ts/classes/busywork/screens/main/sections/office/furniture.ts", "../ts/classes/busywork/screens/main/util/movement.ts", "../ts/classes/busywork/screens/main/sections/office/people/assets.ts", "../ts/classes/busywork/screens/main/sections/office/people/walker.ts", "../ts/classes/busywork/screens/main/sections/office/people/boss.ts", "../ts/classes/busywork/screens/main/sections/office/people/player.ts", "../ts/classes/busywork/screens/main/sections/office/people/sitter.ts", "../ts/classes/busywork/screens/main/sections/office/office.ts", "../ts/classes/busywork/screens/main/util/icon.ts", "../ts/classes/busywork/screens/main/sections/stat/statbar.ts", "../ts/classes/busywork/screens/main/sections/coffee/assets.ts", "../ts/classes/busywork/screens/main/sections/coffee/coffee.ts", "../ts/classes/busywork/screens/main/sections/debug.ts", "../ts/classes/element/grid.ts", "../ts/classes/busywork/screens/main/sections/gameover.ts", "../ts/classes/busywork/screens/main/tilegame.ts", "../ts/classes/element/label.ts", "../ts/classes/busywork/screens/menu.ts", "../ts/game.ts", "../ts/index.ts"],
  "sourcesContent": ["export interface Vector2 {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport class Vector2 {\r\n    public x: number;\r\n    public y: number;\r\n    public constructor(x?: number, y?: number) {\r\n        this.x = x ?? 0;\r\n        this.y = y ?? this.x;\r\n    }\r\n\r\n    public clone() {\r\n        return new Vector2(this.x, this.y);\r\n    }\r\n\r\n    public add(...v: Vector2[]): Vector2 {\r\n        const dum = this.clone();\r\n        v.forEach(v => {\r\n            dum.x += v.x;\r\n            dum.y += v.y;\r\n        });\r\n        return dum;\r\n    }\r\n\r\n    public sub(...v: Vector2[]): Vector2 {\r\n        const dum = this.clone();\r\n        v.forEach(v => {\r\n            dum.x -= v.x;\r\n            dum.y -= v.y;\r\n        });\r\n        return dum;\r\n    }\r\n\r\n    public scale(...s: number[]): Vector2 {\r\n        const dum = this.clone();\r\n        s.forEach(s => {\r\n            dum.x *= s;\r\n            dum.y *= s;\r\n        });\r\n        return dum;\r\n    }\r\n\r\n    public cross(v: Vector2): number {\r\n        return this.x * v.y - this.y * v.x;\r\n    }\r\n\r\n    public dot(v: Vector2): number {\r\n        return this.x * v.x + this.y * v.y;\r\n    }\r\n\r\n    public length(): number {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y);\r\n    }\r\n\r\n    public distance(v: Vector2): number {\r\n        return Math.sqrt(Math.pow(this.x - v.x, 2) + Math.pow(this.y - v.y, 2));\r\n    }\r\n\r\n    public angle(): number {\r\n        return Math.atan2(this.y, this.x) * 180 / Math.PI + 90;\r\n    }\r\n\r\n    public rotate(angle: number): Vector2 {\r\n        const dum = this.clone();\r\n        const cos = Math.cos(angle);\r\n        const sin = Math.sin(angle);\r\n        dum.x = this.x * cos - this.y * sin;\r\n        dum.y = this.x * sin + this.y * cos;\r\n        return dum;\r\n    }\r\n\r\n    public lerp(v: Vector2, t: number): Vector2 {\r\n        const dum = this.clone();\r\n        dum.x = this.x + (v.x - this.x) * t;\r\n        dum.y = this.y + (v.y - this.y) * t;\r\n        return dum;\r\n    }\r\n    \r\n    public equals(v: Vector2): boolean {\r\n        return this.x === v.x && this.y === v.y;\r\n    }\r\n    \r\n    public toString(): string {\r\n        return `Vector2(${this.x}, ${this.y})`;\r\n    }\r\n    \r\n    public toArray(): number[] {\r\n        return [this.x, this.y];\r\n    }\r\n\r\n    public normalize(): Vector2 {\r\n        const dum = this.clone();\r\n        const len = Math.sqrt(dum.x * dum.x + dum.y * dum.y);\r\n        dum.x /= len;\r\n        dum.y /= len;\r\n        return dum;\r\n    }\r\n    \r\n}", "import { Vector2 } from './vector2';\n\nexport interface TransformOptions {\n    position?: Vector2;\n    scale?: Vector2;\n    rotation?: number; // in degrees\n    anchor?: Vector2; // anchor point for rotation and scale (0,0 = top-left, 0.5,0.5 = center, 1,1 = bottom-right)\n    size?: Vector2; // size of the element for anchor point calculations\n    parent?: Transform;\n}\n\n\nexport class Transform {\n    private _position: Vector2;\n    private _scale: Vector2;\n    private _rotation: number; // stored in degrees\n    private _anchor: Vector2; // anchor point for transformations (relative 0-1)\n    private _size: Vector2; // size of the element\n    private _responders: (({ position, scale, rotation, matrix }: { position: Vector2, scale: Vector2, rotation: number, matrix: number[]; }) => void)[] = [];\n    private _parent?: Transform;\n\n    setParent(parent: Transform) {\n        this._parent = parent;\n        this._update();\n    }\n    hasParent() {\n        return this._parent !== undefined;\n    }\n\n    public constructor(options: TransformOptions = {}) {\n        this._position = options.position ?? new Vector2(0, 0);\n        this._scale = options.scale ?? new Vector2(1, 1);\n        this._rotation = options.rotation ?? 0;\n        this._anchor = options.anchor ?? new Vector2(0, 0);\n        this._size = options.size ?? new Vector2(0, 0);\n        this._parent = options.parent;\n    }\n\n    public setResponder(responder: ({ position, scale, rotation }: { position: Vector2, scale: Vector2, rotation: number, matrix: number[]; }) => void) {\n        this._responders.push(responder);\n        responder({ position: this.position, scale: this.scale, rotation: this.rotation, matrix: this.matrix });\n    }\n\n    public get position() {\n        return this._position;\n    }\n\n    public get scale() {\n        return this._scale;\n    }\n\n    public get rotation() {\n        return this._rotation % 360;\n    }\n\n    public get anchor() {\n        return this._anchor;\n    }\n\n    public get size() {\n        return this._size;\n    }\n\n    public setPosition(position: Vector2) {\n        this._position = position;\n        this._update();\n    }\n\n    public getAbsolutePosition(): {\n        position: Vector2;\n        scale: Vector2;\n        rotation: number;\n        matrix: number[];\n    } {\n        // Calculate the local transformation matrix with proper anchor handling\n        const localMatrix = this.getLocalMatrix();\n\n        // If we have a parent, we need to transform our logical values through the parent hierarchy\n        if (this._parent) {\n            const parentAbsolute = this._parent.getAbsolutePosition();\n            const absoluteMatrix = this.multiplyMatrices(parentAbsolute.matrix, localMatrix);\n\n            // Calculate absolute values by combining with parent\n            const absolutePosition = this.transformPointThroughParent(this._position, parentAbsolute);\n            const absoluteScale = new Vector2(\n                this._scale.x * parentAbsolute.scale.x,\n                this._scale.y * parentAbsolute.scale.y\n            );\n            const absoluteRotation = (this._rotation + parentAbsolute.rotation) % 360;\n\n            return {\n                position: absolutePosition,\n                scale: absoluteScale,\n                rotation: absoluteRotation,\n                matrix: absoluteMatrix\n            };\n        }\n\n        // No parent, so absolute values are just our local values\n        return {\n            position: this._position.clone(),\n            scale: this._scale.clone(),\n            rotation: this._rotation,\n            matrix: localMatrix\n        };\n    }\n\n    private transformPointThroughParent(point: Vector2, parentAbsolute: { position: Vector2; scale: Vector2; rotation: number }): Vector2 {\n        // Apply parent's scale and rotation to the point, then add parent's position\n        const radians = parentAbsolute.rotation * (Math.PI / 180);\n        const cos = Math.cos(radians);\n        const sin = Math.sin(radians);\n        \n        // Scale first\n        const scaledX = point.x * parentAbsolute.scale.x;\n        const scaledY = point.y * parentAbsolute.scale.y;\n        \n        // Then rotate\n        const rotatedX = scaledX * cos - scaledY * sin;\n        const rotatedY = scaledX * sin + scaledY * cos;\n        \n        // Finally translate by parent's position\n        return new Vector2(\n            rotatedX + parentAbsolute.position.x,\n            rotatedY + parentAbsolute.position.y\n        );\n    }\n\n    private getLocalMatrix(): number[] {\n        // Convert degrees to radians\n        const radiansRotation = this._rotation * (Math.PI / 180);\n        const cos = Math.cos(radiansRotation);\n        const sin = Math.sin(radiansRotation);\n\n        // Convert relative anchor (0-1) to absolute coordinates based on element size\n        const anchorX = this._anchor.x * this._size.x;\n        const anchorY = this._anchor.y * this._size.y;\n\n        // Build transformation matrix directly: translate(pos + anchor) * rotate * scale * translate(-anchor)\n        // This matches CSS transform-origin behavior\n        const scaleX = this._scale.x;\n        const scaleY = this._scale.y;\n        \n        const a = scaleX * cos;\n        const b = scaleX * sin;\n        const c = -scaleY * sin;\n        const d = scaleY * cos;\n        \n        const tx = this._position.x + anchorX - (a * anchorX + c * anchorY);\n        const ty = this._position.y + anchorY - (b * anchorX + d * anchorY);\n\n        return [\n            a, b, 0, 0,\n            c, d, 0, 0,\n            0, 0, 1, 0,\n            tx, ty, 0, 1\n        ];\n    }\n\n    private multiplyMatrices(a: number[], b: number[]): number[] {\n        // Multiply two 4x4 matrices (stored as 16-element arrays in column-major order)\n        const result = new Array(16);\n\n        for (let i = 0; i < 4; i++) {\n            for (let j = 0; j < 4; j++) {\n                result[i * 4 + j] =\n                    a[i * 4 + 0] * b[0 * 4 + j] +\n                    a[i * 4 + 1] * b[1 * 4 + j] +\n                    a[i * 4 + 2] * b[2 * 4 + j] +\n                    a[i * 4 + 3] * b[3 * 4 + j];\n            }\n        }\n\n        return result;\n    }\n\n    public get absolute(): {\n        position: Vector2;\n        scale: Vector2;\n        rotation: number;\n        matrix: number[];\n    } {\n        return this.getAbsolutePosition();\n    }\n\n    public setScale(scale: number, scaleY?: number): void;\n    public setScale(scale: Vector2): void;\n    public setScale(scale: Vector2 | number, scaleY?: number): void {\n        if (typeof scale === 'number') {\n            this._scale = new Vector2(scale, scaleY ?? scale);\n        } else {\n            this._scale = scale;\n        }\n        this._update();\n    }\n\n    public setRotation(rotation: number) {\n        this._rotation = rotation;\n        this._update();\n    }\n\n    public setAnchor(anchor: Vector2) {\n        this._anchor = anchor;\n        this._update();\n    }\n\n    public setSize(size: Vector2) {\n        this._size = size;\n        this._update();\n    }\n\n    public get matrix() {\n        // Now that we handle anchor points mathematically instead of via CSS transform-origin,\n        // the matrix getter should return the local matrix with proper anchor point handling\n        return this.getLocalMatrix();\n    }\n\n    private _update() {\n        this._responders.forEach(responder => {\n            responder({ position: this.position, scale: this.scale, rotation: this.rotation, matrix: this.matrix });\n        });\n    }\n\n    public setMatrix(matrix: number[]) {\n        if (matrix.length !== 16) {\n            throw new Error('Matrix must be a 16-element array representing a 4x4 matrix');\n        }\n\n        // Extract components from the 4x4 matrix (column-major order)\n        const a = matrix[0];  // scale_x * cos(rotation)\n        const b = matrix[1];  // scale_x * sin(rotation)\n        const c = matrix[4];  // -scale_y * sin(rotation)\n        const d = matrix[5];  // scale_y * cos(rotation)\n        const tx = matrix[12]; // translation x\n        const ty = matrix[13]; // translation y\n\n        // Decompose scale\n        const scaleX = Math.sqrt(a * a + b * b);\n        const scaleY = Math.sqrt(c * c + d * d);\n\n        // Decompose rotation (in radians, then convert to degrees)\n        const rotation = Math.atan2(b, a) * (180 / Math.PI);\n\n        // Calculate position considering anchor point\n        // Since the matrix includes anchor transformations, we need to reverse them\n        const anchorX = this._anchor.x * this._size.x;\n        const anchorY = this._anchor.y * this._size.y;\n        \n        // The matrix equation is: translate(pos + anchor) * rotate * scale * translate(-anchor)\n        // So: tx = pos_x + anchor_x - (a * anchor_x + c * anchor_y)\n        // Therefore: pos_x = tx - anchor_x + (a * anchor_x + c * anchor_y)\n        const positionX = tx - anchorX + (a * anchorX + c * anchorY);\n        const positionY = ty - anchorY + (b * anchorX + d * anchorY);\n\n        // Update transform properties\n        this._position = new Vector2(positionX, positionY);\n        this._scale = new Vector2(scaleX, scaleY);\n        this._rotation = rotation;\n        \n        this._update();\n    }\n\n    update() {\n        this._update();\n    }\n\n}\n\n", "import { Transform, TransformOptions } from '../math/transform';\nimport { TickerReturnData as TRD } from '../busywork/ticker';\n\nexport interface HTMLOptions {\n    type?: keyof HTMLElementTagNameMap;\n    style?: Partial<CSSStyleDeclaration>;\n    transform?: TransformOptions;\n    classList?: string[];\n    text?: string;\n    onMouseDown?: (event: MouseEvent, element: HTML) => void;\n    onMouseUp?: (event: MouseEvent, element: HTML) => void;\n    onMouseMove?: (event: MouseEvent, element: HTML) => void;\n    onMouseEnter?: (event: MouseEvent, element: HTML) => void;\n    onMouseLeave?: (event: MouseEvent, element: HTML) => void;\n    children?: HTML[];\n}\n\nexport class HTML {\n    public readonly type: keyof HTMLElementTagNameMap;\n    public readonly options: HTMLOptions;\n    public readonly dom: HTMLElement;\n    public readonly transform: Transform;\n    public children: HTML[] = [];\n    public constructor(options: HTMLOptions = {}) {\n        this.options = options;\n        this.type = this.options.type || 'div';\n        this.dom = document.createElement(this.type);\n        this.dom.classList.add('_element', '_' + this.type);\n        if (this.options.classList) {\n            this.options.classList.forEach(className => {\n                this.dom.classList.add(className);\n            });\n        }\n        if (this.options.text) {\n            this.setText(this.options.text);\n        }\n        if (this.options.transform?.size) {\n            this.setStyle({\n                width: this.options.transform.size.x + 'px',\n                height: this.options.transform.size.y + 'px',\n            });\n        }\n        this.setStyle(this.options.style);\n        this.transform = new Transform(this.options.transform);\n        this.transform.setResponder(({ matrix, position, scale, rotation }) => {\n            // Set transform-origin to 0,0 to ensure CSS doesn't interfere with our mathematical anchor point handling\n            this.dom.style.transformOrigin = '0 0';\n            this.dom.style.transform = `matrix3d(${matrix.join(',')})`;\n        });\n\n        if (options.onMouseDown) {\n            this.dom.addEventListener('pointerdown', (e) => {\n                this.options.onMouseDown(e, this);\n            });\n        }\n        if (options.onMouseUp) {\n            this.dom.addEventListener('pointerup', (e) => {\n                this.options.onMouseUp(e, this);\n            });\n        }\n\n        if (options.onMouseMove) {\n            this.dom.addEventListener('pointermove', (e) => {\n                this.options.onMouseMove(e, this);\n            });\n        }\n        if (options.onMouseEnter) {\n            this.dom.addEventListener('pointerenter', (e) => {\n                this.options.onMouseEnter(e, this);\n            });\n        }\n        if (options.onMouseLeave) {\n            this.dom.addEventListener('pointerleave', (e) => {\n                this.options.onMouseLeave(e, this);\n            });\n        }\n        this.setText(this.options.text);\n\n        if (options.children) {\n            options.children.forEach(child => {\n                this.append(child);\n            });\n        }\n    }\n\n    public append(element: HTML, absolute: boolean = false): HTML {\n        this.dom.appendChild(element.dom);\n        if (!element.transform.hasParent() && !absolute) {\n            element.transform.setParent(this.transform);\n        }\n        this.children.push(element);\n        return element;\n    }\n\n    public remove() {\n        this.dom.remove();\n    }\n\n    public setStyle(style: Partial<CSSStyleDeclaration>) {\n        if (style) {\n            Object.assign(this.dom.style, style);\n        }\n    }\n\n    public setText(text: string) {\n        this.dom.textContent = text;\n    }\n\n    public setHTML(html: string) {\n        this.dom.innerHTML = html;\n    }\n\n    protected _visible: boolean = true;\n\n    public set visible(visible: boolean) {\n        this._visible = visible;\n        this.dom.style.display = visible ? 'block' : 'none';\n    }\n\n    public get visible() {\n        return this._visible;\n    }\n\n    public set opacity(opacity: number) {\n        this.dom.style.opacity = opacity.toString();\n    }\n\n    public tick(obj: TRD) {\n        if (this.visible) {\n            this.children.forEach(child => {\n                child.tick(obj);\n            });\n        }\n    }\n}", "import { Game } from './base';\r\nimport { TickerReturnData } from './ticker';\r\n\r\nexport class Timer {\r\n\r\n    private events: {\r\n        key: string;\r\n        time: number;\r\n        callback: (delta: number, ticker: TickerReturnData) => void;\r\n    }[] = [];\r\n    public currentTime: number = 0;\r\n\r\n    constructor(private game: Game) {}\r\n\r\n    public add(key: string, when: number, callback: (delta: number, ticker: TickerReturnData) => void) {\r\n\r\n        const time = when + this.currentTime;\r\n        const index = this.events.findIndex(event => event.time > time);\r\n        if (index === -1) {\r\n            this.events.push({\r\n                key,\r\n                time,\r\n                callback\r\n            });\r\n        } else {\r\n            this.events.splice(index, 0, {\r\n                key,\r\n                time,\r\n                callback\r\n            });\r\n        }\r\n    }\r\n\r\n    public cancel(key: string) {\r\n        this.events = this.events.filter(event => event.key !== key);\r\n    }\r\n\r\n    private call(event: (typeof this.events)[number], ticker: TickerReturnData) {\r\n        this.events = this.events.filter(e => e.key !== event.key);\r\n        event.callback(event.time - this.currentTime, ticker);\r\n    }\r\n\r\n    public tick(obj: TickerReturnData) {\r\n        this.currentTime = obj.time;\r\n        for (const event of this.events) {\r\n            if (this.currentTime >= event.time) {\r\n                this.call(event, obj);\r\n            } \r\n            break;\r\n        }\r\n    }\r\n\r\n\r\n}", "import { Game, glob } from './base';\r\nimport { Timer } from './events';\r\n\r\nexport type TickerReturnData = {\r\n    interval: number, intervalS3: number, intervalS10: number, intervalS20: number, totalTime: number, total: number, frameRate: number, frame: number, maxRate: number, time: number; \r\n};\r\nexport type TickerCallback = (obj: TickerReturnData) => void;\r\nexport class Ticker {\r\n    private _running: boolean = false;\r\n    private started: boolean = false;\r\n    private pauzedTime: number = 0;\r\n    private intervalKeeper:number[] = []\r\n    private id: number;\r\n    private maxRate: number = 0; \r\n    public timer: Timer;\r\n    public get running(): boolean {\r\n        return this._running;\r\n    }\r\n    public set running(value: boolean) {\r\n        this._running = value;\r\n        \r\n        if (value) {\r\n            this.pTime = performance.now() - this.pauzedTime;\r\n            this.id = window.requestAnimationFrame(this.frame.bind(this));\r\n        } else {\r\n            window.cancelAnimationFrame(this.id);\r\n            this.pauzedTime = performance.now() - this.pTime\r\n            \r\n        }\r\n    }\r\n    constructor(game: Game) {\r\n        document.addEventListener(\"visibilitychange\", () => {\r\n            if (this.started) {\r\n                this.running = !document.hidden;\r\n            }\r\n        });\r\n\r\n        this.timer = new Timer(game);\r\n    }\r\n    private callbacks: TickerCallback[] = [];\r\n    private sTime: number;\r\n    public get startTime() {\r\n        return this.sTime;\r\n    }\r\n    private get eTime() {\r\n        return performance.now() - this.sTime;\r\n    }\r\n    // public get elapsed() {\r\n    //     return this.eTime;\r\n    // }\r\n    private pTime: number;\r\n    private frameN: number = 0;\r\n\r\n    private averagedInterval(count: number, interval: number){\r\n        const average = this.intervalKeeper.slice(0,count).reduce((partialSum, a) => partialSum + a, 0) / count;\r\n        return Math.abs(interval - average) > 20?interval: average;\r\n    }\r\n\r\n    public frame(timeStamp: number) {\r\n\r\n        if (this.running) {\r\n            const interval = timeStamp - this.pTime;\r\n            this.intervalKeeper = this.intervalKeeper.slice(1,20);\r\n            this.intervalKeeper.push(interval);\r\n            while(this.intervalKeeper.length<20){\r\n                this.intervalKeeper.push(interval);\r\n            }\r\n            \r\n            this.pTime = timeStamp;\r\n            this.frameN++;\r\n            this.maxRate = Math.max(this.maxRate, 1000 / interval);\r\n            glob.frame = this.frameN;\r\n            const o = {\r\n                interval,\r\n                totalTime: this.pTime - this.sTime ,\r\n                total: this.eTime,\r\n                frameRate: 1000 / interval,\r\n                frame: this.frameN,\r\n                intervalS3: this.averagedInterval(3, interval),\r\n                intervalS10: this.averagedInterval(10, interval),\r\n                intervalS20: this.averagedInterval(20, interval),\r\n                maxRate: this.maxRate,\r\n                time: timeStamp\r\n            };\r\n            glob.ticker = o;\r\n\r\n            this.timer.tick(o);\r\n\r\n            this.callbacks.forEach((c) => {\r\n                c(o);\r\n            });\r\n\r\n            this.id = window.requestAnimationFrame(this.frame.bind(this));\r\n        }\r\n    }\r\n\r\n    public start() {\r\n        this.started = true;\r\n        this._running = true;\r\n        this.sTime = performance.now();\r\n        this.pTime = performance.now();\r\n        this.id = window.requestAnimationFrame(this.frame.bind(this));\r\n    }\r\n\r\n    public add(callback: TickerCallback) {\r\n        this.callbacks.push(callback);\r\n    }\r\n\r\n    public stop() {\r\n        this.running = false;\r\n    }\r\n}\r\n", "import { HTML } from '../element/element';\r\nimport { Screen } from '../element/screen';\r\nimport { Timer } from './events';\r\nimport { Ticker, TickerReturnData } from './ticker';\r\nimport { Debug } from './screens/main/sections/debug';\r\n\r\nexport var glob = new class {\r\n    public game: Game;\r\n    public ticker: TickerReturnData;\r\n    public frame: number = 0;\r\n    public timer: Timer;\r\n    public debug: Debug;\r\n    public mobile: boolean = false;\r\n};\r\n\r\nexport abstract class Game extends HTML {\r\n    public ticker: Ticker;\r\n    protected screens: Record<string, Screen> = {};\r\n\r\n    public constructor() {\r\n        super({ style: { width: '100%', height: '100%' } });\r\n        glob.game = this;\r\n        this.init();\r\n    }\r\n\r\n\r\n    init() {\r\n        this.ticker = new Ticker(this);\r\n        this.ticker.add(this.tick.bind(this));\r\n        this.ticker.start();\r\n        glob.timer = this.ticker.timer;\r\n    }\r\n\r\n    addScreen(screen: Screen): Screen {\r\n        this.screens[screen.key] = screen;\r\n        this.append(screen);\r\n        return screen;\r\n    }\r\n\r\n    public tick(obj: TickerReturnData) {\r\n        Object.values(this.screens).forEach(screen => {\r\n            screen.tick(obj);\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n", "import { HTML, HTMLOptions } from \"./element\";\r\n\r\nexport interface FlexOptions extends HTMLOptions {\r\n    justifyContent?: 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around';\r\n    alignItems?: 'flex-start' | 'flex-end' | 'center' | 'stretch' | 'baseline';\r\n    alignContent?: 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around';\r\n    flexWrap?: 'nowrap' | 'wrap' | 'wrap-reverse';\r\n    flexDirection?: 'row' | 'row-reverse' | 'column' | 'column-reverse';\r\n    gap?: number;\r\n}\r\n\r\nexport class Flex extends HTML {\r\n    public readonly options: FlexOptions;\r\n    public constructor(options: FlexOptions) {\r\n        super({ ...options, classList: [...(options.classList || []), '_flex'] });\r\n\r\n        this.setStyle({\r\n            flexDirection: options.flexDirection,\r\n            justifyContent: options.justifyContent,\r\n            alignItems: options.alignItems,\r\n            alignContent: options.alignContent,\r\n            flexWrap: options.flexWrap,\r\n            gap: `${options.gap}px`,\r\n        });\r\n        this.setStyle(options.style || {});\r\n    }\r\n\r\n    public set visible(visible: boolean) {\r\n        this._visible = visible;\r\n        this.dom.style.display = visible ? 'flex' : 'none';\r\n    }\r\n\r\n    public get visible() {\r\n        return this._visible;\r\n    }\r\n}", "import { Flex } from './flex';\r\n\r\nexport class Screen extends Flex {\r\n    public constructor(public readonly key: string) {\r\n        super({\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            flexDirection: 'column',\r\n            style: {\r\n                width: '100%',\r\n                height: '100%', backgroundColor: '#2a3e48',\r\n                transition: 'transform 0.6s ease-in-out',\r\n            }, classList: ['screen'],\r\n        });\r\n    }\r\n}\r\n", "export type easing = (time: number) => number;\r\n\r\nexport interface IEasingMap {\r\n  linear: easing;\r\n  quadratic: easing;\r\n  cubic: easing;\r\n  elastic: easing;\r\n  inQuad: easing;\r\n  outQuad: easing;\r\n  inOutQuad: easing;\r\n  inCubic: easing;\r\n  outCubic: easing;\r\n  inOutCubic: easing;\r\n  inQuart: easing;\r\n  outQuart: easing;\r\n  inOutQuart: easing;\r\n  inQuint: easing;\r\n  outQuint: easing;\r\n  inOutQuint: easing;\r\n  inSine: easing;\r\n  outSine: easing;\r\n  inOutSine: easing;\r\n  inExpo: easing;\r\n  outExpo: easing;\r\n  inOutExpo: easing;\r\n  inCirc: easing;\r\n  outCirc: easing;\r\n  inOutCirc: easing;\r\n}\r\n\r\nexport const Ease: IEasingMap = {\r\n  // No easing, no acceleration\r\n  linear: (t) => t,\r\n\r\n  // Accelerates fast, then slows quickly towards end.\r\n  quadratic: (t) => t * (-(t * t) * t + 4 * t * t - 6 * t + 4),\r\n\r\n  // Overshoots over 1 and then returns to 1 towards end.\r\n  cubic: (t) => t * (4 * t * t - 9 * t + 6),\r\n\r\n  // Overshoots over 1 multiple times - wiggles around 1.\r\n  elastic: (t) => t * (33 * t * t * t * t - 106 * t * t * t + 126 * t * t - 67 * t + 15),\r\n\r\n  // Accelerating from zero velocity\r\n  inQuad: (t) => t * t,\r\n\r\n  // Decelerating to zero velocity\r\n  outQuad: (t) => t * (2 - t),\r\n\r\n  // Acceleration until halfway, then deceleration\r\n  inOutQuad: (t) => t <.5 ? 2 * t * t : -1 + (4 - 2 * t) * t,\r\n\r\n  // Accelerating from zero velocity\r\n  inCubic: (t) => t * t * t,\r\n\r\n  // Decelerating to zero velocity\r\n  outCubic: (t) => (--t) * t * t + 1,\r\n\r\n  // Acceleration until halfway, then deceleration\r\n  inOutCubic: (t) => t <.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1,\r\n\r\n  // Accelerating from zero velocity\r\n  inQuart: (t) => t * t * t * t,\r\n\r\n  // Decelerating to zero velocity\r\n  outQuart: (t) => 1 - (--t) * t * t * t,\r\n\r\n  // Acceleration until halfway, then deceleration\r\n  inOutQuart: (t) => t <.5 ? 8 * t * t * t * t : 1 - 8 * (--t) * t * t * t,\r\n\r\n  // Accelerating from zero velocity\r\n  inQuint: (t) => t * t * t * t * t,\r\n\r\n  // Decelerating to zero velocity\r\n  outQuint: (t) => 1 + (--t) * t * t * t * t,\r\n\r\n  // Acceleration until halfway, then deceleration\r\n  inOutQuint: (t) => t < .5 ? 16 * t * t * t * t * t : 1 + 16 * (--t) * t * t * t * t,\r\n\r\n  // Accelerating from zero velocity\r\n  inSine: (t) => -Math.cos(t * (Math.PI / 2)) + 1,\r\n\r\n  // Decelerating to zero velocity\r\n  outSine: (t) => Math.sin(t * (Math.PI / 2)),\r\n\r\n  // Accelerating until halfway, then decelerating\r\n  inOutSine: (t) => -(Math.cos(Math.PI * t) - 1) / 2,\r\n\r\n  // Exponential accelerating from zero velocity\r\n  inExpo: (t) => Math.pow(2, 10 * (t - 1)),\r\n\r\n  // Exponential decelerating to zero velocity\r\n  outExpo: (t) => -Math.pow(2, -10 * t) + 1,\r\n\r\n  // Exponential accelerating until halfway, then decelerating\r\n  inOutExpo: (t) => {\r\n    t /= .5;\r\n    if (t < 1) return Math.pow(2, 10 * (t - 1)) / 2;\r\n    t--;\r\n    return (-Math.pow( 2, -10 * t) + 2) / 2;\r\n  },\r\n\r\n  // Circular accelerating from zero velocity\r\n  inCirc: (t) => -Math.sqrt(1 - t * t) + 1,\r\n\r\n  // Circular decelerating to zero velocity Moves VERY fast at the beginning and\r\n  // then quickly slows down in the middle. This tween can actually be used\r\n  // in continuous transitions where target value changes all the time,\r\n  // because of the very quick start, it hides the jitter between target value changes.\r\n  outCirc: (t) => Math.sqrt(1 - (t = t - 1) * t),\r\n\r\n  // Circular acceleration until halfway, then deceleration\r\n  inOutCirc: (t) => {\r\n    t /= .5;\r\n    if (t < 1) return -(Math.sqrt(1 - t * t) - 1) / 2;\r\n    t -= 2;\r\n    return (Math.sqrt(1 - t * t) + 1) / 2;\r\n  }\r\n};", "import { glob } from '../busywork/base';\r\nimport { Vector2 } from './vector2';\r\n\r\nexport class Utils {\r\n    static clamp(value: Vector2, min: Vector2, max: Vector2): Vector2;\r\n    static clamp(value: number, min: number, max: number): number;\r\n    static clamp(value: number|Vector2, min: number|Vector2, max: number|Vector2): number|Vector2    {\r\n        if (typeof value === 'number' && typeof min === 'number' && typeof max === 'number') {\r\n            return Math.max(min, Math.min(value, max));\r\n        } else if (value instanceof Vector2 && min instanceof Vector2 && max instanceof Vector2) {\r\n            return new Vector2(Math.max(min.x, Math.min(value.x, max.x)), Math.max(min.y, Math.min(value.y, max.y)));\r\n        }\r\n    }\r\n\r\n    static lerp(a: number, b: number, t: number): number {\r\n        return a + (b - a) * t;\r\n    }\r\n\r\n    static isMobile(): boolean {\r\n        return glob.mobile;\r\n    }\r\n}", "import { HTML } from '../../../../element/element';\r\nimport { Vector2 } from '../../../../math/vector2';\r\n\r\n\r\nexport class Section extends HTML {\r\n    public constructor(size: Vector2, style: Partial<CSSStyleDeclaration>, gridParams: [number, number, number, number] = [1, 1, 1, 1]) {\r\n        super({\r\n            style: {\r\n                width: size.x + 'px',\r\n                height: size.y + 'px',\r\n\r\n                // boxShadow: '0px 0px 200px #0000004a',\r\n                transition: 'width 1s cubic-bezier(0.4, 0, 0.2, 1), margin-left 1s cubic-bezier(0.4, 0, 0.2, 1)',\r\n\r\n                overflow: 'hidden',\r\n                borderRadius: '10px',\r\n                gridColumn: gridParams[0] + ' / span ' + gridParams[1],\r\n                gridRow: gridParams[2] + ' / span ' + gridParams[3],\r\n                ...style,\r\n            },\r\n            transform: {\r\n                size: size,\r\n            },\r\n        });\r\n    }\r\n\r\n    updateGrid(gridParams: [number, number, number, number]) {\r\n        this.dom.style.gridColumn = gridParams[0] + ' / span ' + gridParams[1];\r\n        this.dom.style.gridRow = gridParams[2] + ' / span ' + gridParams[3];\r\n    }\r\n}\r\n", "import { HTML } from '../../../../../element/element';\r\nimport { Flex } from '../../../../../element/flex';\r\nimport { Ease } from '../../../../../math/easings';\r\nimport { Utils } from '../../../../../math/util';\r\nimport { Vector2 } from '../../../../../math/vector2';\r\nimport { TickerReturnData } from '../../../../ticker';\r\nimport { TileGame } from '../../tilegame';\r\nimport { Section } from '../../util/section';\r\n\r\nexport class Computer extends Section {\r\n    textElement: HTML;\r\n    scanline: HTML;\r\n    cursor: HTML;\r\n    screen: HTML;\r\n    textElement2: HTML;\r\n    get sitter() {\r\n        return this.parent.office.sitter\r\n    };\r\n    public constructor(private parent: TileGame, gridParams: ConstructorParameters<typeof Section>[2]) {\r\n        super(new Vector2(450, 350), {\r\n            backgroundColor: '#90857f',\r\n            width: '100%',\r\n            height: '350px',\r\n            justifyContent: 'flex-start',\r\n            overflow: 'hidden',\r\n        }, gridParams);\r\n\r\n\r\n        this.screen = this.append(new HTML({\r\n            style: {\r\n                width: '440px',\r\n                height: '330px',\r\n                backgroundColor: '#222432',\r\n                boxShadow: 'inset rgb(0 0 0) 6px 3px 200px 3px',\r\n                borderRadius: '30px',\r\n                overflow: 'hidden',\r\n                cursor: 'none',\r\n            },\r\n            transform: {\r\n                position: new Vector2(5, 10),\r\n            },\r\n            onMouseEnter: () => {\r\n                this.cursor.visible = true;\r\n            },\r\n            onMouseMove: (e) => {\r\n                this.cursor.transform.setPosition(new Vector2(e.offsetX, e.offsetY));\r\n                this.sitter.person.armTwist = [0.5, 2];\r\n            },\r\n            onMouseLeave: () => {\r\n                this.sitter.person.armTwist = [0.5, -0.5];\r\n                this.cursor.visible = false;\r\n            }\r\n        }));\r\n\r\n        this.textElement = this.screen.append(new Flex({\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            style: {\r\n                width: '100%',\r\n                height: '60%',\r\n                fontSize: '100px',\r\n                color: '#fff',\r\n                fontWeight: 'bold',\r\n                lineHeight: '90px',\r\n                fontFamily: 'monospace',\r\n                borderRadius: '30px',\r\n                pointerEvents: 'none',\r\n                filter: 'sepia(0.6) blur(0.5px)',\r\n                letterSpacing: '4px',\r\n                textAlign: 'center',\r\n                marginTop: '20%',\r\n            }\r\n        }));\r\n        this.textElement2 = this.screen.append(new Flex({\r\n            flexDirection: 'column',\r\n            text: 'completed',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            style: {\r\n                width: '100%',\r\n                height: '40%',\r\n                fontSize: '40px',\r\n                color: '#fff',\r\n                fontWeight: 'bold',\r\n                lineHeight: '90px',\r\n                fontFamily: 'monospace',\r\n                borderRadius: '30px',\r\n                pointerEvents: 'none',\r\n                filter: 'sepia(0.6) blur(0.5px)',\r\n                letterSpacing: '4px',\r\n                textAlign: 'center',\r\n            }\r\n        }));\r\n\r\n        this.cursor = this.screen.append(new HTML({\r\n            style: {\r\n                width: '16px',\r\n                height: '40px',\r\n                backgroundColor: '#fff',\r\n                outline: '1px solid black',\r\n                filter: 'drop-shadow(3px 6px 6px #000000ff) blur(3px)',\r\n                pointerEvents: 'none',\r\n            },\r\n            transform: {\r\n                position: new Vector2(30, 40),\r\n                scale: new Vector2(0.3, 0.3),\r\n                rotation: -20,\r\n            }\r\n        }));\r\n        this.cursor.append(new HTML({\r\n            style: {\r\n                width: '60px',\r\n                height: '80px',\r\n                backgroundColor: '#fff',\r\n                //triangle\r\n                clipPath: 'polygon(50% 0%, 0% 100%, 100% 100%)',\r\n            },\r\n            transform: {\r\n                position: new Vector2(-22, -70),\r\n            }\r\n        }));\r\n\r\n        this.scanline = this.screen.append(new HTML({\r\n            style: {\r\n                width: '100%',\r\n                height: '90px',\r\n                backgroundColor: '#22243212',\r\n                filter: 'drop-shadow(0px 0px 10px #ffffff40)  blur(2px)',\r\n                pointerEvents: 'none',\r\n            }\r\n        }));\r\n\r\n        this.cursor.visible = false;\r\n        this.setCode('012');\r\n        this.setTT('');\r\n        this.completed = 2;\r\n    }\r\n\r\n    public _text: string = '';\r\n\r\n    private _code: string | undefined = undefined;\r\n    public setCode(code: string) {\r\n        this._code = code;\r\n    }\r\n\r\n    private _completed: number = 2;\r\n    public set completed(value: number) {\r\n        this.textElement2.setText(value.toString().padStart(2, '0')+'/'+this.target.toString().padStart(2, '0'));\r\n        this._completed = value;\r\n    }\r\n\r\n    public get completed() {\r\n        return this._completed;\r\n    }\r\n\r\n    public target: number = 3;\r\n\r\n\r\n\r\n    public setTT(text: string) {\r\n        if (!this._code) return;\r\n        if (text.length > this._code.length) return;\r\n        this._text = text;\r\n\r\n        this.textElement.setText(text\r\n            .replaceAll('0', '#')\r\n            .replaceAll('1', '$')\r\n            .replaceAll('2', '&')\r\n            .replaceAll('3', '!')\r\n            .replaceAll('4', '@')\r\n            .replaceAll('5', '=')\r\n            .padEnd(this._code?.length || 4, '_'));\r\n\r\n        if (this._text.indexOf('_') === -1) {\r\n            if (this._text.substring(0, this._code.length) === this._code) {\r\n                this.screen.setStyle({\r\n                    backgroundColor: '#456c44',\r\n                });\r\n\r\n                this.setCode(undefined);\r\n                this.completed++;\r\n\r\n                setTimeout(() => {\r\n                    const code = Array.from({ length: 5 }, () => Math.floor(Math.random() * 6).toString()).join('');\r\n                    this.setCode(code);\r\n                    this.setTT('_____');\r\n                }, 1000);\r\n            } else {\r\n                this.screen.setStyle({\r\n                    backgroundColor: '#6c4444',\r\n                });\r\n                setTimeout(() => {\r\n\r\n                    let NC = ''\r\n                    for (let i = 0; i < this._code.length; i++) {\r\n                        if (this._code[i] === this._text[i]) {\r\n                            NC += this._code[i];\r\n                        } else {\r\n                            NC += '_';\r\n                        }\r\n                    }\r\n\r\n                    this.setTT(NC);\r\n                }, 400);\r\n            }\r\n        } else {\r\n            this.screen.setStyle({\r\n                backgroundColor: '#222432',\r\n            });\r\n        }\r\n    }\r\n\r\n    public addTT(text: string) {\r\n        const index = this._text.indexOf('_');\r\n        if (index === -1) return;   \r\n        this.setTT(this._text.substring(0, index) + text + this._text.substring(index + 1));\r\n    }\r\n\r\n    tick(obj: TickerReturnData) {\r\n        super.tick(obj);\r\n        this.scanline.transform.setPosition(new Vector2(0, (obj.total % 4000) / 4000 * 700 - 100));\r\n\r\n        let t = (this.parent.office.tired-0.5)*2;\r\n\r\n        if (t > 0.25) {\r\n            this.setStyle({\r\n                filter: `blur(${Ease.inOutCubic(Math.sin(obj.total*0.0001 + 0.2)*Math.sin(obj.total*0.001 + 0.2)*t)*4}px)`,\r\n            });\r\n        } else {\r\n            this.setStyle({\r\n                filter: `blur(0px)`,\r\n            });\r\n        }\r\n    }\r\n\r\n    updateGrid(gridParams: [number, number, number, number]) {\r\n        super.updateGrid(gridParams);\r\n\r\n        if (Utils.isMobile()) {\r\n            this.dom.style.width = '450px';\r\n            this.dom.style.height = '100%';\r\n        } else {\r\n            this.dom.style.width = '100%';\r\n            this.dom.style.height = '350px';\r\n        }\r\n\r\n    }\r\n}", "import { HTML, HTMLOptions } from \"./element\";\r\n\r\nexport class Button extends HTML {\r\n    public constructor(options: HTMLOptions) {\r\n        super({ ...options, classList: [...(options.classList || []), '_button'] });\r\n        \r\n        this.setText(this.options.text);\r\n    }\r\n}", "import { Button } from '../../../../../element/button';\r\nimport { HTML } from '../../../../../element/element';\r\nimport { Vector2 } from '../../../../../math/vector2';\r\n\r\n\r\nexport function getBigKeyboard(position: Vector2, rotation: number, onMouseDown: (key: 0 | 1 | 2 | 3 | 4 | 5) => void, onMouseUp: () => void) {\r\n    const wrap = new HTML({\r\n        style: {\r\n            width: '450px',\r\n            height: '240px',\r\n            backgroundColor: '#a69d97',\r\n            borderRadius: '10px',\r\n            boxShadow: '1px 1.8px 0px #00000040',\r\n            filter: 'drop-shadow(3px 4px 2px #00000020)',\r\n        },\r\n        transform: {\r\n            position: position,\r\n            rotation: rotation,\r\n            anchor: new Vector2(0.5, 0.5)\r\n        },\r\n    });\r\n\r\n    const buttons: Button[] = [];\r\n    for (let i = 0; i < 6; i++) {\r\n        let e: NodeJS.Timeout;\r\n        const b = new Button({\r\n            style: {\r\n                width: '94px',\r\n                height: '94px',\r\n                backgroundColor: '#a59c96',\r\n                borderRadius: '7px',\r\n                boxShadow: '6px 6px 2px #00000030, inset 28px 28px 28px #00000020',\r\n                cursor: 'pointer',\r\n                padding: '0px',\r\n                border: 'none',\r\n                transition: 'box-shadow 0.04s ease-in-out',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                fontSize: '80px',\r\n                fontWeight: 'bold',\r\n                color: '#776b6bcc',\r\n                fontFamily: 'monospace',\r\n                \r\n            },\r\n            text: ['#', '$', '&', '!', '@', '='][i],\r\n            onMouseDown: () => {\r\n                b.dom.style.boxShadow = '3px 3px 0px #00000040, inset 28px 28px 28px #00000020';\r\n                onMouseDown(i as 0 | 1 | 2 | 3 | 4 | 5);\r\n            },\r\n            onMouseUp: () => {\r\n                b.dom.style.boxShadow = '6px 6px 2px #00000030, inset 28px 28px 28px #00000020';\r\n                onMouseUp();\r\n            },\r\n            onMouseLeave: () => {\r\n                b.dom.style.boxShadow = '6px 6px 2px #00000030, inset 28px 28px 28px #00000020';\r\n                onMouseUp();\r\n            },\r\n            transform: {\r\n                position: new Vector2(\r\n                    50 + (i % 3) * (18 * 7), \r\n                    10 + Math.floor(i / 3) * 110\r\n                ),\r\n                anchor: new Vector2(0.5, 0.5)\r\n            }\r\n        });\r\n        wrap.append(buttons[i] = b);\r\n    }\r\n\r\n\r\n\r\n    return wrap;\r\n}\r\n\r\n", "\r\nimport { Ease } from '../../../../../math/easings';\r\nimport { Utils } from '../../../../../math/util';\r\nimport { Vector2 } from '../../../../../math/vector2';\r\nimport { TickerReturnData } from '../../../../ticker';\r\nimport { TileGame } from '../../tilegame';\r\nimport { Section } from '../../util/section';\r\nimport { getBigKeyboard } from './asset';\r\n\r\n\r\nexport class Keyboard extends Section {\r\n\r\n    get sitter() {\r\n        return this.parent.office.sitter;\r\n    };\r\n    get computer() {\r\n        return this.parent.computer;\r\n    };\r\n    public constructor(private parent: TileGame, gridParams: ConstructorParameters<typeof Section>[2]) {\r\n        super(new Vector2(450, 230), {\r\n            width: '100%',\r\n            height: '100%',\r\n            justifyContent: 'flex-start',\r\n            overflow: 'hidden',\r\n        }, gridParams);\r\n\r\n\r\n        this.append(getBigKeyboard(new Vector2(0, 0), 0, (key) => {\r\n            this.computer.addTT(key.toString());\r\n            if (key === 0 || key === 3) {\r\n                this.sitter.person.armTwist = [0.2, -0.5];\r\n            } else if (key === 1 || key === 4) {\r\n                this.sitter.person.armTwist = [1, -0.5];\r\n            } else if (key === 2 || key === 5) {\r\n                this.sitter.person.armTwist = [0.5, -0.8];\r\n            }\r\n        }, () => {\r\n            this.sitter.person.armTwist = [0.5, -0.5];\r\n        }));\r\n    }\r\n\r\n    tick(obj: TickerReturnData) {\r\n        super.tick(obj);\r\n\r\n        let t = (this.parent.office.tired-0.5)*2;\r\n        if (t > 0.25) {\r\n            this.setStyle({\r\n                filter: `blur(${Ease.inOutCubic(Math.sin(obj.total * 0.0001 + 0.2) * Math.sin(obj.total * 0.001 + 0.2) * t) * 4}px)`,\r\n            });\r\n        } else {\r\n            this.setStyle({\r\n                filter: `blur(0px)`,\r\n            });\r\n        }\r\n    }\r\n\r\n    updateGrid(gridParams: [number, number, number, number]) {\r\n        super.updateGrid(gridParams);\r\n\r\n        if (Utils.isMobile()) {\r\n            this.dom.style.width = '450px';\r\n            this.dom.style.height = '100%';\r\n        } else {\r\n            this.dom.style.width = '100%';\r\n            this.dom.style.height = '230px';\r\n        }\r\n\r\n    }\r\n}\r\n", "import { TransformOptions } from '../math/transform';\r\nimport { Vector2 } from '../math/vector2';\r\nimport { HTML, HTMLOptions } from \"./element\";\r\n\r\nexport type TileOptions = {\r\n    tileSize: Vector2;\r\n    transform: TransformOptions;\r\n    options: HTMLOptions;\r\n    offsetRow?: Vector2;\r\n    offsetCol?: Vector2;\r\n} & ({\r\n    repeatX: number;\r\n    repeatY: number;\r\n} | {\r\n    clip?: boolean;\r\n    size: Vector2;\r\n});\r\n\r\nexport class Tile extends HTML {\r\n    private _options: TileOptions;\r\n    public constructor(options: TileOptions) {\r\n        super({\r\n            transform: options.transform,\r\n        });\r\n        this._options = options;\r\n        let repeatX, repeatY;\r\n        if ('size' in options) {\r\n            repeatX = Math.ceil(options.size.x / options.tileSize.x);\r\n            repeatY = Math.ceil(options.size.y / options.tileSize.y);\r\n            if (options.clip) {\r\n                options.options.style.overflow = 'hidden';\r\n            }\r\n        } else {\r\n            repeatX = options.repeatX ?? 1;\r\n            repeatY = options.repeatY ?? 1;\r\n        }\r\n\r\n        options.offsetRow = options.offsetRow ?? new Vector2(0, 0);\r\n        options.offsetCol = options.offsetCol ?? new Vector2(0, 0);\r\n\r\n        for (let i = 0; i < repeatX; i++) {\r\n            for (let j = 0; j < repeatY; j++) {\r\n                const o = new Vector2(\r\n                    i * options.tileSize.x + (i % 2 !== 0 ? options.offsetCol.x : 0) + (j % 2 !== 0 ? options.offsetRow.x : 0),\r\n                    j * options.tileSize.y + (j % 2 !== 0 ? options.offsetCol.y : 0) + (i % 2 !== 0 ? options.offsetRow.y : 0)\r\n                );\r\n                this.append(new HTML({\r\n                    ...options.options, ...{\r\n                        transform: {\r\n                            ...options.options.transform ?? {},\r\n                            position: options.options.transform?.position?.add(\r\n                                o\r\n                            ) ?? o,\r\n                        }\r\n                    }\r\n                }));\r\n            }\r\n        }\r\n\r\n    }\r\n}", "import { HTML } from '../../../../../element/element';\r\nimport { Vector2 } from '../../../../../math/vector2';\r\n\r\n1\r\nexport function getPaper(position: Vector2, rotation: number = 0, corner: boolean = false) {\r\n    return new HTML({\r\n        style: {\r\n            width: '26px',\r\n            height: '43px',\r\n            backgroundColor: '#d0cdcd',\r\n            filter: 'drop-shadow(0px 0px 2px #0000004a)',\r\n            borderRadius: corner ? '6px 0 0 0' : '0px',\r\n        },\r\n        transform: {\r\n            position: position,\r\n            rotation: rotation,\r\n            anchor: new Vector2(0.5, 0.5),\r\n            size: new Vector2(26, 43),\r\n        }\r\n    });\r\n}", "import { HTML } from '../../../../../element/element';\r\nimport { Vector2 } from '../../../../../math/vector2';\r\n\r\n\r\nexport function getPlant(position: Vector2, rotation: number = 0, leaves: number = 11, angle: number = 66) {\r\n    const plant = new HTML({\r\n        style: {\r\n            width: '75px',\r\n            height: '75px',\r\n            backgroundColor: '#726553',\r\n            borderRadius: '50%',\r\n            boxShadow: 'inset 0px 0px 11px #2f2828, 3px 1px 4px #00000054',\r\n        },\r\n        transform: {    \r\n            position: position,\r\n            rotation: rotation,\r\n            anchor: new Vector2(0.5, 0.5),\r\n            size: new Vector2(75, 75),\r\n        }\r\n    });\r\n\r\n    for (let i = 0; i < leaves; i++) {\r\n        plant.append(getLeaf(new Vector2(40, 8), i * angle));\r\n        const p = getLeaf(new Vector2(40, 8), i * angle);\r\n        p.transform.setScale(new Vector2(p.transform.scale.x * 0.85, p.transform.scale.y * 0.8));\r\n        plant.append(p);\r\n    }\r\n\r\n    return plant;\r\n}\r\n\r\nexport function getLeaf(position: Vector2, rotation: number = 0) {\r\n    const wrap = new HTML({\r\n        style: {\r\n            width: '60px',\r\n            height: '60px',\r\n            filter: 'drop-shadow(0px 0px 6px rgba(9, 48, 15, 0.9))',\r\n\r\n        },\r\n        transform: {\r\n            position: position,\r\n            rotation: rotation,\r\n            scale: new Vector2(0.6 + Math.random() * 0.1, 0.25 + Math.random() * 0.1),\r\n            anchor: new Vector2(0, 0.5),\r\n            size: new Vector2(60, 60),\r\n        }\r\n    });\r\n    wrap.append(new HTML({\r\n        style: {\r\n            width: '60px',\r\n            height: '60px',\r\n            borderRadius: '50% 50% 50% 4px',\r\n            backgroundColor: '#3c8b49',\r\n            boxShadow: 'inset 4px 4px 20px #295629',\r\n        },\r\n        transform: {\r\n            rotation: 45,\r\n            anchor: new Vector2(0.5, 0.9),\r\n            size: new Vector2(60, 60),\r\n        }\r\n    }));\r\n\r\n    return wrap;\r\n}\r\n\r\n\r\nexport function getCoffeeMachine(position: Vector2, rotation: number = 0, leaves: number = 11, angle: number = 66) {\r\n    const table = new HTML({\r\n        style: {\r\n            width: '75px',\r\n            height: '90px',\r\n            backgroundColor: '#674b47',\r\n            borderRadius: '5px',\r\n            border: '10px solid #664a46',\r\n            boxSizing: 'border-box',\r\n            boxShadow: 'inset 0px 0px 20px #79514b, 3px 1px 4px #00000054',\r\n        },\r\n        transform: {    \r\n            position: position,\r\n            rotation: rotation,\r\n            anchor: new Vector2(0.5, 0.5),\r\n            size: new Vector2(75, 75),\r\n        }\r\n    });\r\n\r\n    table.append(new HTML({\r\n        style: {\r\n            width: '50px',\r\n            height: '40px',\r\n            backgroundColor: '#504f5a',\r\n            borderRadius: '5px',\r\n            boxShadow: 'inset 0px 0px 11px #2f2828, 3px 1px 4px #00000054',\r\n        },\r\n        transform: {\r\n            position: new Vector2(0, 8),\r\n            anchor: new Vector2(0.5, 0.5),\r\n            size: new Vector2(50, 40),\r\n        }\r\n    }));\r\n\r\n    table.append(getTopCup(new Vector2(27, 15), 14));\r\n    table.append(getTopCup(new Vector2(27, 17), -10));\r\n    table.append(getTopCup(new Vector2(30, 30), 180));\r\n    table.append(getTopCup(new Vector2(30, 30), 4));\r\n    table.append(getTopCup(new Vector2(16, 25), 170));\r\n\r\n    return table;\r\n}\r\n\r\nexport function getTopCup(position: Vector2, rotation: number) {\r\n    const wrap = new HTML({\r\n        style: {\r\n            width: '12px',\r\n            height: '12px',\r\n            backgroundColor: '#e4e3e0',\r\n            borderRadius: '100%',\r\n            boxSizing: 'border-box',\r\n            border: '2px solid #e4e3e0',\r\n            boxShadow: 'inset 4px 0px 2px #00000020, 0px 0px 2px #00000090',\r\n\r\n        },\r\n        transform: {\r\n            position: position,\r\n            rotation: rotation,\r\n            anchor: new Vector2(0.5, 0.5),\r\n            size: new Vector2(12, 12),\r\n        }\r\n    });\r\n\r\n    wrap.append(new HTML({\r\n        style: {\r\n            width: '4px',\r\n            height: '4px',\r\n            backgroundColor: '#e4e3e0',\r\n            borderRadius: '1px',\r\n            boxShadow: 'inset 10px 0px 4px #00000030, 0px 0px 1px #00000090',\r\n            zIndex: '-1',\r\n\r\n        },\r\n        transform: {\r\n            position: new Vector2(5, -3),\r\n            anchor: new Vector2(0.5, 0.5),\r\n            size: new Vector2(10, 2),\r\n        }\r\n    }));\r\n\r\n    return wrap;\r\n}\r\n\r\nexport function getPhone(position: Vector2, rotation: number) {\r\n    const wrap = new HTML({\r\n        style: {\r\n            width: '40px',\r\n            height: '45px',\r\n            backgroundColor: '#a69d97',\r\n            borderRadius: '4px',\r\n            filter: 'drop-shadow(3px 4px 2px #00000040)',\r\n        },\r\n        transform: {\r\n            position: position,\r\n            rotation: rotation,\r\n            anchor: new Vector2(0.5, 0.5),\r\n            size: new Vector2(40, 45),\r\n        },\r\n    });\r\n\r\n    wrap.append(new HTML({\r\n        style: {\r\n            width: '15px',\r\n            height: '40px',\r\n            backgroundColor: '#90857f',\r\n            borderRadius: '4px',\r\n            filter: 'drop-shadow(2px 1px 1px #00000040)',\r\n        },\r\n        transform: {\r\n            position: new Vector2(2, 2),\r\n            size: new Vector2(15, 40),\r\n        }\r\n    }));\r\n\r\n    return wrap;\r\n}\r\n\r\n\r\nexport function getKeyboard(position: Vector2, rotation: number) {\r\n    const wrap = new HTML({\r\n        style: {\r\n            width: '60px',\r\n            height: '20px',\r\n            backgroundColor: '#a69d97',\r\n            borderRadius: '2px',\r\n            boxShadow: '1px 1.8px 0px #00000040',\r\n            filter: 'drop-shadow(3px 4px 2px #00000020)',\r\n        },\r\n        transform: {\r\n            position: position,\r\n            rotation: rotation,\r\n            anchor: new Vector2(0.5, 0.5),\r\n            size: new Vector2(60, 20),\r\n        },\r\n    });\r\n\r\n    // for (let i = 0; i < 3; i++) {\r\n    //     let e: NodeJS.Timeout;\r\n    //     const b = new HTML({\r\n    //         style: {\r\n    //             width: '14px',\r\n    //             height: '14px',\r\n    //             backgroundColor: '#a59c96',\r\n    //             borderRadius: '2px',\r\n    //             boxShadow: '1px 1.8px 1px #00000040, inset 2px 2px 3px #00000020',\r\n    //             cursor: 'pointer',\r\n    //             padding: '0px',\r\n    //             border: 'none',\r\n    //         },\r\n\r\n    //         transform: {\r\n    //             position: new Vector2(5 + i * 18, 2),\r\n    //             anchor: new Vector2(0.5, 0.5),\r\n    //             size: new Vector2(14, 14),\r\n    //         }\r\n    //     });\r\n    //     wrap.append(b);\r\n    // }\r\n\r\n    wrap.append(new HTML({\r\n        style: {\r\n            width: '15px',\r\n            height: '20px',\r\n            backgroundColor: '#a69d97',\r\n            borderRadius: '100%',\r\n            boxShadow: '1px 1px 2px #00000040',\r\n        },\r\n        transform: {\r\n            position: new Vector2(72, 4),\r\n            anchor: new Vector2(0.5, 0.5),\r\n            size: new Vector2(15, 20),\r\n        }\r\n    }));\r\n\r\n\r\n\r\n    return wrap;\r\n}\r\n\r\n\r\nexport function getScreen(position: Vector2, rotation: number) {\r\n    const wrap = new HTML({\r\n        style: {\r\n            width: '70px',\r\n            height: '60px',\r\n            filter: 'drop-shadow(3px 4px 5px #00000040)',\r\n\r\n        },\r\n        transform: {\r\n            position: position,\r\n            rotation: rotation,\r\n            anchor: new Vector2(0.5, 0.5),\r\n            size: new Vector2(70, 60),\r\n        },\r\n    });\r\n\r\n    wrap.append(new HTML({\r\n        style: {\r\n            width: '30px',\r\n            height: '50px',\r\n            backgroundColor: '#a69d97',\r\n            borderRadius: '10px',\r\n\r\n        },\r\n        transform: {\r\n            anchor: new Vector2(0.5, 0.5),\r\n            size: new Vector2(30, 50),\r\n            rotation: 30,\r\n            position: new Vector2(8, 11)\r\n        }\r\n    }));\r\n    wrap.append(new HTML({\r\n        style: {\r\n            width: '30px',\r\n            height: '50px',\r\n            backgroundColor: '#a69d97',\r\n            borderRadius: '10px',\r\n\r\n        },\r\n        transform: {\r\n            anchor: new Vector2(0.5, 0.5),\r\n            size: new Vector2(30, 50),\r\n            rotation: -30,\r\n            position: new Vector2(32, 11)\r\n        }\r\n    }));\r\n    wrap.append(new HTML({\r\n        style: {\r\n            width: '40px',\r\n            height: '50px',\r\n            backgroundColor: '#a69d97',\r\n            borderRadius: '6px',\r\n\r\n        },\r\n        transform: {\r\n            anchor: new Vector2(0.5, 0.5),\r\n            size: new Vector2(40, 50),\r\n            position: new Vector2(15, 5)\r\n        }\r\n    }));\r\n    wrap.append(new HTML({\r\n        style: {\r\n            width: '70px',\r\n            height: '20px',\r\n            marginTop: '50px',\r\n            backgroundColor: '#90857f',\r\n            borderRadius: ' 0 0 10px 10px  ',\r\n        },\r\n        transform: {\r\n            size: new Vector2(70, 20),\r\n        }\r\n    }));\r\n\r\n    return wrap;\r\n}", "\r\nimport { HTML } from '../../../../../element/element';\r\nimport { Vector2 } from '../../../../../math/vector2';\r\nimport { getPaper } from './clutter';\r\nimport { getScreen, getKeyboard, getPhone } from './prop';\r\n\r\nexport function getDesk(position: Vector2, rotation: number, screens: 1 | 2 = 1, style: Partial<CSSStyleDeclaration> = {}) {\r\n    const desk = new HTML({\r\n        style: {\r\n            width: '300px',\r\n            height: '120px',\r\n            backgroundColor: '#904639',\r\n            filter: 'drop-shadow(rgba(0, 0, 0, 0.3) 0px 0px 9px)',\r\n            borderRadius: '10px',\r\n            ...style,\r\n        },\r\n        transform: {\r\n            position: position,\r\n            rotation: rotation,\r\n            size: new Vector2(300, 120),\r\n            anchor: new Vector2(0.5, 0.5),\r\n        },\r\n    });\r\n\r\n    if (screens === 2) {\r\n\r\n        desk.append(getScreen(new Vector2(55, -8), -8));\r\n        desk.append(getScreen(new Vector2(135, -8), 8));\r\n    } else {\r\n        desk.append(getScreen(new Vector2(100, -8), 1));\r\n\r\n    }\r\n    desk.append(getKeyboard(new Vector2(105, 85), 0));\r\n\r\n    if (Math.random() > 0.5) desk.append(getPaper(new Vector2(10, 30), 8, Math.random() > 0.3));\r\n    if (Math.random() > 0.5) desk.append(getPaper(new Vector2(60, 70), 80, Math.random() > 0.3));\r\n    if (Math.random() > 0.5) desk.append(getPaper(new Vector2(230, 40), -4, Math.random() > 0.3));\r\n    if (Math.random() > 0.5) desk.append(getPaper(new Vector2(260, 38), 5, Math.random() > 0.3));\r\n    desk.append(getPhone(new Vector2(220, 20), 4));\r\n\r\n    return desk;\r\n}\r\n\r\n\r\nexport class Chair extends HTML {\r\n    seat: HTML;\r\n    setRotation(rotation: number) {\r\n        if (this.seat.transform.rotation !== rotation) {\r\n            // this.seat.transform.setRotation(rotation);\r\n        }\r\n    }\r\n\r\n    setPosition(position: Vector2) {\r\n        this.transform.setPosition(position);\r\n    }\r\n\r\n    getPosition() {\r\n        return this.seat.transform.absolute;\r\n    }\r\n\r\n    constructor(position: Vector2, rotation: number, style: Partial<CSSStyleDeclaration> = {}) {\r\n        super({\r\n            style: {\r\n                width: '80px',\r\n                height: '80px',\r\n                transition: 'transform 0.8s ease-in-out',\r\n                ...style,\r\n            },\r\n            transform: {\r\n                position: position,\r\n                rotation: rotation,\r\n                anchor: new Vector2(0.5, 0.5),\r\n                size: new Vector2(80, 80),\r\n            },  \r\n        });\r\n\r\n\r\n        for (let i = 0; i < 5; i++) {\r\n            //leg\r\n            this.append(new HTML({\r\n                style: {\r\n                    width: '70px',\r\n                    height: '10px',\r\n                    backgroundColor: '#c4aeae',\r\n                    filter: 'drop-shadow(3px 4px 2px #00000030)',\r\n                    borderRadius: '10px',\r\n                },\r\n                transform: {\r\n                    position: new Vector2(40, 30),\r\n                    rotation: rotation + 20 + i * (360 / 5),\r\n                    anchor: new Vector2(0, 0.5),\r\n                    size: new Vector2(70, 10),\r\n                },\r\n            }));\r\n        }\r\n        this.seat = this.append(new HTML({\r\n            style: {\r\n                width: '70px',\r\n                height: '80px',\r\n                backgroundColor: '#646464',\r\n                filter: 'drop-shadow(3px 4px 5px #00000040)',\r\n                borderRadius: '10px',\r\n                transition: 'transform 0.8s ease-in-out, left 0.8s ease-in-out, top 0.8s ease-in-out',\r\n            },\r\n            transform: {\r\n                position: new Vector2(5, 0),\r\n                anchor: new Vector2(0.5, 0.5),\r\n                size: new Vector2(70, 80),  \r\n            }\r\n        }));\r\n\r\n        this.seat.append(new HTML({\r\n            style: {\r\n                width: '80px',\r\n                height: '25px',\r\n                backgroundColor: '#3c3c3c',\r\n                borderRadius: '10px 10px 5px 5px',\r\n                marginTop: '55px',\r\n            },\r\n            transform: {\r\n                position: new Vector2(-5, 0),\r\n                anchor: new Vector2(0.5, 0.5),\r\n                size: new Vector2(80, 25),\r\n            }\r\n        }));\r\n    }\r\n}", "import { Vector2 } from '../../../../math/vector2';\r\nimport { glob } from '../../../base';\r\nimport { TickerReturnData } from '../../../ticker';\r\nimport { Walker } from '../sections/office/people/walker';\r\n\r\nexport class Movement {\r\n\r\n    private state: 'walking' | 'waiting' = 'walking';\r\n    private index: number = 0;\r\n    private condition: () => boolean = undefined;\r\n\r\n    public constructor(private actor: Walker, private key: string, private cycle: {\r\n        to: Vector2;\r\n        speed: number;\r\n        condition: number | (() => boolean);\r\n    }[], private callback: (speed: number, velocity: Vector2, state: 'walking' | 'waiting', cycle: number) => void, state: number = 0) {\r\n        this.index = state;\r\n    }\r\n\r\n    public tick(obj: TickerReturnData) {\r\n        const cycle = this.cycle[this.index];\r\n\r\n        if (this.state === 'walking') {\r\n            this.move(cycle, obj);\r\n        }\r\n\r\n        if (this.state === 'waiting') {\r\n            this.wait(cycle);\r\n        }\r\n    }\r\n\r\n    private wait(cycle: typeof this.cycle[number]) {\r\n\r\n        if (this.condition) {\r\n            if (this.condition()) {\r\n                this.condition = undefined;\r\n                this.next();\r\n            }\r\n        } else {\r\n            this.callback(0, new Vector2(0, 0), 'waiting', this.index);\r\n        }\r\n    }\r\n\r\n\r\n    private move(cycle: typeof this.cycle[number], obj: TickerReturnData) {\r\n        const velocity = cycle.to.sub(this.actor.transform.position).normalize().scale(cycle.speed);\r\n        // this.actor.transform.setPosition(this.actor.transform.position.add(velocity));\r\n\r\n        this.actor.move(obj, velocity, cycle.speed);\r\n\r\n        this.callback(cycle.speed, velocity, 'walking', this.index);\r\n\r\n\r\n        if (this.actor.transform.position.distance(cycle.to) < 1) {\r\n            this.state = 'waiting';\r\n\r\n            if (typeof cycle.condition === 'function') {\r\n                if (cycle.condition()) {\r\n                    this.next();\r\n                } else {\r\n                    this.condition = cycle.condition;\r\n                }\r\n            } else {\r\n                if (cycle.condition < 1) {\r\n                    this.next();\r\n                } else {\r\n                    glob.timer.add(`${this.key}-walk`, cycle.condition, () => {\r\n                        this.next();\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private next() {\r\n        this.index++;\r\n        if (this.index >= this.cycle.length) {\r\n            this.index = 0;\r\n        }\r\n        this.state = 'walking';\r\n    }\r\n}", "import { HTML } from '../../../../../../element/element';\r\nimport { Ease } from '../../../../../../math/easings';\r\nimport { Utils } from '../../../../../../math/util';\r\nimport { Vector2 } from '../../../../../../math/vector2';\r\n\r\n\r\nexport class Person extends HTML {\r\n    torso: HTML;\r\n    head: HTML;\r\n    arms: HTML[] = [];\r\n    legs: HTML[] = [];\r\n    public constructor(hair: 'full' | 'half' | 'none' = 'full') {\r\n        super({\r\n            style: {\r\n                width: '80px',\r\n                height: '30px',\r\n            },\r\n            transform: {\r\n                size: new Vector2(80, 30),\r\n                position: new Vector2(-40, -15),\r\n                anchor: new Vector2(0.5, 0.5),\r\n            }\r\n        });\r\n\r\n        for (let i = 0; i < 2; i++) {\r\n            const leg = this.append(new HTML({\r\n                style: {\r\n                    width: '25px',\r\n                    height: '40px',\r\n                    backgroundColor: '#62698e',\r\n                    borderRadius: '20%',\r\n                },\r\n                transform: {\r\n                    position: new Vector2(i * 30 + 10, -25),\r\n                    anchor: new Vector2(0.5, 1),\r\n                    size: new Vector2(25, 40),\r\n                }\r\n            }));\r\n            this.legs.push(leg);\r\n        }\r\n\r\n        this.torso = this.append(new HTML({\r\n            style: {\r\n                width: '80px',\r\n                height: '30px',\r\n                backgroundColor: '#a69d97',\r\n                borderRadius: '20px',\r\n                filter: 'drop-shadow(3px 4px 3px #00000040)',\r\n\r\n            },\r\n            transform: {\r\n                position: new Vector2(0, 0),\r\n                anchor: new Vector2(0.5, 0.5),\r\n                size: new Vector2(80, 30),\r\n            }\r\n        }));\r\n\r\n        for (let i = 0; i < 2; i++) {\r\n            const arm = this.torso.append(new HTML({\r\n                style: {\r\n                    width: '20px',\r\n                    height: '60px',\r\n                    backgroundColor: '#a69d97',\r\n                    borderRadius: '20%',\r\n                    filter: 'drop-shadow(3px 4px 5px #00000040)',\r\n                   \r\n                },\r\n                transform: {\r\n                    position: new Vector2(i * 60, -45),\r\n                    anchor: new Vector2(0.5, 0.9),\r\n                    rotation: i ? -10 : 10,\r\n                    size: new Vector2(20, 60),\r\n                }\r\n            }));\r\n            const hand = arm.append(new HTML({\r\n                style: {\r\n                    width: '20px',\r\n                    height: '20px',\r\n                    backgroundColor: '#f9d9ba',\r\n                    borderRadius: '50% 50% 2px 2px',\r\n                },\r\n                transform: {\r\n                    size: new Vector2(20, 20),\r\n                }\r\n            }));\r\n            this.arms.push(arm);\r\n        }\r\n\r\n        let hairShadow = {};\r\n        if (hair === 'full') {\r\n            hairShadow = {\r\n                boxShadow: 'inset 0px -30px 2px rgba(60, 32, 34, 0.8)'\r\n            }\r\n        } else if (hair === 'half') {\r\n            hairShadow = {\r\n                boxShadow: 'inset 0px -15px 4px rgba(60, 32, 34, 0.8)'\r\n            }\r\n        }\r\n        this.head = this.torso.append(new HTML({\r\n            style: {\r\n                width: '40px',\r\n                height: '40px',\r\n                backgroundColor: '#f9d9ba',\r\n                borderRadius: '50%',\r\n                filter: 'drop-shadow(1px 2px 5px #00000040)',\r\n                ...hairShadow,\r\n            },\r\n            transform: {\r\n                position: new Vector2(20, -5),\r\n                anchor: new Vector2(0.5, 0.5),\r\n                size: new Vector2(40, 40),\r\n            }\r\n        }));\r\n\r\n        this.legCycle = 2;\r\n        this.armTwist = [0, 0];\r\n    }\r\n\r\n    lookAngle(angle: number) {\r\n        this.head.transform.setRotation(Utils.clamp(angle, -40, 40));\r\n    }\r\n\r\n    private _legCycle: number = 0;\r\n    get legCycle() {\r\n        return this._legCycle;\r\n    }\r\n\r\n    set legCycle(v: number) {\r\n        this._legCycle = v % 2;\r\n        const value = Ease.inOutCirc(this._legCycle <= 1 ? this._legCycle : 2 - this._legCycle);\r\n        this.legs[0].transform.setScale(new Vector2(1, 1 - (value * 2)));\r\n        this.legs[1].transform.setScale(new Vector2(1, -1 + (value * 2)));\r\n    }\r\n\r\n    private _armPosition: [number, number] = [1, 1];\r\n    set armPosition([l, r]: [number, number]) {\r\n        this._armPosition = [Utils.clamp(l, -1, 1), Utils.clamp(r, -1, 1)];\r\n        this.forceArmPosition = this._armPosition;\r\n    }\r\n    set forceArmPosition([l, r]: [number, number]) {\r\n        let left = Utils.clamp(l, -1, 1);\r\n        let right = Utils.clamp(r, -1, 1);\r\n        this.arms[0].transform.setScale(new Vector2(1, left));\r\n        this.arms[1].transform.setScale(new Vector2(1, right));\r\n    }\r\n    get armPosition() {\r\n        return this._armPosition;\r\n    }\r\n\r\n    private _armTwist: [number, number] = [0, 0];\r\n    set armTwist([l, r]: [number, number]) {\r\n        this._armTwist = [Utils.clamp(l, -1, 1), Utils.clamp(r, -1, 1)];\r\n        this.forceArmTwist = this._armTwist;\r\n    }\r\n    get armTwist() {\r\n        return this._armTwist;\r\n    }\r\n    set forceArmTwist([l, r]: [number, number]) {\r\n        let left = Utils.clamp(l, -1, 1);\r\n        let right = Utils.clamp(r, -1, 1);\r\n        this.arms[0].transform.setRotation(left * 20);\r\n        this.arms[1].transform.setRotation(right * 20);\r\n    }\r\n}\r\n\r\n\r\nexport function getPerson(position: Vector2, rotation: number, arms: boolean = true) {\r\n    const wrap = new HTML({\r\n        style: {\r\n            width: '80px',\r\n            height: '30px',\r\n        },\r\n        transform: {\r\n            position: position,\r\n            rotation: rotation,\r\n            anchor: new Vector2(0.5, 0.5)\r\n        },\r\n    });\r\n\r\n    for (let i = 0; i < 2; i++) {\r\n        const leg = wrap.append(new HTML({\r\n            style: {\r\n                width: '25px',\r\n                height: '60px',\r\n                backgroundColor: '#62698e',\r\n                borderRadius: '20%',\r\n                filter: 'drop-shadow(3px 4px 5px #00000040)',\r\n            },\r\n            transform: {\r\n                position: new Vector2(i * 45 + 5, -35),\r\n                anchor: new Vector2(0.5, 0.5),\r\n            }\r\n        }));\r\n    }\r\n\r\n    //torso\r\n    const torso = wrap.append(new HTML({\r\n        style: {\r\n            width: '80px',\r\n            height: '30px',\r\n            backgroundColor: '#a69d97',\r\n            borderRadius: '20px',\r\n        },\r\n        transform: {\r\n            position: new Vector2(0, 0),\r\n            anchor: new Vector2(0.5, 0.5)\r\n        }\r\n    }));\r\n    // head\r\n\r\n    // arms\r\n    if (arms) {\r\n        for (let i = 0; i < 2; i++) {\r\n            const arm = torso.append(new HTML({\r\n                style: {\r\n                    width: '20px',\r\n                    height: '70px',\r\n                    backgroundColor: '#a69d97',\r\n                    borderRadius: '20%',\r\n                    filter: 'drop-shadow(3px 4px 5px #00000040)',\r\n                },\r\n                transform: {\r\n                    position: new Vector2(i * 50 + 5, -45),\r\n                    anchor: new Vector2(0.5, 0.5),\r\n                    rotation: i ? -10 : 10,\r\n                }\r\n            }));\r\n            const hand = arm.append(new HTML({\r\n                style: {\r\n                    width: '20px',\r\n                    height: '20px',\r\n                    backgroundColor: '#f9d9ba',\r\n                    borderRadius: '50% 50% 2px 2px',\r\n                    zIndex: '-1',\r\n                },\r\n            }));\r\n        }\r\n    }\r\n    // legs\r\n\r\n    const head = torso.append(new HTML({\r\n        style: {\r\n            width: '40px',\r\n            height: '40px',\r\n            backgroundColor: '#f9d9ba',\r\n            borderRadius: '50%',\r\n            filter: 'drop-shadow(1px 2px 5px #00000040)',\r\n            boxShadow: 'inset 0px -15px 6px rgba(60, 32, 34, 0.8)',\r\n        },\r\n        transform: {\r\n            position: new Vector2(20, -5),\r\n            anchor: new Vector2(0.5, 0.5)\r\n        }\r\n    }));\r\n\r\n    return wrap;\r\n}", "import { HTML } from '../../../../../../element/element';\r\nimport { Utils } from '../../../../../../math/util';\r\nimport { Vector2 } from '../../../../../../math/vector2';\r\nimport { TickerReturnData } from '../../../../../ticker';\r\nimport { Person } from './assets';\r\n\r\nexport class Walker extends HTML {\r\n    private _destination: Vector2;\r\n    person: Person;\r\n    walkspeed: number;\r\n    public constructor({ initialPosition = new Vector2(0, 0), initialRotation = 0, hair = 'full', walkspeed = 0.8 }: { initialPosition?: Vector2; initialRotation?: number; hair?: 'full' | 'half' | 'none'; walkspeed?: number; } = {}) {\r\n        super({\r\n            transform: {\r\n                position: initialPosition,\r\n                rotation: initialRotation,\r\n                anchor: new Vector2(0.5, 0.5),\r\n                size: new Vector2(0, 0),\r\n            },\r\n            style: {\r\n                width: '80px',\r\n                height: '30px',\r\n            }\r\n        });\r\n\r\n        this.append(this.person = new Person(hair));\r\n        this.person.armPosition = [0, 0];\r\n        this.walkspeed = walkspeed;\r\n    }\r\n\r\n\r\n    public setDestination(destination: Vector2) {\r\n        this._destination = destination;\r\n    }\r\n\r\n    public get destination() {\r\n        return this._destination;\r\n    }\r\n\r\n    private _lookAt: Vector2;\r\n\r\n    lookAt(destination: Vector2) {\r\n        this._lookAt = destination;\r\n    }\r\n\r\n    /**\r\n     * Calculate the shortest angular distance between two angles\r\n     * Returns a value between -180 and 180 degrees\r\n     */\r\n    private getShortestAngleDifference(currentAngle: number, targetAngle: number): number {\r\n        let diff = targetAngle - currentAngle;\r\n\r\n        // Normalize to [-180, 180] range\r\n        while (diff > 180) diff -= 360;\r\n        while (diff < -180) diff += 360;\r\n\r\n        return diff;\r\n    }\r\n\r\n    public tick(obj: TickerReturnData) {\r\n        super.tick(obj);\r\n        const angle = this._lookAt ? this._lookAt.sub(this.transform.position).angle() : this.transform.rotation;\r\n\r\n        if (this._destination && this.transform.position.distance(this._destination) > 10) {\r\n            this.move(obj, this._destination.sub(this.transform.position).normalize(), this.walkspeed);\r\n            this.transform.setRotation(this.transform.position.sub(this._destination).angle());\r\n            this.person.lookAngle(Utils.clamp(angle - this.transform.rotation, -20, 20));\r\n        } else {\r\n\r\n            const angleDiff = this.getShortestAngleDifference(this.transform.rotation, angle);\r\n\r\n            if (angleDiff > 40) {\r\n                this.transform.setRotation(angle - 40);\r\n            } else if (angleDiff < -40) {\r\n                this.transform.setRotation(angle + 40);\r\n            }\r\n\r\n            this.idle();\r\n        }\r\n    }\r\n\r\n    protected idle() {\r\n        this.person.legCycle = 0.5;\r\n        this.person.armPosition = this.person.armPosition;\r\n        this.person.armTwist = this.person.armTwist;\r\n    }\r\n\r\n    protected walkCycle(speed: number) {\r\n        this.person.legCycle += 0.011 * speed;\r\n        const rightArm = Math.cos(this.person.legCycle * Math.PI);\r\n        const leftArm = -rightArm;\r\n        this.person.forceArmPosition = [leftArm * 0.8 * speed, rightArm * 0.8 * speed];\r\n        this.person.forceArmTwist = [0,0];\r\n    }\r\n\r\n    move(obj: TickerReturnData, direction: Vector2, speed: number) {\r\n\r\n        // glob.debug.setText(`${direction.x.toFixed(2)} ${direction.y.toFixed(2)} ${speed.toFixed(2)} ${obj.frameRate.toFixed(2)} ${obj.interval.toFixed(2)} ${obj.intervalS20.toFixed(2)}`);\r\n        const normalisedSpeed = speed*obj.intervalS20*0.15;\r\n        this.transform.setPosition(this.transform.position.add(direction.normalize().scale(normalisedSpeed)));\r\n        this.walkCycle(normalisedSpeed);\r\n    }\r\n}", "import { HTML } from '../../../../../../element/element';\r\nimport { Utils } from '../../../../../../math/util';\r\nimport { Vector2 } from '../../../../../../math/vector2';\r\nimport { glob } from '../../../../../base';\r\nimport { TickerReturnData } from '../../../../../ticker';\r\nimport { TileGame } from '../../../tilegame';\r\nimport { Movement } from '../../../util/movement';\r\nimport { getPaper } from '../clutter';\r\nimport { Walker } from './walker';\r\n\r\nexport class Boss extends Walker {\r\n\r\n    private movement: Movement;\r\n    private rotation: number = 0;\r\n    private rotationTarget: number = 0;\r\n\r\n    public waitTime: number = 0;\r\n    public waitTimeMax: number = 10000;\r\n    public paper: HTML;\r\n    public collected: number = 0;\r\n\r\n    public constructor(game: TileGame, position: Vector2, rotation: number, hair: 'full' | 'half' | 'none' = 'full') {\r\n        super({ initialPosition: position, initialRotation: rotation, hair, walkspeed: 0.7 });\r\n\r\n        this.movement = new Movement(this, 'boss', [\r\n            { to: new Vector2(350, 550), speed: 0.7, condition: 1000 },\r\n            { to: new Vector2(200, 500), speed: 0.7, condition: 1000 },\r\n            { to: new Vector2(450, 300), speed: 0.7, condition: 1000 },\r\n            { to: new Vector2(350, 220), speed: 0.7, condition: 500 },\r\n            {\r\n                to: new Vector2(350, 220), speed: 0.7, condition: () => {\r\n                    if (game.computer.completed >= game.computer.target) {\r\n                        game.computer.completed -= game.computer.target;\r\n                        this.waitTime = 0;\r\n                        this.hasPaper = true;\r\n                        this.collected++;\r\n                        return true;\r\n                    }\r\n                    this.waitTime += glob.ticker.interval;\r\n                    if (this.waitTime > this.waitTimeMax) {\r\n                        game.addState('gameover', true);\r\n                    }\r\n                    return false;\r\n                }\r\n            },\r\n            { to: new Vector2(350, 700), speed: 1, condition: 20000 },\r\n            {\r\n                to: new Vector2(350, 700), speed: 1, condition: () => {\r\n                    this.hasPaper = false;\r\n                    return true;\r\n                }\r\n            },\r\n        ], (speed, velocity, state, phase) => {\r\n            this.phase = phase;\r\n            if (state === 'walking') {\r\n                this.rotationTarget = velocity.angle();\r\n                this.walkCycle(speed);\r\n            }\r\n            if (state === 'waiting') {\r\n                this.idle();\r\n            }\r\n        }, 0);\r\n\r\n        this.transform.setPosition(new Vector2(350, 1500));\r\n\r\n        this.paper = getPaper(new Vector2(-2, -50), 7, true);\r\n        this.paper.transform.setScale(new Vector2(1, 0.8));\r\n        this.person.append(this.paper);\r\n\r\n        this.hasPaper = false;\r\n    }\r\n\r\n    private _hasPaper: boolean = true;\r\n    public get hasPaper(): boolean {\r\n        return this._hasPaper;\r\n    }\r\n    public set hasPaper(value: boolean) {\r\n        this._hasPaper = value;\r\n        this.paper.visible = value;\r\n        if (!value) {\r\n            this.person.armPosition = [0, 0];\r\n        }\r\n    }\r\n\r\n    public phase: number = 0;\r\n\r\n    public tick(obj: TickerReturnData) {\r\n        // super.tick(obj);\r\n        this.movement.tick(obj);\r\n\r\n        if (Math.abs(this.rotation - this.rotationTarget) > 1) {\r\n            if (this.rotation - this.rotationTarget > 180) {\r\n                this.rotationTarget = this.rotationTarget + 360;\r\n            } else if (this.rotation - this.rotationTarget < -180) {\r\n                this.rotationTarget = this.rotationTarget - 360;\r\n            }\r\n\r\n            this.rotation = Utils.lerp(this.rotation, this.rotationTarget, 0.05);\r\n            this.transform.setRotation(this.rotation);\r\n        }\r\n\r\n        if (this.hasPaper) {\r\n            this.person.armPosition = [0.4, this.person.armPosition[1]];\r\n        }\r\n    }\r\n}", "import { Vector2 } from '../../../../../../math/vector2';\r\nimport { Office } from '../office';\r\nimport { Walker } from './walker';\r\n\r\nexport class Player extends Walker {\r\n    public constructor(private office: Office) {\r\n        super({\r\n            initialPosition: new Vector2(300, 300), initialRotation: -1, hair: 'none', walkspeed: 1.2\r\n        });\r\n    }\r\n\r\n    public setDestination(destination: Vector2): void {\r\n        const blockers = this.office.blockers;\r\n        for (const blocker of blockers) {\r\n            if (!destination ||\r\n                (\r\n                    destination.x > blocker.position.x && destination.x < blocker.position.x + blocker.size.x &&\r\n                    destination.y > blocker.position.y && destination.y < blocker.position.y + blocker.size.y\r\n                )) {\r\n                return;\r\n            }\r\n        }\r\n        super.setDestination(destination);\r\n    }\r\n\r\n}", "import { Vector2 } from '../../../../../../math/vector2';\r\nimport { TickerReturnData } from '../../../../../ticker';\r\nimport { Chair } from '../furniture';\r\nimport { Walker } from './walker';\r\n\r\nexport class Sitter extends Walker {\r\n    data: { initialPosition: Vector2; initialRotation: number; };\r\n\r\n    private _seated: boolean = false;\r\n    public set seated(seated: boolean) {\r\n        this._seated = seated;\r\n        this.visible = seated;\r\n        this.chair.seat.transform.setRotation(seated ? -1 : 70);\r\n        this.chair.setPosition(seated ? new Vector2(240, 130) : new Vector2(240, 140));\r\n    }\r\n    public get seated() {\r\n        return this._seated;\r\n    }\r\n    public interpolatedValue: number = 0;\r\n\r\n    constructor(obj: { \r\n        initialPosition?: Vector2; \r\n        initialRotation?: number; \r\n        hair?: 'full' | 'half' | 'none'; \r\n        walkspeed?: number; \r\n        armPosition?: [number, number];\r\n    } = {}, private chair?: Chair) {\r\n        super({\r\n            hair: obj.hair,\r\n            walkspeed: obj.walkspeed,\r\n        });\r\n\r\n        this.person.armPosition = obj.armPosition || [1, 1];\r\n        this.data = {\r\n            initialPosition: obj.initialPosition || new Vector2(0, 0),\r\n            initialRotation: obj.initialRotation || 0,\r\n        };\r\n        if (this.chair) {\r\n            this.transform.setParent(this.chair.seat.transform);\r\n        } else {\r\n            this.transform.setPosition(this.data.initialPosition);\r\n            this.transform.setRotation(this.data.initialRotation);\r\n        }\r\n        this.person.legCycle = 0.5;\r\n        this.person.armTwist = [0.5, -0.5];\r\n        this.person.arms[0].setStyle({\r\n            // transition: 'transform 0.1s ease-in-out',\r\n        });\r\n        this.person.arms[1].setStyle({\r\n            // transition: 'transform 0.1s ease-in-out',\r\n        });\r\n\r\n        this.setStyle({\r\n            transition: 'transform 0.8s ease-in-out',\r\n        });\r\n    }\r\n\r\n    tick(obj: TickerReturnData) {\r\n        super.tick(obj);\r\n\r\n        if (this.chair) {\r\n            this.interpolatedValue = this.interpolatedValue + Math.min(0.02, Number(this.seated) - this.interpolatedValue);\r\n            this.person.armPosition = [this.interpolatedValue, this.interpolatedValue];\r\n            this.person.arms[0].dom.style.transition = this.interpolatedValue === 1 ? 'transform 0.1s ease-in-out' : 'none';\r\n            this.person.arms[1].dom.style.transition = this.interpolatedValue === 1 ? 'transform 0.1s ease-in-out' : 'none';\r\n            this.chair.seat.transform.setRotation(this.seated ? -1 : 70);\r\n            this.chair.setPosition(this.seated ? new Vector2(240, 130) : new Vector2(240, 140));\r\n\r\n            this.transform.setPosition(this.chair.seat.transform.absolute.position.add(this.data.initialPosition));\r\n            this.transform.setRotation(this.chair.seat.transform.absolute.rotation + this.data.initialRotation);\r\n        }\r\n    }\r\n}", "import { HTML } from '../../../../../element/element';\r\nimport { Tile } from '../../../../../element/tile';\r\nimport { Ease } from '../../../../../math/easings';\r\nimport { Utils } from '../../../../../math/util';\r\nimport { Vector2 } from '../../../../../math/vector2';\r\nimport { TickerReturnData } from '../../../../ticker';\r\nimport { TileGame } from '../../tilegame';\r\nimport { Section } from '../../util/section';\r\nimport { Chair, getDesk } from './furniture';\r\nimport { Boss } from './people/boss';\r\nimport { Player } from './people/player';\r\nimport { Sitter } from './people/sitter';\r\nimport { Walker } from './people/walker';\r\nimport { getCoffeeMachine, getPlant } from './prop';\r\n\r\n\r\n\r\nexport class Office extends Section {\r\n    walker: Walker;\r\n    mouse: boolean = false;\r\n    npc: Boss;\r\n    sitter: Sitter;\r\n\r\n    public readonly blockers: {\r\n        size: Vector2;\r\n        position: Vector2;\r\n    }[] = [\r\n            //walls\r\n            {\r\n                position: new Vector2(0, 0),\r\n                size: new Vector2(20, 600),\r\n            },\r\n            {\r\n                position: new Vector2(0, 0),\r\n                size: new Vector2(700, 20),\r\n            },\r\n            {\r\n                position: new Vector2(0, 580),\r\n                size: new Vector2(700, 20),\r\n            },\r\n            {\r\n                position: new Vector2(680, 0),\r\n                size: new Vector2(20, 600),\r\n            },\r\n            // desks\r\n            {\r\n                position: new Vector2(0, 265),\r\n                size: new Vector2(150, 310),\r\n            },\r\n            {\r\n                position: new Vector2(140, 0),\r\n                size: new Vector2(300, 130),\r\n            },\r\n            {\r\n                position: new Vector2(560, 130),\r\n                size: new Vector2(150, 300),\r\n            },\r\n            //chairs \r\n            {\r\n                position: new Vector2(130, 400),\r\n                size: new Vector2(55, 80),\r\n            },\r\n            {\r\n                position: new Vector2(470, 200),\r\n                size: new Vector2(100, 80),\r\n            },\r\n            // plants\r\n            {\r\n                position: new Vector2(30, 30),\r\n                size: new Vector2(80, 80),\r\n            },\r\n            {\r\n                position: new Vector2(590, 30),\r\n                size: new Vector2(80, 80),\r\n            },\r\n\r\n        ];\r\n    chair: Chair;\r\n    overlay: HTML;\r\n\r\n    public constructor(private game: TileGame, gridParams: ConstructorParameters<typeof Section>[2]) {\r\n        super(new Vector2(700, 600), {\r\n            backgroundColor: '#354c59',\r\n            width: '100%',\r\n            height: '600px',\r\n            overflow: 'hidden',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n        }, gridParams);\r\n\r\n        const wrap = this.append(new HTML({\r\n            style: {\r\n                width: '700px',\r\n                height: '600px',\r\n                overflow: 'hidden',\r\n            }\r\n        }));\r\n\r\n        const floor = wrap.append(new HTML({\r\n            style: {\r\n                width: '100%',\r\n                height: '100%',\r\n                backgroundColor: '#354c59',\r\n                boxShadow: '0px 0px 200px #0000004a',\r\n                overflow: 'hidden',\r\n                borderRadius: '10px',\r\n                border: '15px solid #3c5561',\r\n                boxSizing: 'border-box',\r\n            }\r\n        }));\r\n\r\n        floor.append(new Tile({\r\n            tileSize: new Vector2(80, 120),\r\n            transform: {\r\n                position: new Vector2(150, -240),\r\n                rotation: 30,\r\n            },\r\n            offsetRow: new Vector2(0, 0),\r\n            offsetCol: new Vector2(0, 0),\r\n            repeatX: 11,\r\n            repeatY: 7,\r\n            options: {\r\n                style: {\r\n                    width: '100px',\r\n                    height: '80px',\r\n                    border: '10px solid rgb(60, 85, 97)',\r\n                    boxSizing: 'border-box',\r\n                    backgroundColor: '#3c5561',\r\n                    borderRadius: '20px',\r\n                },\r\n                transform: {\r\n                    rotation: -30,\r\n                }\r\n            }\r\n        }));\r\n\r\n\r\n        wrap.append(this.chair = new Chair(new Vector2(240, 130), -1));\r\n\r\n        wrap.append(getDesk(new Vector2(140, 15), -1, 1, {\r\n        }));\r\n\r\n        this.sitter = new Sitter({ initialPosition: new Vector2(35, 40), hair: 'none', armPosition: [0, 0] }, this.chair);\r\n        wrap.append(this.sitter);\r\n\r\n\r\n\r\n        wrap.append(new Chair(new Vector2(130, 390), 270, {\r\n            filter: 'saturate(0.4)',\r\n        }));\r\n\r\n        this.walker = new Player(this);\r\n        wrap.append(this.walker);\r\n\r\n\r\n        const c = wrap.append(new Chair(new Vector2(480, 200), 120, {\r\n            filter: 'saturate(0.4)',\r\n        })) as Chair;\r\n\r\n        wrap.append(getDesk(new Vector2(470, 220), 90, 1, {\r\n            filter: 'saturate(0.4)',\r\n        }));\r\n\r\n        wrap.append(getDesk(new Vector2(-70, 360), 270, 2, {\r\n            filter: 'saturate(0.4)',\r\n        }));\r\n\r\n        wrap.append(getPlant(new Vector2(30, 30), 0, 6, 80));\r\n        wrap.append(getPlant(new Vector2(590, 30), 40, 7, 50));\r\n        // wrap.append(getPlant(new Vector2(590, 490), 40, 9, 40));\r\n        wrap.append(getCoffeeMachine(new Vector2(590, 490), 40, 9, 40));\r\n\r\n\r\n        wrap.append(new Sitter({ initialPosition: new Vector2(520, 240), hair: 'full', initialRotation: 120, armPosition: [0, 0], }) as Sitter);\r\n        wrap.append(new Sitter({ initialPosition: new Vector2(170, 430), hair: 'none', initialRotation: -90, armPosition: [1, 0] }) as Sitter);\r\n\r\n\r\n        this.npc = new Boss(game, new Vector2(350, 700), 0, 'half');\r\n        wrap.append(this.npc);\r\n\r\n        this.overlay = this.append(new HTML({\r\n            style: {\r\n                width: '100%',\r\n                height: '100%',\r\n                cursor: 'pointer',\r\n                pointerEvents: 'all',\r\n            }\r\n        }));\r\n        this.overlay.dom.addEventListener('pointerdown', (e) => {\r\n            this.mouse = true;\r\n            this.walker.setDestination(new Vector2(e.offsetX, e.offsetY));\r\n        });\r\n\r\n        this.overlay.dom.addEventListener('pointerup', (e) => {\r\n            this.mouse = false;\r\n        });\r\n        this.overlay.dom.addEventListener('pointerleave', (e) => {\r\n            this.mouse = false;\r\n        });\r\n\r\n        this.overlay.dom.addEventListener('pointermove', (e) => {\r\n            if (this.mouse) {\r\n                this.walker.setDestination(new Vector2(e.offsetX, e.offsetY));\r\n            } else {\r\n                this.walker.lookAt(new Vector2(e.offsetX, e.offsetY));\r\n            }\r\n        });\r\n\r\n        this.tired = 0.15;\r\n    }\r\n\r\n    public _tired: number = 0;\r\n    public set tired(value: number) {\r\n        this._tired = Utils.clamp(value, 0, 1);\r\n        this.overlay.setStyle({\r\n            boxShadow: `inset 0px 0px 290px ${(Ease.inOutCubic(this._tired) * 360) - 180}px  #00000080`,\r\n        });\r\n        if (this.tired >= 1) {\r\n            this.game.addState('gameover', true);\r\n        }\r\n    }\r\n    public get tired() {\r\n        return this._tired;\r\n    }\r\n\r\n    public tick(obj: TickerReturnData) {\r\n        super.tick(obj);\r\n\r\n        this.tired += obj.interval * 0.000002;\r\n\r\n        if (obj.frame % 5 === 0) {\r\n\r\n            let t = (this.tired-0.5)*2;\r\n\r\n            if (t > 0.25) {\r\n                this.setStyle({\r\n                    filter: `blur(${Ease.inOutCubic(Math.sin(obj.total * 0.0001 + 0.3) * Math.sin(obj.total * 0.001 + 0.3) * t) * 2}px)`,\r\n                });\r\n                this.overlay.setStyle({\r\n                    backgroundColor: `rgba(0, 0, 0, ${Math.sin(obj.total * 0.0001) * Math.sin(obj.total * 0.001) * Ease.inOutCubic(t) * 0.3})`,\r\n                });\r\n            } else {\r\n                this.setStyle({\r\n                    filter: `blur(0px)`,\r\n                });\r\n                this.overlay.setStyle({\r\n                    backgroundColor: `rgba(0, 0, 0, 0)`,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    updateGrid(gridParams: [number, number, number, number]) {\r\n        super.updateGrid(gridParams);\r\n\r\n\r\n        if (Utils.isMobile()) {\r\n            this.dom.style.width = '100%';\r\n            this.dom.style.height = '100%';\r\n        } else {\r\n            this.dom.style.width = '100%';\r\n            this.dom.style.height = '600px';\r\n        }\r\n\r\n    }\r\n}\r\n", "import { HTML } from '../../../../element/element';\r\n\r\nexport class Icon extends HTML {\r\n    constructor(text: string, size: number = 25, color: string = 'white', solid: boolean = false) {\r\n        super({\r\n            text: text,\r\n            classList: solid ? ['material-symbols-outlined', 'solid'] : ['material-symbols-outlined'],\r\n            style: {\r\n                fontSize: size + 'px',\r\n                color: color,\r\n                pointerEvents: 'none',\r\n                transition: 'font-size 0.2s ease-in-out',\r\n            }\r\n        });\r\n        \r\n    }\r\n\r\n    changeIcon(text: string) {\r\n        this.setText(text);\r\n    }\r\n\r\n    iconSize(size: number) {\r\n        this.dom.style.fontSize = size + 'px';\r\n    }\r\n}", "\r\nimport { HTML } from '../../../../../element/element';\r\nimport { Flex } from '../../../../../element/flex';\r\nimport { Utils } from '../../../../../math/util';\r\nimport { Vector2 } from '../../../../../math/vector2';\r\nimport { TickerReturnData } from '../../../../ticker';\r\nimport { TileGame } from '../../tilegame';\r\nimport { Icon } from '../../util/icon';\r\nimport { Section } from '../../util/section';\r\n\r\n\r\nexport class StatBar extends Section {\r\n\r\n    private stats: {\r\n        value: number;\r\n        element: HTML;\r\n        showOn: number;\r\n        getter: () => number;\r\n        setter: (element: HTML, value: number) => void;\r\n    }[] = [];\r\n    public constructor(private parent: TileGame, gridParams: ConstructorParameters<typeof Section>[2]) {\r\n        super(new Vector2(700, 1), {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            borderRadius: '10px',\r\n            boxSizing: 'border-box',\r\n            backgroundColor: 'transparent',\r\n            boxShadow: 'none',\r\n            overflow: 'visible',\r\n            gap: '20px',\r\n            pointerEvents: 'none',\r\n            width: '100%',\r\n            height: '100%',\r\n            bottom: '20px',\r\n        }, gridParams);\r\n\r\n        this.addStat(StatBar.getStatBlock('person_apron', 50), 0, 0.5, () => {\r\n            return Number(!this.parent.getState('bossinroom'));\r\n        });\r\n\r\n        this.addStat(StatBar.getStatBlock('unknown_document', 50), 0, 0.95, () => {\r\n            return Utils.clamp(1-(this.parent.office.npc.waitTime / this.parent.office.npc.waitTimeMax), 0, 1);\r\n        }, (element, value) => {\r\n            element.setStyle({ backgroundColor: `rgb(${Math.round(153 + (74 - 153) * value)} ${Math.round(60 + (114 - 60) * value)} ${Math.round(60 + (160 - 60) * value)})`, });\r\n        });\r\n        this.addStat(StatBar.getStatBlock('battery_android_frame_bolt', 50), 0, 0.5, () => {\r\n            return 1 - this.parent.office.tired;\r\n        }, (element, value) => {\r\n            element.setStyle({ backgroundColor: `rgb(${Math.round(153 + (74 - 153) * value)} ${Math.round(60 + (114 - 60) * value)} ${Math.round(60 + (160 - 60) * value)})`, });\r\n            element.children[0]?.setText(['battery_android_bolt', 'battery_android_frame_3', 'battery_android_frame_5', 'battery_android_frame_full'][Math.floor((value * 3.9))]);\r\n        });\r\n \r\n    }\r\n\r\n    static getStatBlock(icon: string, size: number = 40) {\r\n        return new Flex({\r\n            flexDirection: 'row',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            style: {\r\n                width: '90px',\r\n                height: '90px',\r\n                backgroundColor: 'rgb(74 114 160)',\r\n                borderRadius: '50%',\r\n                boxSizing: 'border-box',\r\n                fontSize: '25px',\r\n                color: '#fff',\r\n                textAlign: 'center',\r\n                whiteSpace: 'wrap',\r\n                boxShadow: 'inset 3px -10px 30px #0000004f, 1px -3px 7px #0000004f',\r\n                transition: 'margin-top 0.5s ease-in-out, opacity 0.5s ease-in-out, width 0.5s 0.5s ease-in-out',\r\n                position: 'relative',\r\n                overflow: 'hidden',\r\n            },\r\n            children: [\r\n                new Icon(icon, size),\r\n            ],\r\n        });\r\n    }\r\n\r\n    addStat(element: HTML, value: number, showOn: number, getter: () => number, setter?: (element: HTML, value: number) => void) {\r\n        this.append(element);\r\n        this.stats.push({\r\n            value: value,\r\n            element: element,\r\n            showOn: showOn,\r\n            getter: getter,\r\n            setter: setter,\r\n        });\r\n    }\r\n\r\n    tick(obj: TickerReturnData) {\r\n        super.tick(obj);\r\n        if (obj.frame % 10 === 0) {\r\n            this.stats.sort((a, b) => a.value - b.value).forEach((stat, index) => {\r\n                stat.value = stat.getter();\r\n                stat.setter?.(stat.element, stat.value);\r\n                stat.element.setStyle({\r\n                    // order: index.toString(),\r\n                    width: stat.value < stat.showOn ? '90px' : '0px',\r\n                    transition: stat.value < stat.showOn ? 'margin-top 0.5s 0.5s ease-in-out, width 0.5s ease-in-out, opacity 0.5s 0.5s ease-in-out' : 'margin-top 0.5s ease-in-out, width 0.5s 0.5s ease-in-out, opacity 0.5s ease-in-out',\r\n                });\r\n                stat.element.setStyle({\r\n                    marginTop: stat.value < stat.showOn ? '0px' : '20px',\r\n                    opacity: stat.value < stat.showOn ? '1' : '0',\r\n                    width: stat.value < stat.showOn ? '90px' : '0px',\r\n                });\r\n            });\r\n        };\r\n    }\r\n\r\n}\r\n", "import { HTML } from '../../../../../element/element';\r\nimport { Flex } from '../../../../../element/flex';\r\nimport { Vector2 } from '../../../../../math/vector2';\r\nimport { TickerReturnData } from '../../../../ticker';\r\nimport { Icon } from '../../util/icon';\r\n\r\nexport class CoffeeMachine extends HTML {\r\n    coffee1: HTML;\r\n    coffee2: HTML;\r\n    cupAsset: Cup;\r\n    private _cup: boolean = false;\r\n    screen: HTML;\r\n    public get cup() {\r\n        return this._cup;\r\n    }\r\n    public set cup(value: boolean) {\r\n        this._cup = value;\r\n        this.cupAsset.visible = value;\r\n        this.cupAsset.steaming = false;\r\n\r\n    }\r\n    public click(element: HTML, validation?: () => boolean, add?: () => void) {\r\n        if (!this.cup && (!validation || validation())) {\r\n            this.cup = true;\r\n            element.visible = false;\r\n            add?.();\r\n        }\r\n    };\r\n    public constructor(position: Vector2, onDrink: () => void) {\r\n        super({\r\n            style: {\r\n                filter: 'drop-shadow(3px -9px 20px #00000020)',\r\n\r\n            },\r\n            transform: {\r\n                position: position,\r\n                anchor: new Vector2(0.5, 0.5),\r\n                size: new Vector2(270, 300),\r\n            },\r\n        });\r\n\r\n        let c1: boolean = false;\r\n        let c2: boolean = false;\r\n\r\n        this.append(new Cup({\r\n            position: new Vector2(105 - 55, 60 - 200), rotation: 0, scale: new Vector2(1, 1), onClick: (e, element) => this.click(element, undefined, () => c1 = true),\r\n        }));\r\n        this.append(new Cup({\r\n            position: new Vector2(100 - 55, 130 - 200), rotation: 0, scale: new Vector2(1, -1), onClick: (e, element) => this.click(element, () => c1),\r\n        }));\r\n        this.append(new Cup({\r\n            position: new Vector2(215 - 55, 70 - 200), rotation: -10, scale: new Vector2(1, 1), onClick: (e, element) => this.click(element, undefined, () => c2 = true),\r\n        }));\r\n        this.append(new Cup({\r\n            position: new Vector2(215 - 55, 130 - 200), rotation: 0, scale: new Vector2(-1, 1), onClick: (e, element) => this.click(element, () => c2),\r\n        }));\r\n        this.append(new Cup({\r\n            position: new Vector2(150 - 55, 130 - 200), rotation: 0, scale: new Vector2(-1, 1), onClick: (e, element) => this.click(element)\r\n        }));\r\n\r\n\r\n\r\n        //back\r\n        this.append(new HTML({\r\n            style: {\r\n                backgroundColor: '#646464',\r\n                borderRadius: '20px 20px 5px 5px',\r\n\r\n            },\r\n            transform: {\r\n                anchor: new Vector2(0.5, 0.5),\r\n                size: new Vector2(230, 250),\r\n                rotation: 0,\r\n                position: new Vector2(20, 20)\r\n            }\r\n        }));\r\n\r\n\r\n        // coffee\r\n        this.append(this.coffee1 = new HTML({\r\n            style: {\r\n                backgroundColor: '#00000088',\r\n            },\r\n            transform: {\r\n                anchor: new Vector2(0.5, 0.5),\r\n                size: new Vector2(10, 80),\r\n                position: new Vector2(115, 100)\r\n            }\r\n        }));\r\n        this.append(this.coffee2 = new HTML({\r\n            style: {\r\n                backgroundColor: '#00000088',\r\n            },\r\n            transform: {\r\n                anchor: new Vector2(0.5, 0.5),\r\n                size: new Vector2(10, 80),\r\n                position: new Vector2(135, 100)\r\n            }\r\n        }));\r\n\r\n\r\n        // tube\r\n        this.append(new HTML({\r\n            style: {\r\n                backgroundColor: '#e4e3e0',\r\n                borderRadius: '0px 0px 10px 10px',\r\n                filter: 'drop-shadow(3px 4px 6px #00000040)',\r\n                boxShadow: 'inset 5px 0px 30px #00000040',\r\n            },\r\n            transform: {\r\n                anchor: new Vector2(0.5, 0.5),\r\n                size: new Vector2(10, 15),\r\n                position: new Vector2(115, 135),\r\n            },\r\n        }));\r\n\r\n\r\n\r\n        this.append(new HTML({\r\n            style: {\r\n                backgroundColor: '#e4e3e0',\r\n                borderRadius: '0px 0px 10px 10px',\r\n                filter: 'drop-shadow(3px 4px 6px #00000040)',\r\n                boxShadow: 'inset 5px 0px 30px #00000040',\r\n            },\r\n            transform: {\r\n                anchor: new Vector2(0.5, 0.5),\r\n                size: new Vector2(10, 15),\r\n                position: new Vector2(135, 135),\r\n            },\r\n        }));\r\n\r\n        this.append(new HTML({\r\n            style: {\r\n                backgroundColor: '#e4e3e0',\r\n                borderRadius: '0px 0px 10px 10px',\r\n                filter: 'drop-shadow(3px 4px 6px #00000040)',\r\n                boxShadow: 'inset 5px 0px 30px #00000040',\r\n            },\r\n            transform: {\r\n                anchor: new Vector2(0.5, 0.5),\r\n                size: new Vector2(60, 30),\r\n                position: new Vector2(100, 110),\r\n            },\r\n        }));\r\n\r\n\r\n        // top\r\n        this.append(new HTML({\r\n            style: {\r\n                backgroundColor: '#504f5a',\r\n                borderRadius: '10px 10px 30px 30px',\r\n                filter: 'drop-shadow(0px 4px 3px #00000040)',\r\n\r\n            },\r\n            transform: {\r\n                anchor: new Vector2(0.5, 0.5),\r\n                size: new Vector2(270, 110),\r\n                rotation: 0,\r\n                position: new Vector2(0, 0)\r\n            }\r\n        }));\r\n        this.screen = this.append(new HTML({\r\n            style: {\r\n                backgroundColor: 'rgb(34, 36, 50)',\r\n                borderRadius: '7px',\r\n                boxShadow: 'inset 6px 3px 50px 3px #00000088',\r\n            },\r\n            transform: {\r\n                anchor: new Vector2(0.5, 0.5),\r\n                size: new Vector2(128, 50),\r\n                rotation: 0,\r\n                position: new Vector2(65, 40)\r\n            },\r\n            children: [\r\n                new HTML({ transform: { size: new Vector2(18, 40), position: new Vector2(10 + 1 - 2, 5), }, style: { transition: 'opacity 0.3s', backgroundColor: '#579557cc', borderRadius: '3px' } }),\r\n                new HTML({ transform: { size: new Vector2(18, 40), position: new Vector2(32 + 2 - 2, 5), }, style: { transition: 'opacity 0.3s', backgroundColor: '#579557cc', borderRadius: '3px' } }),\r\n                new HTML({ transform: { size: new Vector2(18, 40), position: new Vector2(54 + 3 - 2, 5), }, style: { transition: 'opacity 0.3s', backgroundColor: '#579557cc', borderRadius: '3px' } }),\r\n                new HTML({ transform: { size: new Vector2(18, 40), position: new Vector2(76 + 4 - 2, 5), }, style: { transition: 'opacity 0.3s', backgroundColor: '#579557cc', borderRadius: '3px' } }),\r\n                new HTML({ transform: { size: new Vector2(18, 40), position: new Vector2(98 + 5 - 2, 5), }, style: { transition: 'opacity 0.3s', backgroundColor: '#579557cc', borderRadius: '3px' } }),\r\n            ]\r\n        }));\r\n        this.append(new Flex({\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            style: {\r\n                backgroundColor: 'rgb(179 211 218)',\r\n                borderRadius: '100%',\r\n                boxShadow: ' inset 1px 1px 4px #000000cc',\r\n                border: '2px solid #d7d6d3',\r\n                cursor: 'pointer',\r\n                transition: 'box-shadow 0.2s ease-in-out',\r\n            },\r\n            transform: {\r\n                anchor: new Vector2(0.5, 0.5),\r\n                size: new Vector2(40, 40),\r\n                rotation: 0,\r\n                position: new Vector2(205, 20)\r\n            },\r\n\r\n            onMouseDown: (e, element) => {\r\n                element.dom.style.boxShadow = 'inset 1px 1px 8px #000000aa';\r\n                (element.children[0] as Icon).iconSize(25);\r\n                if (this.cup) {\r\n                    this.filling = true;\r\n                }\r\n            },\r\n            onMouseUp: (e, element) => {\r\n                element.dom.style.boxShadow = 'inset 1px 1px 4px #000000cc';\r\n                (element.children[0] as Icon).iconSize(26);\r\n            },\r\n            children: [\r\n                new Icon('coffee', 26, 'black', true)\r\n            ]\r\n        }));\r\n\r\n        \r\n        this.append(this.cupAsset = new Cup({\r\n            position: new Vector2(90, 180), rotation: 0, scale: new Vector2(1, 1), onClick: () => {\r\n                if (this.filled >= 1) {\r\n                    this.filled = 0;\r\n                    this.filling = false;\r\n                    this.cup = false;\r\n                    onDrink();\r\n                }\r\n            }\r\n        }));\r\n\r\n\r\n        // bottom\r\n        this.append(new HTML({\r\n            style: {\r\n                backgroundColor: '#504f5a',\r\n                borderRadius: '20px 20px 5px 5px',\r\n                filter: 'drop-shadow(0px -4px 3px #00000040)',\r\n\r\n            },\r\n            transform: {\r\n                anchor: new Vector2(0.5, 0.5),\r\n                size: new Vector2(270, 50),\r\n                rotation: 0,\r\n                position: new Vector2(0, 250)\r\n            }\r\n        }));\r\n\r\n        this.filling = false;\r\n        this.cup = false;\r\n\r\n    }\r\n\r\n    public filled: number = 0;\r\n    private _filling: boolean = false;\r\n    get filling() {\r\n        return this._filling;\r\n    }\r\n    set filling(value: boolean) {\r\n        this.coffee1.visible = value;\r\n        this.coffee2.visible = value;\r\n        this._filling = value;\r\n    }\r\n\r\n    tick(obj: TickerReturnData) {\r\n        super.tick(obj);\r\n        if (this.filling) {\r\n            this.filled += obj.interval * 0.0001;\r\n\r\n            if (this.filled > 1) {\r\n                this.filling = false;\r\n            }\r\n\r\n            if (this.filled > 0.7) {\r\n                this.cupAsset.steaming = true;\r\n            }\r\n        }\r\n        this.screen.children.forEach((c, i) => {\r\n            c.dom.style.opacity = this.filled > i * 0.2 + 0.1 ? '1' : '0.1';\r\n        });\r\n    }\r\n};\r\n\r\nexport class Cup extends HTML {\r\n\r\n    private steam: HTML[] = [];\r\n    public constructor({ position = new Vector2(0, 0), rotation = 0, scale = new Vector2(1, 1), onClick }: { position?: Vector2; rotation?: number; scale?: Vector2; onClick?: (event: MouseEvent, element: HTML) => void; } = {}) {\r\n        super({\r\n            style: {\r\n                filter: 'drop-shadow(3px 4px 6px #00000080)',\r\n                cursor: 'pointer',\r\n            },\r\n            transform: {\r\n                anchor: new Vector2(0.5, 0.5),\r\n                size: new Vector2(80, 70),\r\n                position: position,\r\n                rotation: rotation,\r\n            },\r\n            onMouseDown: onClick,\r\n        });\r\n\r\n        // steam\r\n        this.steam.push(this.append(new HTML({\r\n            style: {\r\n                backgroundColor: '#4c201840',\r\n                filter: 'blur(3px)',\r\n                borderRadius: '20px',\r\n                pointerEvents: 'none',\r\n                transition: 'opacity 1s ease-in-out',\r\n            },\r\n            transform: {\r\n                anchor: new Vector2(0.5, 0.5),\r\n                size: new Vector2(10, 200),\r\n                position: new Vector2(15, -100)\r\n            }\r\n        })));\r\n        this.steam.push(this.append(new HTML({\r\n            style: {\r\n                backgroundColor: '#4c201840',\r\n                filter: 'blur(3px)',\r\n                borderRadius: '20px',\r\n                pointerEvents: 'none',\r\n                transition: 'opacity 1s ease-in-out',\r\n            },\r\n            transform: {\r\n                anchor: new Vector2(0.5, 0.5),\r\n                size: new Vector2(15, 200),\r\n                position: new Vector2(35, -110)\r\n            }\r\n        })));\r\n        this.steam.push(this.append(new HTML({\r\n            style: {\r\n                backgroundColor: '#4c201840',\r\n                filter: 'blur(3px)',\r\n                borderRadius: '20px',\r\n                pointerEvents: 'none',\r\n                transition: 'opacity 1s ease-in-out',\r\n            },\r\n            transform: {\r\n                anchor: new Vector2(0.5, 0.5),\r\n                size: new Vector2(10, 200),\r\n                position: new Vector2(55, -90)\r\n            }\r\n        })));\r\n        this.steam.push(this.append(new HTML({\r\n            style: {\r\n                backgroundColor: '#4c201820',\r\n                filter: 'blur(3px)',\r\n                borderRadius: '20px',\r\n                pointerEvents: 'none',\r\n                transition: 'opacity 1s ease-in-out',\r\n            },\r\n            transform: {\r\n                anchor: new Vector2(0.5, 0.5),\r\n                size: new Vector2(25, 80),\r\n                position: new Vector2(30, -55)\r\n            }\r\n        })));\r\n\r\n        const mug = this.append(new HTML({\r\n            style: {\r\n                backgroundColor: '#e4e3e0',\r\n                borderRadius: '2px 2px 20px 20px',\r\n                boxShadow: 'inset 10px 0px 40px #00000040',\r\n            },\r\n            transform: {\r\n                size: new Vector2(80, 70),\r\n                anchor: new Vector2(0.5, 0.5),\r\n                scale: scale,\r\n            },\r\n        }));\r\n\r\n        mug.append(new HTML({\r\n            style: {\r\n                borderRadius: '20px 0px 0px 20px',\r\n                border: '10px solid #e4e3e0',\r\n                boxSizing: 'border-box',\r\n                borderRight: 'none',\r\n            },\r\n            transform: {\r\n                anchor: new Vector2(0.5, 0.5),\r\n                size: new Vector2(25, 40),\r\n                position: new Vector2(-25, 0)\r\n            }\r\n        }));\r\n\r\n        this.steaming = false;\r\n    }\r\n\r\n    private _steaming: boolean = false;\r\n    set steaming(value: boolean) {\r\n        this.steam.forEach(s => {\r\n            s.dom.style.opacity = value ? '1' : '0';\r\n        });\r\n        this._steaming = value;\r\n    }\r\n\r\n    get steaming() {\r\n        return this._steaming;\r\n    }\r\n\r\n    tick(obj: TickerReturnData) {\r\n        super.tick(obj);\r\n        if (this.steaming) {\r\n            this.steam.forEach((s, i) => {\r\n                s.dom.style.left = (Math.sin(obj.total * 0.0005 * (0.6 + (i + 1))) * 8) + 'px';\r\n            });\r\n        }\r\n    }\r\n}\r\n", "import { HTML } from '../../../../../element/element';\r\nimport { Tile } from '../../../../../element/tile';\r\nimport { Utils } from '../../../../../math/util';\r\nimport { Vector2 } from '../../../../../math/vector2';\r\nimport { TileGame } from '../../tilegame';\r\nimport { Section } from '../../util/section';\r\nimport { CoffeeMachine } from './assets';\r\n\r\nexport class Coffee extends Section {\r\n    public constructor(private parent: TileGame, gridParams: ConstructorParameters<typeof Section>[2]) {\r\n        super(new Vector2(400, 600), {\r\n            backgroundColor: '#354c59',\r\n            justifyContent: 'flex-start',\r\n            overflow: 'hidden',\r\n        }, gridParams);\r\n\r\n\r\n        \r\n        this.append(new Tile({\r\n            tileSize: new Vector2(80, 120),\r\n            transform: {\r\n                position: new Vector2(0, -200),\r\n                rotation: 30,\r\n            },\r\n            offsetRow: new Vector2(0, 0),\r\n            offsetCol: new Vector2(0, 0),\r\n            repeatX: 1,\r\n            repeatY: 5,\r\n            options: {\r\n                style: {\r\n                    width: '800px',\r\n                    height: '80px',\r\n                    border: '10px solid rgb(60, 85, 97)',\r\n                    boxSizing: 'border-box',\r\n                    backgroundColor: '#3c5561',\r\n                    borderRadius: '20px',\r\n                },\r\n                transform: {\r\n                }\r\n            }\r\n        }));\r\n\r\n        const table = this.append(new HTML({\r\n            style: {\r\n                backgroundColor: '#674b47',\r\n                filter: 'drop-shadow(0px -4px 30px #00000040)',\r\n                padding: '30px solid #674b47',\r\n                boxSizing: 'border-box',\r\n\r\n            },\r\n            transform: {\r\n                anchor: new Vector2(0.5, 0.5),\r\n                size: new Vector2(500, 110),\r\n                rotation: 0,\r\n                position: new Vector2(-50, 500)\r\n            }\r\n        }));\r\n        table.append(new Tile({\r\n            tileSize: new Vector2(45, 120),\r\n            transform: {\r\n                position: new Vector2(-15, 15),\r\n            },\r\n            offsetRow: new Vector2(0, 0),\r\n            offsetCol: new Vector2(0, 0),\r\n            repeatX: 20,\r\n            repeatY: 1,\r\n            options: {\r\n                style: {\r\n                    width: '35px',\r\n                    height: '110px',\r\n                    boxSizing: 'border-box',\r\n                    backgroundColor: '#79514b',\r\n                },\r\n                transform: {\r\n                }\r\n            }\r\n        }));\r\n        this.append(new CoffeeMachine(new Vector2(55, 240), () => {\r\n            this.parent.office.tired = 0;\r\n        }));\r\n    }\r\n\r\n    updateGrid(gridParams: [number, number, number, number]) {\r\n        super.updateGrid(gridParams);\r\n\r\n        if (Utils.isMobile()) {\r\n            this.dom.style.width = '450px';\r\n            this.dom.style.height = '100%';\r\n        } else {\r\n            this.dom.style.width = '100%';\r\n            this.dom.style.height = '600px';\r\n        }\r\n    }\r\n\r\n}", "import { Vector2 } from '../../../../math/vector2';\r\nimport { TileGame } from '../tilegame';\r\nimport { Section } from '../util/section';\r\n\r\nexport class Debug extends Section {\r\n\r\n    public constructor(private parent: TileGame, gridParams: ConstructorParameters<typeof Section>[2]) {\r\n        super(new Vector2(700, 20), {\r\n            transition: 'width 0.8s ease-in-out, height 0.8s ease-in-out',\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            borderRadius: '10px',\r\n            boxSizing: 'border-box',\r\n            backgroundColor: 'transparent',\r\n            boxShadow: 'none',\r\n            overflow: 'visible',\r\n            pointerEvents: 'none',\r\n            background: '#3c5561',\r\n            width: '100%',\r\n            height: '100%',\r\n            color: '#fff',\r\n            fontFamily: 'monospace',\r\n            fontSize: '24px',\r\n            padding: '0 10px',\r\n\r\n        }, gridParams);\r\n    }\r\n\r\n}\r\n", "import { HTML, HTMLOptions } from \"./element\";\r\n\r\nexport interface GridOptions extends HTMLOptions {\r\n    rows?: string;\r\n    columns?: string;\r\n    gap?: number;\r\n    alignContent?: string;\r\n    alignItems?: string;\r\n    justifyContent?: string;\r\n    justifyItems?: string;\r\n}\r\n\r\nexport class Grid extends HTML {\r\n    public readonly options: GridOptions;\r\n    public constructor(options: GridOptions) {\r\n        super({ ...options, classList: [...(options.classList || []), '_grid'] });\r\n\r\n        this.setStyle({\r\n            gridTemplateColumns: options.columns || '1fr',\r\n            gridTemplateRows: options.rows || '1fr',\r\n            gap: `${options.gap}px`,\r\n            alignContent: options.alignContent || 'center',\r\n            alignItems: options.alignItems || 'center',\r\n            justifyContent: options.justifyContent || 'center',\r\n            justifyItems: options.justifyItems || 'center',\r\n        });\r\n        this.setStyle(options.style || {});\r\n    }\r\n\r\n    public setTemplateColumns(columns: string) {\r\n        this.setStyle({\r\n            gridTemplateColumns: columns,\r\n        });\r\n    }\r\n\r\n    public setTemplateRows(rows: string) {\r\n        this.setStyle({\r\n            gridTemplateRows: rows,\r\n        });\r\n    }\r\n}", "import { HTML } from '../../../../element/element';\r\nimport { Vector2 } from '../../../../math/vector2';\r\nimport { glob } from '../../../base';\r\nimport { TickerReturnData } from '../../../ticker';\r\nimport { TileGame } from '../tilegame';\r\nimport { Section } from '../util/section';\r\n\r\nexport class Gameover extends Section {\r\n    text1: HTML;\r\n    text2: HTML;\r\n\r\n    public constructor(private parent: TileGame, gridParams: ConstructorParameters<typeof Section>[2]) {\r\n        super(new Vector2(700, 20), {\r\n            transition: 'width 0.8s ease-in-out, height 0.8s ease-in-out, opacity 0.8s ease-in-out',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            borderRadius: '10px',\r\n            boxSizing: 'border-box',\r\n            backgroundColor: 'transparent',\r\n            boxShadow: 'none',\r\n            pointerEvents: 'none',\r\n            background: '#3c5561',\r\n            width: '100%',\r\n            height: '100%',\r\n            padding: '50px',\r\n            overflow: 'hidden',\r\n        }, gridParams);\r\n\r\n        this.append(this.text1 = new HTML({\r\n            style: {\r\n                width: '100%',\r\n                fontFamily: 'Noto Sans',\r\n                fontWeight: '500',\r\n                textShadow: '0px 0px 10px black',\r\n                lineHeight: '100px',\r\n                fontSize: '90px',\r\n                color: '#fff',\r\n                position: 'relative',\r\n            },\r\n            text: 'GAME OVER',\r\n        }));\r\n        this.append(this.text2 = new HTML({\r\n            style: {\r\n                width: '100%',\r\n                fontFamily: 'Noto Sans',\r\n                fontWeight: '500',\r\n                textShadow: '0px 0px 10px black',\r\n                fontSize: '40px',\r\n                color: '#fff',\r\n                position: 'relative',\r\n                lineHeight: '50px',\r\n            },\r\n        }));\r\n\r\n        this.opacity = 0;\r\n        this.text1.setText('GAME OVER');\r\n    }\r\n\r\n    public trigger() {\r\n        this.opacity = 0.8;\r\n        glob.game.ticker.stop();\r\n        this.parent.addState('atdesk', false);\r\n        this.parent.addState('atcoffeemachine', false);\r\n        this.parent.updateGridSize(true);\r\n        this.text2.setText(`${this.parent.office.npc.collected} report${this.parent.office.npc.collected === 1 ? '' : 's'} completed`);\r\n    }\r\n\r\n    public tick(obj: TickerReturnData) {\r\n\r\n        if (this.parent.getState('gameover')) {\r\n            this.trigger();\r\n        }\r\n    }\r\n\r\n}\r\n", "import { Screen } from \"../../../element/screen\";\r\nimport { TickerReturnData } from '../../ticker';\r\nimport { Busywork } from '../../../../game';\r\nimport { Computer } from './sections/computer/computer';\r\nimport { Keyboard } from './sections/keyboard/keyboard';\r\nimport { Office } from './sections/office/office';\r\nimport { Vector2 } from '../../../math/vector2';\r\nimport { StatBar } from './sections/stat/statbar';\r\nimport { Coffee } from './sections/coffee/coffee';\r\nimport { Debug } from './sections/debug';\r\nimport { Grid } from '../../../element/grid';\r\nimport { glob } from '../../base';\r\nimport { Utils } from '../../../math/util';\r\nimport { Gameover } from './sections/gameover';\r\n\r\nexport class GridManager {\r\n\r\n    private columns: number[] = [450, 700, 450];\r\n    private rows: number[] = [0, 350, 230, 50];\r\n\r\n    public constructor(private grid: Grid, columns: number[], rows: number[], private gap: number = 20) {\r\n        this.columns = columns;\r\n        this.rows = rows;\r\n        this.updateGrid();\r\n    }\r\n\r\n    setColumnWidth(index: number, width: number) {\r\n        this.columns[index] = width;\r\n    }\r\n    \r\n\r\n\r\n    setColumns(columns: number[]) {\r\n        this.columns = columns;\r\n    }\r\n\r\n    setRowHeight(index: number, height: number) {\r\n        this.rows[index] = height;\r\n    }\r\n\r\n    setBulkRowHeight(height: number, except: number[] = []) {\r\n        this.rows.forEach((row, index) => {\r\n           this.setRowHeight(index, except.includes(index) ? row : height);\r\n        });\r\n    }\r\n\r\n    setBulkColumnWidth(width: number, except: number[] = []) {\r\n        this.columns.forEach((column, index) => {\r\n           this.setColumnWidth(index, except.includes(index) ? column : width);\r\n        });\r\n    }\r\n\r\n    setRows(rows: number[]) {\r\n        this.rows = rows;\r\n    }\r\n\r\n    getColumns() {\r\n        let columns: number[] = [];\r\n        let leftColumn = false;\r\n        this.columns.forEach((width, index) => {\r\n\r\n            if (index > 0) {\r\n                if (leftColumn && width !== 0) {\r\n                    columns.push(this.gap);\r\n                } else {\r\n                    columns.push(0);\r\n                }\r\n            }\r\n\r\n            if (width !== 0) {\r\n                leftColumn = true;\r\n            }\r\n\r\n            columns.push(width);\r\n        });\r\n        return columns;\r\n    }\r\n    getRows() {\r\n        let rows: number[] = [];\r\n        let leftRow = false;\r\n        this.rows.forEach((width, index) => {\r\n\r\n            if (index > 0) {\r\n                if (leftRow && width !== 0) {\r\n                    rows.push(this.gap);\r\n                } else {\r\n                    rows.push(0);\r\n                }\r\n            }\r\n\r\n            if (width !== 0) {\r\n                leftRow = true;\r\n            }\r\n\r\n            rows.push(width);\r\n        });\r\n        return rows;\r\n    }\r\n\r\n    getSize() {\r\n        return new Vector2(this.getColumns().reduce((a, b) => a + b, 0), this.getRows().reduce((a, b) => a + b, 0));\r\n    }\r\n\r\n    updateGrid() {\r\n        this.grid.setTemplateColumns(this.getColumns().join('px ') + 'px');\r\n        this.grid.setTemplateRows(this.getRows().join('px ') + 'px');\r\n    }\r\n}\r\n\r\nexport class TileGame extends Screen {\r\n    public office: Office;\r\n    public computer: Computer;\r\n    public keyboard: Keyboard;\r\n    public coffee: Coffee;\r\n    public debug: Debug;\r\n    public gameover: Gameover;\r\n    public maxSize: Vector2 = new Vector2(1170, 620);\r\n    private stateData: {\r\n        [key: string]: {\r\n            value: boolean;\r\n            condition?: () => boolean;\r\n            onChange?: (value: boolean) => void;\r\n        };\r\n    } = {\r\n\r\n        };\r\n    statBar: StatBar;\r\n    grid: Grid;\r\n    gridManager: GridManager;\r\n\r\n    public addState(state: string, initial: boolean, condition?: () => boolean, onChange?: (value: boolean) => void) {\r\n        this.stateData[state] = {\r\n            value: initial,\r\n            condition: condition,\r\n            onChange: onChange,\r\n        };\r\n        this.stateData[state].onChange?.(initial);\r\n    }\r\n\r\n    public getState(state: string) {\r\n        return this.stateData[state]?.value;\r\n    }\r\n\r\n    private _mobile: boolean = false;\r\n\r\n    updateGridSize(force: boolean = false) {\r\n\r\n        if (this._mobile !== Utils.isMobile() || force) {\r\n            this._mobile = Utils.isMobile();\r\n            if (this._mobile) {\r\n\r\n                this.debug.updateGrid([1, 1, 1, 1]);\r\n                this.computer.updateGrid([1, 1, 3, 1]);\r\n                this.keyboard.updateGrid([1, 1, 5, 1]);\r\n                this.office.updateGrid([1, 1, 7, 1]);\r\n                this.gameover.updateGrid([1, 1, 7, 1]);\r\n                this.coffee.updateGrid([1, 1, 11, 1]);\r\n                this.statBar.updateGrid([1, 1, 7, 1]);\r\n                this.gridManager.setColumns([700]);\r\n                this.gridManager.setRows([0, 350, 230, 600, 1, 600]);\r\n\r\n            } else {\r\n\r\n                this.coffee.updateGrid([5, 1, 3, 3]);\r\n                this.computer.updateGrid([1, 1, 3, 1]);\r\n                this.keyboard.updateGrid([1, 1, 5, 1]);\r\n                this.debug.updateGrid([1, 5, 1, 1]);\r\n                this.office.updateGrid([3, 1, 3, 3]);\r\n                this.gameover.updateGrid([3, 1, 3, 3]);\r\n                this.statBar.updateGrid([3, 1, 7, 1]);\r\n                this.gridManager.setColumns([450, 700, 450]);\r\n                this.gridManager.setRows([0, 350, 230, 1]);\r\n            }\r\n\r\n        }\r\n       \r\n\r\n        if (this._mobile) {\r\n            this.gridManager.setColumnWidth(0, this.getState('atdesk') || this.getState('atcoffeemachine') ? 450 : 700);\r\n            this.gridManager.setRowHeight(1, this.getState('atdesk') ? 350 : 0);\r\n            this.gridManager.setRowHeight(2, this.getState('atdesk') ? 230 : 0);\r\n            this.gridManager.setRowHeight(3, this.getState('atdesk') || this.getState('atcoffeemachine') ? 500 : 600);\r\n            this.gridManager.setRowHeight(5, this.getState('atcoffeemachine') ? 600 : 0);\r\n            this.gridManager.updateGrid();\r\n            this.updateScale(this.gridManager.getSize().add(new Vector2(40, 40)));\r\n\r\n        } else {\r\n            this.gridManager.setColumnWidth(0, this.getState('atdesk') ? 450 : 0);\r\n            this.gridManager.setColumnWidth(1, 680);\r\n            this.gridManager.setColumnWidth(2, this.getState('atcoffeemachine') ? 400 : 0);\r\n            this.gridManager.updateGrid();\r\n            this.updateScale(this.gridManager.getSize().add(new Vector2(20, 80)));\r\n        }\r\n\r\n\r\n    }\r\n\r\n    updateScale(size: Vector2 = this.maxSize) {\r\n        const windowSize = new Vector2(window.innerWidth, window.innerHeight);\r\n        const xf = windowSize.x / size.x;\r\n        const yf = windowSize.y / size.y;\r\n        this.grid.transform.setScale(new Vector2(Math.min(xf, yf), Math.min(xf, yf)));\r\n    }\r\n\r\n    public constructor(private game: Busywork) {\r\n        super('test');\r\n\r\n        this.append(this.grid = new Grid({\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            gap: 0,\r\n            style: {\r\n                width: `${this.maxSize.x}px`,\r\n                height: `${this.maxSize.y}px`,\r\n                transition: 'grid-template-columns 1s cubic-bezier(0.4, 0, 0.2, 1), grid-template-rows 1s cubic-bezier(0.4, 0, 0.2, 1), transform 1s cubic-bezier(0.4, 0, 0.2, 1)',\r\n            },\r\n            transform: {\r\n                size: this.maxSize,\r\n                anchor: new Vector2(0.5, 0.5),\r\n            }\r\n        }), true);\r\n\r\n        this.grid.append(this.debug = new Debug(this, [1, 1, 1, 1]));\r\n        this.grid.append(this.computer = new Computer(this, [1, 1, 3, 1]));\r\n        this.grid.append(this.keyboard = new Keyboard(this, [1, 1, 5, 1]));\r\n        this.grid.append(this.office = new Office(this, [1, 1, 7, 1]), true);\r\n        this.grid.append(this.coffee = new Coffee(this, [1, 1, 11, 1]));\r\n        this.grid.append(this.gameover = new Gameover(this, [1, 1, 1, 1]));\r\n        this.grid.append(this.statBar = new StatBar(this, [1, 1, 9, 1]));\r\n        this.gridManager = new GridManager(this.grid, [450, 700, 450], [0, 350, 230, 1], 20);\r\n\r\n\r\n\r\n        glob.debug = this.debug;\r\n\r\n        window.addEventListener('resize', () => {\r\n            glob.mobile = window.innerWidth < window.innerHeight;\r\n            this.updateGridSize(true);\r\n        });\r\n\r\n        this.updateGridSize(true);\r\n\r\n        this.addState('atdesk', false,\r\n            () => {\r\n                return this.office.walker.transform.position.distance(new Vector2(280, 165)) < 60 &&\r\n                    (!this.office.walker.destination || this.office.walker.destination.distance(new Vector2(280, 165)) < 60);\r\n            },\r\n            (value) => {\r\n                this.updateGridSize();\r\n                this.office.sitter.seated = value;\r\n                this.office.walker.visible = !value;\r\n                if (value) {\r\n                    this.office.walker.setDestination(undefined);\r\n                    this.office.walker.transform.setPosition(new Vector2(280, 160));\r\n                }\r\n            }\r\n        );\r\n        this.addState('atcoffeemachine', false,\r\n            () => {\r\n                this.updateGridSize();\r\n                return this.office.walker.transform.position.distance(new Vector2(650, 550)) < 200 &&\r\n                    (!this.office.walker.destination || this.office.walker.destination.distance(new Vector2(700, 600)) < 200);\r\n            }\r\n        );\r\n        this.addState('bossinroom', false,\r\n            () => {\r\n                return this.office.npc.phase > 0 && this.office.npc.phase < 5;\r\n            }\r\n        );\r\n        this.addState('bosslooking', false,\r\n            () => {\r\n                return this.office.npc.phase > 2 && this.office.npc.phase < 4;\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    public syncStates() {\r\n        Object.values(this.stateData).forEach(data => {\r\n            const lastValue = data.value;\r\n            if (data.condition) {\r\n                data.value = data.condition();\r\n            }\r\n            if (data.onChange && lastValue !== data.value) {\r\n                data.onChange(data.value);\r\n            }\r\n        });\r\n    }\r\n\r\n    public tick(obj: TickerReturnData) {\r\n        super.tick(obj);\r\n        this.syncStates();\r\n\r\n        this.gameover.tick(obj);\r\n\r\n    }\r\n\r\n}", "import { HTML, HTMLOptions } from \"./element\";\r\n\r\nexport interface LabelOptions extends HTMLOptions {\r\n    size?: number;\r\n    color?: string;\r\n    font?: string;\r\n    weight?: string;\r\n    align?: string;\r\n    lineHeight?: string;\r\n    letterSpacing?: string;\r\n}\r\n\r\nexport class Label extends HTML {\r\n    public constructor(options: LabelOptions) {\r\n        super({ ...options, classList: [...(options.classList || []), '_label'] });\r\n        this.setStyle({\r\n            fontSize: `${options.size}px`,\r\n            color: options.color,\r\n            fontFamily: options.font,\r\n            fontWeight: options.weight,\r\n            textAlign: options.align,\r\n            lineHeight: options.lineHeight,\r\n            letterSpacing: options.letterSpacing,\r\n        });\r\n    }\r\n}   ", "import { Busywork } from '../../../game';\r\nimport { Button } from '../../element/button';\r\nimport { Flex } from '../../element/flex';\r\nimport { Label } from '../../element/label';\r\nimport { Screen } from '../../element/screen';\r\n\r\nexport class Menu extends Screen {\r\n    public constructor(private game: Busywork) {\r\n        super('menu');\r\n        const column = this.append(new Flex({\r\n            flexDirection: 'column',\r\n            gap: 20,\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            style: {\r\n                width: '100%',\r\n                height: '100%', \r\n            }\r\n        }));\r\n        const row1 = column.append(new Flex({\r\n            gap: 10,\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n \r\n        }));\r\n        const row2 = column.append(new Flex({\r\n            gap: 10,\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        }));\r\n\r\n\r\n        row1.append(new Label({ text: 'Busywork', size: 20, color: 'white', weight: 'bold', font: 'Arial, sans-serif' }));\r\n        row2.append(new Button({ text: 'Click me', style: { backgroundColor: '#2198c9', color: 'white', borderRadius: '5px' }, onMouseDown: () => {\r\n            this.game.start();\r\n        } }));\r\n    }\r\n}", "import { Game as Base } from \"./classes/busywork/base\";\r\nimport { TileGame } from './classes/busywork/screens/main/tilegame';\r\nimport { Menu } from './classes/busywork/screens/menu';\r\n\r\nexport class Busywork extends Base {\r\n    private _menu: Menu;\r\n    private main: TileGame;\r\n    public constructor() {\r\n        super();\r\n        this.addScreen(new Menu(this));\r\n        this.addScreen(this.main = new TileGame(this));\r\n\r\n    }\r\n\r\n    public run() {\r\n        this.screens['menu'].visible = false;\r\n        this.screens['test'].visible = true;\r\n    }\r\n\r\n    public start() {\r\n        this.screens['menu'].visible = false;\r\n        this.screens['test'].visible = true;\r\n    }\r\n}", "import { Busywork } from './game';\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\r\n\r\n    if (location.hostname !== 'localhost') {\r\n        const base = document.createElement('base');\r\n        base.href = \"https://basamols.github.io/busywork/dist/\";\r\n        document.head.appendChild(base);\r\n    }\r\n\r\n    const g = new Busywork();\r\n    g.run();\r\n    document.body.appendChild(g.dom);\r\n    \r\n    window.oncontextmenu = function (event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        return false;\r\n    };\r\n});"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAKO,IAAM,UAAN,MAAM,SAAQ;AAAA,EAGV,YAAY,GAAY,GAAY;AACvC,SAAK,IAAI,gBAAK;AACd,SAAK,IAAI,gBAAK,KAAK;AAAA,EACvB;AAAA,EAEO,QAAQ;AACX,WAAO,IAAI,SAAQ,KAAK,GAAG,KAAK,CAAC;AAAA,EACrC;AAAA,EAEO,OAAO,GAAuB;AACjC,UAAM,MAAM,KAAK,MAAM;AACvB,MAAE,QAAQ,CAAAA,OAAK;AACX,UAAI,KAAKA,GAAE;AACX,UAAI,KAAKA,GAAE;AAAA,IACf,CAAC;AACD,WAAO;AAAA,EACX;AAAA,EAEO,OAAO,GAAuB;AACjC,UAAM,MAAM,KAAK,MAAM;AACvB,MAAE,QAAQ,CAAAA,OAAK;AACX,UAAI,KAAKA,GAAE;AACX,UAAI,KAAKA,GAAE;AAAA,IACf,CAAC;AACD,WAAO;AAAA,EACX;AAAA,EAEO,SAAS,GAAsB;AAClC,UAAM,MAAM,KAAK,MAAM;AACvB,MAAE,QAAQ,CAAAC,OAAK;AACX,UAAI,KAAKA;AACT,UAAI,KAAKA;AAAA,IACb,CAAC;AACD,WAAO;AAAA,EACX;AAAA,EAEO,MAAM,GAAoB;AAC7B,WAAO,KAAK,IAAI,EAAE,IAAI,KAAK,IAAI,EAAE;AAAA,EACrC;AAAA,EAEO,IAAI,GAAoB;AAC3B,WAAO,KAAK,IAAI,EAAE,IAAI,KAAK,IAAI,EAAE;AAAA,EACrC;AAAA,EAEO,SAAiB;AACpB,WAAO,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,CAAC;AAAA,EACtD;AAAA,EAEO,SAAS,GAAoB;AAChC,WAAO,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,EAAE,GAAG,CAAC,IAAI,KAAK,IAAI,KAAK,IAAI,EAAE,GAAG,CAAC,CAAC;AAAA,EAC1E;AAAA,EAEO,QAAgB;AACnB,WAAO,KAAK,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,MAAM,KAAK,KAAK;AAAA,EACxD;AAAA,EAEO,OAAO,OAAwB;AAClC,UAAM,MAAM,KAAK,MAAM;AACvB,UAAM,MAAM,KAAK,IAAI,KAAK;AAC1B,UAAM,MAAM,KAAK,IAAI,KAAK;AAC1B,QAAI,IAAI,KAAK,IAAI,MAAM,KAAK,IAAI;AAChC,QAAI,IAAI,KAAK,IAAI,MAAM,KAAK,IAAI;AAChC,WAAO;AAAA,EACX;AAAA,EAEO,KAAK,GAAY,GAAoB;AACxC,UAAM,MAAM,KAAK,MAAM;AACvB,QAAI,IAAI,KAAK,KAAK,EAAE,IAAI,KAAK,KAAK;AAClC,QAAI,IAAI,KAAK,KAAK,EAAE,IAAI,KAAK,KAAK;AAClC,WAAO;AAAA,EACX;AAAA,EAEO,OAAO,GAAqB;AAC/B,WAAO,KAAK,MAAM,EAAE,KAAK,KAAK,MAAM,EAAE;AAAA,EAC1C;AAAA,EAEO,WAAmB;AACtB,WAAO,WAAW,YAAK,GAAC,MAAK,YAAK,GAAC;AAAA,EACvC;AAAA,EAEO,UAAoB;AACvB,WAAO,CAAC,KAAK,GAAG,KAAK,CAAC;AAAA,EAC1B;AAAA,EAEO,YAAqB;AACxB,UAAM,MAAM,KAAK,MAAM;AACvB,UAAM,MAAM,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC;AACnD,QAAI,KAAK;AACT,QAAI,KAAK;AACT,WAAO;AAAA,EACX;AAEJ;;;ACxFO,IAAM,YAAN,MAAgB;AAAA,EAiBZ,YAAY,UAA4B,CAAC,GAAG;AAXnD;AAAA,SAAQ,cAA+I,CAAC;AAlB5J;AA8BQ,SAAK,aAAY,aAAQ,aAAR,YAAoB,IAAI,QAAQ,GAAG,CAAC;AACrD,SAAK,UAAS,aAAQ,UAAR,YAAiB,IAAI,QAAQ,GAAG,CAAC;AAC/C,SAAK,aAAY,aAAQ,aAAR,YAAoB;AACrC,SAAK,WAAU,aAAQ,WAAR,YAAkB,IAAI,QAAQ,GAAG,CAAC;AACjD,SAAK,SAAQ,aAAQ,SAAR,YAAgB,IAAI,QAAQ,GAAG,CAAC;AAC7C,SAAK,UAAU,QAAQ;AAAA,EAC3B;AAAA,EAfA,UAAU,QAAmB;AACzB,SAAK,UAAU;AACf,SAAK,QAAQ;AAAA,EACjB;AAAA,EACA,YAAY;AACR,WAAO,KAAK,YAAY;AAAA,EAC5B;AAAA,EAWO,aAAa,WAAgI;AAChJ,SAAK,YAAY,KAAK,SAAS;AAC/B,cAAU,EAAE,UAAU,KAAK,UAAU,OAAO,KAAK,OAAO,UAAU,KAAK,UAAU,QAAQ,KAAK,OAAO,CAAC;AAAA,EAC1G;AAAA,EAEA,IAAW,WAAW;AAClB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,IAAW,QAAQ;AACf,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,IAAW,WAAW;AAClB,WAAO,KAAK,YAAY;AAAA,EAC5B;AAAA,EAEA,IAAW,SAAS;AAChB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,IAAW,OAAO;AACd,WAAO,KAAK;AAAA,EAChB;AAAA,EAEO,YAAY,UAAmB;AAClC,SAAK,YAAY;AACjB,SAAK,QAAQ;AAAA,EACjB;AAAA,EAEO,sBAKL;AAEE,UAAM,cAAc,KAAK,eAAe;AAGxC,QAAI,KAAK,SAAS;AACd,YAAM,iBAAiB,KAAK,QAAQ,oBAAoB;AACxD,YAAM,iBAAiB,KAAK,iBAAiB,eAAe,QAAQ,WAAW;AAG/E,YAAM,mBAAmB,KAAK,4BAA4B,KAAK,WAAW,cAAc;AACxF,YAAM,gBAAgB,IAAI;AAAA,QACtB,KAAK,OAAO,IAAI,eAAe,MAAM;AAAA,QACrC,KAAK,OAAO,IAAI,eAAe,MAAM;AAAA,MACzC;AACA,YAAM,oBAAoB,KAAK,YAAY,eAAe,YAAY;AAEtE,aAAO;AAAA,QACH,UAAU;AAAA,QACV,OAAO;AAAA,QACP,UAAU;AAAA,QACV,QAAQ;AAAA,MACZ;AAAA,IACJ;AAGA,WAAO;AAAA,MACH,UAAU,KAAK,UAAU,MAAM;AAAA,MAC/B,OAAO,KAAK,OAAO,MAAM;AAAA,MACzB,UAAU,KAAK;AAAA,MACf,QAAQ;AAAA,IACZ;AAAA,EACJ;AAAA,EAEQ,4BAA4B,OAAgB,gBAAkF;AAElI,UAAM,UAAU,eAAe,YAAY,KAAK,KAAK;AACrD,UAAM,MAAM,KAAK,IAAI,OAAO;AAC5B,UAAM,MAAM,KAAK,IAAI,OAAO;AAG5B,UAAM,UAAU,MAAM,IAAI,eAAe,MAAM;AAC/C,UAAM,UAAU,MAAM,IAAI,eAAe,MAAM;AAG/C,UAAM,WAAW,UAAU,MAAM,UAAU;AAC3C,UAAM,WAAW,UAAU,MAAM,UAAU;AAG3C,WAAO,IAAI;AAAA,MACP,WAAW,eAAe,SAAS;AAAA,MACnC,WAAW,eAAe,SAAS;AAAA,IACvC;AAAA,EACJ;AAAA,EAEQ,iBAA2B;AAE/B,UAAM,kBAAkB,KAAK,aAAa,KAAK,KAAK;AACpD,UAAM,MAAM,KAAK,IAAI,eAAe;AACpC,UAAM,MAAM,KAAK,IAAI,eAAe;AAGpC,UAAM,UAAU,KAAK,QAAQ,IAAI,KAAK,MAAM;AAC5C,UAAM,UAAU,KAAK,QAAQ,IAAI,KAAK,MAAM;AAI5C,UAAM,SAAS,KAAK,OAAO;AAC3B,UAAM,SAAS,KAAK,OAAO;AAE3B,UAAM,IAAI,SAAS;AACnB,UAAM,IAAI,SAAS;AACnB,UAAM,IAAI,CAAC,SAAS;AACpB,UAAM,IAAI,SAAS;AAEnB,UAAM,KAAK,KAAK,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI;AAC3D,UAAM,KAAK,KAAK,UAAU,IAAI,WAAW,IAAI,UAAU,IAAI;AAE3D,WAAO;AAAA,MACH;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACT;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACT;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACT;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,IACf;AAAA,EACJ;AAAA,EAEQ,iBAAiB,GAAa,GAAuB;AAEzD,UAAM,SAAS,IAAI,MAAM,EAAE;AAE3B,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,eAAO,IAAI,IAAI,CAAC,IACZ,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,IAC1B,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,IAC1B,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,IAC1B,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC;AAAA,MAClC;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAAA,EAEA,IAAW,WAKT;AACE,WAAO,KAAK,oBAAoB;AAAA,EACpC;AAAA,EAIO,SAAS,OAAyB,QAAuB;AAC5D,QAAI,OAAO,UAAU,UAAU;AAC3B,WAAK,SAAS,IAAI,QAAQ,OAAO,0BAAU,KAAK;AAAA,IACpD,OAAO;AACH,WAAK,SAAS;AAAA,IAClB;AACA,SAAK,QAAQ;AAAA,EACjB;AAAA,EAEO,YAAY,UAAkB;AACjC,SAAK,YAAY;AACjB,SAAK,QAAQ;AAAA,EACjB;AAAA,EAEO,UAAU,QAAiB;AAC9B,SAAK,UAAU;AACf,SAAK,QAAQ;AAAA,EACjB;AAAA,EAEO,QAAQ,MAAe;AAC1B,SAAK,QAAQ;AACb,SAAK,QAAQ;AAAA,EACjB;AAAA,EAEA,IAAW,SAAS;AAGhB,WAAO,KAAK,eAAe;AAAA,EAC/B;AAAA,EAEQ,UAAU;AACd,SAAK,YAAY,QAAQ,eAAa;AAClC,gBAAU,EAAE,UAAU,KAAK,UAAU,OAAO,KAAK,OAAO,UAAU,KAAK,UAAU,QAAQ,KAAK,OAAO,CAAC;AAAA,IAC1G,CAAC;AAAA,EACL;AAAA,EAEO,UAAU,QAAkB;AAC/B,QAAI,OAAO,WAAW,IAAI;AACtB,YAAM,IAAI,MAAM,6DAA6D;AAAA,IACjF;AAGA,UAAM,IAAI,OAAO,CAAC;AAClB,UAAM,IAAI,OAAO,CAAC;AAClB,UAAM,IAAI,OAAO,CAAC;AAClB,UAAM,IAAI,OAAO,CAAC;AAClB,UAAM,KAAK,OAAO,EAAE;AACpB,UAAM,KAAK,OAAO,EAAE;AAGpB,UAAM,SAAS,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC;AACtC,UAAM,SAAS,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC;AAGtC,UAAM,WAAW,KAAK,MAAM,GAAG,CAAC,KAAK,MAAM,KAAK;AAIhD,UAAM,UAAU,KAAK,QAAQ,IAAI,KAAK,MAAM;AAC5C,UAAM,UAAU,KAAK,QAAQ,IAAI,KAAK,MAAM;AAK5C,UAAM,YAAY,KAAK,WAAW,IAAI,UAAU,IAAI;AACpD,UAAM,YAAY,KAAK,WAAW,IAAI,UAAU,IAAI;AAGpD,SAAK,YAAY,IAAI,QAAQ,WAAW,SAAS;AACjD,SAAK,SAAS,IAAI,QAAQ,QAAQ,MAAM;AACxC,SAAK,YAAY;AAEjB,SAAK,QAAQ;AAAA,EACjB;AAAA,EAEA,SAAS;AACL,SAAK,QAAQ;AAAA,EACjB;AAEJ;;;ACzPO,IAAM,OAAN,MAAW;AAAA,EAMP,YAAY,UAAuB,CAAC,GAAG;AAD9C,SAAO,WAAmB,CAAC;AA0F3B,SAAU,WAAoB;AAhHlC;AAwBQ,SAAK,UAAU;AACf,SAAK,OAAO,KAAK,QAAQ,QAAQ;AACjC,SAAK,MAAM,SAAS,cAAc,KAAK,IAAI;AAC3C,SAAK,IAAI,UAAU,IAAI,YAAY,MAAM,KAAK,IAAI;AAClD,QAAI,KAAK,QAAQ,WAAW;AACxB,WAAK,QAAQ,UAAU,QAAQ,eAAa;AACxC,aAAK,IAAI,UAAU,IAAI,SAAS;AAAA,MACpC,CAAC;AAAA,IACL;AACA,QAAI,KAAK,QAAQ,MAAM;AACnB,WAAK,QAAQ,KAAK,QAAQ,IAAI;AAAA,IAClC;AACA,SAAI,UAAK,QAAQ,cAAb,mBAAwB,MAAM;AAC9B,WAAK,SAAS;AAAA,QACV,OAAO,KAAK,QAAQ,UAAU,KAAK,IAAI;AAAA,QACvC,QAAQ,KAAK,QAAQ,UAAU,KAAK,IAAI;AAAA,MAC5C,CAAC;AAAA,IACL;AACA,SAAK,SAAS,KAAK,QAAQ,KAAK;AAChC,SAAK,YAAY,IAAI,UAAU,KAAK,QAAQ,SAAS;AACrD,SAAK,UAAU,aAAa,CAAC,EAAE,QAAQ,UAAU,OAAO,SAAS,MAAM;AAEnE,WAAK,IAAI,MAAM,kBAAkB;AACjC,WAAK,IAAI,MAAM,YAAY,YAAY,cAAO,KAAK,GAAG,GAAC;AAAA,IAC3D,CAAC;AAED,QAAI,QAAQ,aAAa;AACrB,WAAK,IAAI,iBAAiB,eAAe,CAAC,MAAM;AAC5C,aAAK,QAAQ,YAAY,GAAG,IAAI;AAAA,MACpC,CAAC;AAAA,IACL;AACA,QAAI,QAAQ,WAAW;AACnB,WAAK,IAAI,iBAAiB,aAAa,CAAC,MAAM;AAC1C,aAAK,QAAQ,UAAU,GAAG,IAAI;AAAA,MAClC,CAAC;AAAA,IACL;AAEA,QAAI,QAAQ,aAAa;AACrB,WAAK,IAAI,iBAAiB,eAAe,CAAC,MAAM;AAC5C,aAAK,QAAQ,YAAY,GAAG,IAAI;AAAA,MACpC,CAAC;AAAA,IACL;AACA,QAAI,QAAQ,cAAc;AACtB,WAAK,IAAI,iBAAiB,gBAAgB,CAAC,MAAM;AAC7C,aAAK,QAAQ,aAAa,GAAG,IAAI;AAAA,MACrC,CAAC;AAAA,IACL;AACA,QAAI,QAAQ,cAAc;AACtB,WAAK,IAAI,iBAAiB,gBAAgB,CAAC,MAAM;AAC7C,aAAK,QAAQ,aAAa,GAAG,IAAI;AAAA,MACrC,CAAC;AAAA,IACL;AACA,SAAK,QAAQ,KAAK,QAAQ,IAAI;AAE9B,QAAI,QAAQ,UAAU;AAClB,cAAQ,SAAS,QAAQ,WAAS;AAC9B,aAAK,OAAO,KAAK;AAAA,MACrB,CAAC;AAAA,IACL;AAAA,EACJ;AAAA,EAEO,OAAO,SAAe,WAAoB,OAAa;AAC1D,SAAK,IAAI,YAAY,QAAQ,GAAG;AAChC,QAAI,CAAC,QAAQ,UAAU,UAAU,KAAK,CAAC,UAAU;AAC7C,cAAQ,UAAU,UAAU,KAAK,SAAS;AAAA,IAC9C;AACA,SAAK,SAAS,KAAK,OAAO;AAC1B,WAAO;AAAA,EACX;AAAA,EAEO,SAAS;AACZ,SAAK,IAAI,OAAO;AAAA,EACpB;AAAA,EAEO,SAAS,OAAqC;AACjD,QAAI,OAAO;AACP,aAAO,OAAO,KAAK,IAAI,OAAO,KAAK;AAAA,IACvC;AAAA,EACJ;AAAA,EAEO,QAAQ,MAAc;AACzB,SAAK,IAAI,cAAc;AAAA,EAC3B;AAAA,EAEO,QAAQ,MAAc;AACzB,SAAK,IAAI,YAAY;AAAA,EACzB;AAAA,EAIA,IAAW,QAAQ,SAAkB;AACjC,SAAK,WAAW;AAChB,SAAK,IAAI,MAAM,UAAU,UAAU,UAAU;AAAA,EACjD;AAAA,EAEA,IAAW,UAAU;AACjB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,IAAW,QAAQ,SAAiB;AAChC,SAAK,IAAI,MAAM,UAAU,QAAQ,SAAS;AAAA,EAC9C;AAAA,EAEO,KAAK,KAAU;AAClB,QAAI,KAAK,SAAS;AACd,WAAK,SAAS,QAAQ,WAAS;AAC3B,cAAM,KAAK,GAAG;AAAA,MAClB,CAAC;AAAA,IACL;AAAA,EACJ;AACJ;;;ACnIO,IAAM,QAAN,MAAY;AAAA,EASf,YAAoB,MAAY;AAAZ;AAPpB,SAAQ,SAIF,CAAC;AACP,SAAO,cAAsB;AAAA,EAEI;AAAA,EAE1B,IAAI,KAAa,MAAc,UAA6D;AAE/F,UAAM,OAAO,OAAO,KAAK;AACzB,UAAM,QAAQ,KAAK,OAAO,UAAU,WAAS,MAAM,OAAO,IAAI;AAC9D,QAAI,UAAU,IAAI;AACd,WAAK,OAAO,KAAK;AAAA,QACb;AAAA,QACA;AAAA,QACA;AAAA,MACJ,CAAC;AAAA,IACL,OAAO;AACH,WAAK,OAAO,OAAO,OAAO,GAAG;AAAA,QACzB;AAAA,QACA;AAAA,QACA;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,EACJ;AAAA,EAEO,OAAO,KAAa;AACvB,SAAK,SAAS,KAAK,OAAO,OAAO,WAAS,MAAM,QAAQ,GAAG;AAAA,EAC/D;AAAA,EAEQ,KAAK,OAAqC,QAA0B;AACxE,SAAK,SAAS,KAAK,OAAO,OAAO,OAAK,EAAE,QAAQ,MAAM,GAAG;AACzD,UAAM,SAAS,MAAM,OAAO,KAAK,aAAa,MAAM;AAAA,EACxD;AAAA,EAEO,KAAK,KAAuB;AAC/B,SAAK,cAAc,IAAI;AACvB,eAAW,SAAS,KAAK,QAAQ;AAC7B,UAAI,KAAK,eAAe,MAAM,MAAM;AAChC,aAAK,KAAK,OAAO,GAAG;AAAA,MACxB;AACA;AAAA,IACJ;AAAA,EACJ;AAGJ;;;AC9CO,IAAM,SAAN,MAAa;AAAA,EAuBhB,YAAY,MAAY;AAtBxB,SAAQ,WAAoB;AAC5B,SAAQ,UAAmB;AAC3B,SAAQ,aAAqB;AAC7B,SAAQ,iBAA0B,CAAC;AAEnC,SAAQ,UAAkB;AA0B1B,SAAQ,YAA8B,CAAC;AAYvC,SAAQ,SAAiB;AApBrB,aAAS,iBAAiB,oBAAoB,MAAM;AAChD,UAAI,KAAK,SAAS;AACd,aAAK,UAAU,CAAC,SAAS;AAAA,MAC7B;AAAA,IACJ,CAAC;AAED,SAAK,QAAQ,IAAI,MAAM,IAAI;AAAA,EAC/B;AAAA,EAvBA,IAAW,UAAmB;AAC1B,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAW,QAAQ,OAAgB;AAC/B,SAAK,WAAW;AAEhB,QAAI,OAAO;AACP,WAAK,QAAQ,YAAY,IAAI,IAAI,KAAK;AACtC,WAAK,KAAK,OAAO,sBAAsB,KAAK,MAAM,KAAK,IAAI,CAAC;AAAA,IAChE,OAAO;AACH,aAAO,qBAAqB,KAAK,EAAE;AACnC,WAAK,aAAa,YAAY,IAAI,IAAI,KAAK;AAAA,IAE/C;AAAA,EACJ;AAAA,EAYA,IAAW,YAAY;AACnB,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAY,QAAQ;AAChB,WAAO,YAAY,IAAI,IAAI,KAAK;AAAA,EACpC;AAAA,EAOQ,iBAAiB,OAAe,UAAiB;AACrD,UAAM,UAAU,KAAK,eAAe,MAAM,GAAE,KAAK,EAAE,OAAO,CAAC,YAAY,MAAM,aAAa,GAAG,CAAC,IAAI;AAClG,WAAO,KAAK,IAAI,WAAW,OAAO,IAAI,KAAG,WAAU;AAAA,EACvD;AAAA,EAEO,MAAM,WAAmB;AAE5B,QAAI,KAAK,SAAS;AACd,YAAM,WAAW,YAAY,KAAK;AAClC,WAAK,iBAAiB,KAAK,eAAe,MAAM,GAAE,EAAE;AACpD,WAAK,eAAe,KAAK,QAAQ;AACjC,aAAM,KAAK,eAAe,SAAO,IAAG;AAChC,aAAK,eAAe,KAAK,QAAQ;AAAA,MACrC;AAEA,WAAK,QAAQ;AACb,WAAK;AACL,WAAK,UAAU,KAAK,IAAI,KAAK,SAAS,MAAO,QAAQ;AACrD,WAAK,QAAQ,KAAK;AAClB,YAAM,IAAI;AAAA,QACN;AAAA,QACA,WAAW,KAAK,QAAQ,KAAK;AAAA,QAC7B,OAAO,KAAK;AAAA,QACZ,WAAW,MAAO;AAAA,QAClB,OAAO,KAAK;AAAA,QACZ,YAAY,KAAK,iBAAiB,GAAG,QAAQ;AAAA,QAC7C,aAAa,KAAK,iBAAiB,IAAI,QAAQ;AAAA,QAC/C,aAAa,KAAK,iBAAiB,IAAI,QAAQ;AAAA,QAC/C,SAAS,KAAK;AAAA,QACd,MAAM;AAAA,MACV;AACA,WAAK,SAAS;AAEd,WAAK,MAAM,KAAK,CAAC;AAEjB,WAAK,UAAU,QAAQ,CAAC,MAAM;AAC1B,UAAE,CAAC;AAAA,MACP,CAAC;AAED,WAAK,KAAK,OAAO,sBAAsB,KAAK,MAAM,KAAK,IAAI,CAAC;AAAA,IAChE;AAAA,EACJ;AAAA,EAEO,QAAQ;AACX,SAAK,UAAU;AACf,SAAK,WAAW;AAChB,SAAK,QAAQ,YAAY,IAAI;AAC7B,SAAK,QAAQ,YAAY,IAAI;AAC7B,SAAK,KAAK,OAAO,sBAAsB,KAAK,MAAM,KAAK,IAAI,CAAC;AAAA,EAChE;AAAA,EAEO,IAAI,UAA0B;AACjC,SAAK,UAAU,KAAK,QAAQ;AAAA,EAChC;AAAA,EAEO,OAAO;AACV,SAAK,UAAU;AAAA,EACnB;AACJ;;;ACzGO,IAAI,OAAO,IAAI,MAAM;AAAA,EAAN;AAGlB,SAAO,QAAgB;AAGvB,SAAO,SAAkB;AAAA;AAC7B;AAEO,IAAeC,QAAf,cAA4B,KAAK;AAAA,EAI7B,cAAc;AACjB,UAAM,EAAE,OAAO,EAAE,OAAO,QAAQ,QAAQ,OAAO,EAAE,CAAC;AAHtD,SAAU,UAAkC,CAAC;AAIzC,SAAK,OAAO;AACZ,SAAK,KAAK;AAAA,EACd;AAAA,EAGA,OAAO;AACH,SAAK,SAAS,IAAI,OAAO,IAAI;AAC7B,SAAK,OAAO,IAAI,KAAK,KAAK,KAAK,IAAI,CAAC;AACpC,SAAK,OAAO,MAAM;AAClB,SAAK,QAAQ,KAAK,OAAO;AAAA,EAC7B;AAAA,EAEA,UAAU,QAAwB;AAC9B,SAAK,QAAQ,OAAO,GAAG,IAAI;AAC3B,SAAK,OAAO,MAAM;AAClB,WAAO;AAAA,EACX;AAAA,EAEO,KAAK,KAAuB;AAC/B,WAAO,OAAO,KAAK,OAAO,EAAE,QAAQ,YAAU;AAC1C,aAAO,KAAK,GAAG;AAAA,IACnB,CAAC;AAAA,EACL;AAEJ;;;AClCO,IAAM,OAAN,cAAmB,KAAK;AAAA,EAEpB,YAAY,SAAsB;AACrC,UAAM,iCAAK,UAAL,EAAc,WAAW,CAAC,GAAI,QAAQ,aAAa,CAAC,GAAI,OAAO,EAAE,EAAC;AAExE,SAAK,SAAS;AAAA,MACV,eAAe,QAAQ;AAAA,MACvB,gBAAgB,QAAQ;AAAA,MACxB,YAAY,QAAQ;AAAA,MACpB,cAAc,QAAQ;AAAA,MACtB,UAAU,QAAQ;AAAA,MAClB,KAAK,GAAG,eAAQ,KAAG;AAAA,IACvB,CAAC;AACD,SAAK,SAAS,QAAQ,SAAS,CAAC,CAAC;AAAA,EACrC;AAAA,EAEA,IAAW,QAAQ,SAAkB;AACjC,SAAK,WAAW;AAChB,SAAK,IAAI,MAAM,UAAU,UAAU,SAAS;AAAA,EAChD;AAAA,EAEA,IAAW,UAAU;AACjB,WAAO,KAAK;AAAA,EAChB;AACJ;;;ACjCO,IAAM,SAAN,cAAqB,KAAK;AAAA,EACtB,YAA4B,KAAa;AAC5C,UAAM;AAAA,MACF,gBAAgB;AAAA,MAChB,YAAY;AAAA,MACZ,eAAe;AAAA,MACf,OAAO;AAAA,QACH,OAAO;AAAA,QACP,QAAQ;AAAA,QAAQ,iBAAiB;AAAA,QACjC,YAAY;AAAA,MAChB;AAAA,MAAG,WAAW,CAAC,QAAQ;AAAA,IAC3B,CAAC;AAV8B;AAAA,EAWnC;AACJ;;;ACeO,IAAM,OAAmB;AAAA;AAAA,EAE9B,QAAQ,CAAC,MAAM;AAAA;AAAA,EAGf,WAAW,CAAC,MAAM,KAAK,EAAE,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AAAA;AAAA,EAG1D,OAAO,CAAC,MAAM,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI;AAAA;AAAA,EAGvC,SAAS,CAAC,MAAM,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI,KAAK,IAAI;AAAA;AAAA,EAGnF,QAAQ,CAAC,MAAM,IAAI;AAAA;AAAA,EAGnB,SAAS,CAAC,MAAM,KAAK,IAAI;AAAA;AAAA,EAGzB,WAAW,CAAC,MAAM,IAAG,MAAK,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI,KAAK;AAAA;AAAA,EAGzD,SAAS,CAAC,MAAM,IAAI,IAAI;AAAA;AAAA,EAGxB,UAAU,CAAC,MAAO,EAAE,IAAK,IAAI,IAAI;AAAA;AAAA,EAGjC,YAAY,CAAC,MAAM,IAAG,MAAK,IAAI,IAAI,IAAI,KAAK,IAAI,MAAM,IAAI,IAAI,MAAM,IAAI,IAAI,KAAK;AAAA;AAAA,EAGjF,SAAS,CAAC,MAAM,IAAI,IAAI,IAAI;AAAA;AAAA,EAG5B,UAAU,CAAC,MAAM,IAAK,EAAE,IAAK,IAAI,IAAI;AAAA;AAAA,EAGrC,YAAY,CAAC,MAAM,IAAG,MAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAK,EAAE,IAAK,IAAI,IAAI;AAAA;AAAA,EAGvE,SAAS,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI;AAAA;AAAA,EAGhC,UAAU,CAAC,MAAM,IAAK,EAAE,IAAK,IAAI,IAAI,IAAI;AAAA;AAAA,EAGzC,YAAY,CAAC,MAAM,IAAI,MAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAM,EAAE,IAAK,IAAI,IAAI,IAAI;AAAA;AAAA,EAGlF,QAAQ,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,KAAK,KAAK,EAAE,IAAI;AAAA;AAAA,EAG9C,SAAS,CAAC,MAAM,KAAK,IAAI,KAAK,KAAK,KAAK,EAAE;AAAA;AAAA,EAG1C,WAAW,CAAC,MAAM,EAAE,KAAK,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK;AAAA;AAAA,EAGjD,QAAQ,CAAC,MAAM,KAAK,IAAI,GAAG,MAAM,IAAI,EAAE;AAAA;AAAA,EAGvC,SAAS,CAAC,MAAM,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,IAAI;AAAA;AAAA,EAGxC,WAAW,CAAC,MAAM;AAChB,SAAK;AACL,QAAI,IAAI;AAAG,aAAO,KAAK,IAAI,GAAG,MAAM,IAAI,EAAE,IAAI;AAC9C;AACA,YAAQ,CAAC,KAAK,IAAK,GAAG,MAAM,CAAC,IAAI,KAAK;AAAA,EACxC;AAAA;AAAA,EAGA,QAAQ,CAAC,MAAM,CAAC,KAAK,KAAK,IAAI,IAAI,CAAC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,EAMvC,SAAS,CAAC,MAAM,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,CAAC;AAAA;AAAA,EAG7C,WAAW,CAAC,MAAM;AAChB,SAAK;AACL,QAAI,IAAI;AAAG,aAAO,EAAE,KAAK,KAAK,IAAI,IAAI,CAAC,IAAI,KAAK;AAChD,SAAK;AACL,YAAQ,KAAK,KAAK,IAAI,IAAI,CAAC,IAAI,KAAK;AAAA,EACtC;AACF;;;ACnHO,IAAM,QAAN,MAAY;AAAA,EAGf,OAAO,MAAM,OAAuB,KAAqB,KAAwC;AAC7F,QAAI,OAAO,UAAU,YAAY,OAAO,QAAQ,YAAY,OAAO,QAAQ,UAAU;AACjF,aAAO,KAAK,IAAI,KAAK,KAAK,IAAI,OAAO,GAAG,CAAC;AAAA,IAC7C,WAAW,iBAAiB,WAAW,eAAe,WAAW,eAAe,SAAS;AACrF,aAAO,IAAI,QAAQ,KAAK,IAAI,IAAI,GAAG,KAAK,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;AAAA,IAC3G;AAAA,EACJ;AAAA,EAEA,OAAO,KAAK,GAAW,GAAW,GAAmB;AACjD,WAAO,KAAK,IAAI,KAAK;AAAA,EACzB;AAAA,EAEA,OAAO,WAAoB;AACvB,WAAO,KAAK;AAAA,EAChB;AACJ;;;ACjBO,IAAM,UAAN,cAAsB,KAAK;AAAA,EACvB,YAAY,MAAe,OAAqC,aAA+C,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG;AAChI,UAAM;AAAA,MACF,OAAO;AAAA,QACH,OAAO,KAAK,IAAI;AAAA,QAChB,QAAQ,KAAK,IAAI;AAAA;AAAA,QAGjB,YAAY;AAAA,QAEZ,UAAU;AAAA,QACV,cAAc;AAAA,QACd,YAAY,WAAW,CAAC,IAAI,aAAa,WAAW,CAAC;AAAA,QACrD,SAAS,WAAW,CAAC,IAAI,aAAa,WAAW,CAAC;AAAA,SAC/C;AAAA,MAEP,WAAW;AAAA,QACP;AAAA,MACJ;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EAEA,WAAW,YAA8C;AACrD,SAAK,IAAI,MAAM,aAAa,WAAW,CAAC,IAAI,aAAa,WAAW,CAAC;AACrE,SAAK,IAAI,MAAM,UAAU,WAAW,CAAC,IAAI,aAAa,WAAW,CAAC;AAAA,EACtE;AACJ;;;ACrBO,IAAM,WAAN,cAAuB,QAAQ;AAAA,EAS3B,YAAoB,QAAkB,YAAsD;AAC/F,UAAM,IAAI,QAAQ,KAAK,GAAG,GAAG;AAAA,MACzB,iBAAiB;AAAA,MACjB,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,gBAAgB;AAAA,MAChB,UAAU;AAAA,IACd,GAAG,UAAU;AAPU;AAyH3B,SAAO,QAAgB;AAEvB,SAAQ,QAA4B;AAKpC,SAAQ,aAAqB;AAU7B,SAAO,SAAiB;AAhIpB,SAAK,SAAS,KAAK,OAAO,IAAI,KAAK;AAAA,MAC/B,OAAO;AAAA,QACH,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,iBAAiB;AAAA,QACjB,WAAW;AAAA,QACX,cAAc;AAAA,QACd,UAAU;AAAA,QACV,QAAQ;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,QACP,UAAU,IAAI,QAAQ,GAAG,EAAE;AAAA,MAC/B;AAAA,MACA,cAAc,MAAM;AAChB,aAAK,OAAO,UAAU;AAAA,MAC1B;AAAA,MACA,aAAa,CAAC,MAAM;AAChB,aAAK,OAAO,UAAU,YAAY,IAAI,QAAQ,EAAE,SAAS,EAAE,OAAO,CAAC;AACnE,aAAK,OAAO,OAAO,WAAW,CAAC,KAAK,CAAC;AAAA,MACzC;AAAA,MACA,cAAc,MAAM;AAChB,aAAK,OAAO,OAAO,WAAW,CAAC,KAAK,IAAI;AACxC,aAAK,OAAO,UAAU;AAAA,MAC1B;AAAA,IACJ,CAAC,CAAC;AAEF,SAAK,cAAc,KAAK,OAAO,OAAO,IAAI,KAAK;AAAA,MAC3C,eAAe;AAAA,MACf,YAAY;AAAA,MACZ,gBAAgB;AAAA,MAChB,OAAO;AAAA,QACH,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,OAAO;AAAA,QACP,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,cAAc;AAAA,QACd,eAAe;AAAA,QACf,QAAQ;AAAA,QACR,eAAe;AAAA,QACf,WAAW;AAAA,QACX,WAAW;AAAA,MACf;AAAA,IACJ,CAAC,CAAC;AACF,SAAK,eAAe,KAAK,OAAO,OAAO,IAAI,KAAK;AAAA,MAC5C,eAAe;AAAA,MACf,MAAM;AAAA,MACN,YAAY;AAAA,MACZ,gBAAgB;AAAA,MAChB,OAAO;AAAA,QACH,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,OAAO;AAAA,QACP,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,cAAc;AAAA,QACd,eAAe;AAAA,QACf,QAAQ;AAAA,QACR,eAAe;AAAA,QACf,WAAW;AAAA,MACf;AAAA,IACJ,CAAC,CAAC;AAEF,SAAK,SAAS,KAAK,OAAO,OAAO,IAAI,KAAK;AAAA,MACtC,OAAO;AAAA,QACH,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,iBAAiB;AAAA,QACjB,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,eAAe;AAAA,MACnB;AAAA,MACA,WAAW;AAAA,QACP,UAAU,IAAI,QAAQ,IAAI,EAAE;AAAA,QAC5B,OAAO,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC3B,UAAU;AAAA,MACd;AAAA,IACJ,CAAC,CAAC;AACF,SAAK,OAAO,OAAO,IAAI,KAAK;AAAA,MACxB,OAAO;AAAA,QACH,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,iBAAiB;AAAA;AAAA,QAEjB,UAAU;AAAA,MACd;AAAA,MACA,WAAW;AAAA,QACP,UAAU,IAAI,QAAQ,KAAK,GAAG;AAAA,MAClC;AAAA,IACJ,CAAC,CAAC;AAEF,SAAK,WAAW,KAAK,OAAO,OAAO,IAAI,KAAK;AAAA,MACxC,OAAO;AAAA,QACH,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,iBAAiB;AAAA,QACjB,QAAQ;AAAA,QACR,eAAe;AAAA,MACnB;AAAA,IACJ,CAAC,CAAC;AAEF,SAAK,OAAO,UAAU;AACtB,SAAK,QAAQ,KAAK;AAClB,SAAK,MAAM,EAAE;AACb,SAAK,YAAY;AAAA,EACrB;AAAA,EA1HA,IAAI,SAAS;AACT,WAAO,KAAK,OAAO,OAAO;AAAA,EAC9B;AAAA,EA6HO,QAAQ,MAAc;AACzB,SAAK,QAAQ;AAAA,EACjB;AAAA,EAGA,IAAW,UAAU,OAAe;AAChC,SAAK,aAAa,QAAQ,MAAM,SAAS,EAAE,SAAS,GAAG,GAAG,IAAE,MAAI,KAAK,OAAO,SAAS,EAAE,SAAS,GAAG,GAAG,CAAC;AACvG,SAAK,aAAa;AAAA,EACtB;AAAA,EAEA,IAAW,YAAY;AACnB,WAAO,KAAK;AAAA,EAChB;AAAA,EAMO,MAAM,MAAc;AAhK/B;AAiKQ,QAAI,CAAC,KAAK;AAAO;AACjB,QAAI,KAAK,SAAS,KAAK,MAAM;AAAQ;AACrC,SAAK,QAAQ;AAEb,SAAK,YAAY,QAAQ,KACpB,WAAW,KAAK,GAAG,EACnB,WAAW,KAAK,GAAG,EACnB,WAAW,KAAK,GAAG,EACnB,WAAW,KAAK,GAAG,EACnB,WAAW,KAAK,GAAG,EACnB,WAAW,KAAK,GAAG,EACnB,SAAO,UAAK,UAAL,mBAAY,WAAU,GAAG,GAAG,CAAC;AAEzC,QAAI,KAAK,MAAM,QAAQ,GAAG,MAAM,IAAI;AAChC,UAAI,KAAK,MAAM,UAAU,GAAG,KAAK,MAAM,MAAM,MAAM,KAAK,OAAO;AAC3D,aAAK,OAAO,SAAS;AAAA,UACjB,iBAAiB;AAAA,QACrB,CAAC;AAED,aAAK,QAAQ,MAAS;AACtB,aAAK;AAEL,mBAAW,MAAM;AACb,gBAAM,OAAO,MAAM,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,KAAK,MAAM,KAAK,OAAO,IAAI,CAAC,EAAE,SAAS,CAAC,EAAE,KAAK,EAAE;AAC9F,eAAK,QAAQ,IAAI;AACjB,eAAK,MAAM,OAAO;AAAA,QACtB,GAAG,GAAI;AAAA,MACX,OAAO;AACH,aAAK,OAAO,SAAS;AAAA,UACjB,iBAAiB;AAAA,QACrB,CAAC;AACD,mBAAW,MAAM;AAEb,cAAI,KAAK;AACT,mBAAS,IAAI,GAAG,IAAI,KAAK,MAAM,QAAQ,KAAK;AACxC,gBAAI,KAAK,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC,GAAG;AACjC,oBAAM,KAAK,MAAM,CAAC;AAAA,YACtB,OAAO;AACH,oBAAM;AAAA,YACV;AAAA,UACJ;AAEA,eAAK,MAAM,EAAE;AAAA,QACjB,GAAG,GAAG;AAAA,MACV;AAAA,IACJ,OAAO;AACH,WAAK,OAAO,SAAS;AAAA,QACjB,iBAAiB;AAAA,MACrB,CAAC;AAAA,IACL;AAAA,EACJ;AAAA,EAEO,MAAM,MAAc;AACvB,UAAM,QAAQ,KAAK,MAAM,QAAQ,GAAG;AACpC,QAAI,UAAU;AAAI;AAClB,SAAK,MAAM,KAAK,MAAM,UAAU,GAAG,KAAK,IAAI,OAAO,KAAK,MAAM,UAAU,QAAQ,CAAC,CAAC;AAAA,EACtF;AAAA,EAEA,KAAK,KAAuB;AACxB,UAAM,KAAK,GAAG;AACd,SAAK,SAAS,UAAU,YAAY,IAAI,QAAQ,GAAI,IAAI,QAAQ,MAAQ,MAAO,MAAM,GAAG,CAAC;AAEzF,QAAI,KAAK,KAAK,OAAO,OAAO,QAAM,OAAK;AAEvC,QAAI,IAAI,MAAM;AACV,WAAK,SAAS;AAAA,QACV,QAAQ,QAAQ,YAAK,WAAW,KAAK,IAAI,IAAI,QAAM,OAAS,GAAG,IAAE,KAAK,IAAI,IAAI,QAAM,OAAQ,GAAG,IAAE,CAAC,IAAE,GAAC;AAAA,MACzG,CAAC;AAAA,IACL,OAAO;AACH,WAAK,SAAS;AAAA,QACV,QAAQ;AAAA,MACZ,CAAC;AAAA,IACL;AAAA,EACJ;AAAA,EAEA,WAAW,YAA8C;AACrD,UAAM,WAAW,UAAU;AAE3B,QAAI,MAAM,SAAS,GAAG;AAClB,WAAK,IAAI,MAAM,QAAQ;AACvB,WAAK,IAAI,MAAM,SAAS;AAAA,IAC5B,OAAO;AACH,WAAK,IAAI,MAAM,QAAQ;AACvB,WAAK,IAAI,MAAM,SAAS;AAAA,IAC5B;AAAA,EAEJ;AACJ;;;ACtPO,IAAM,SAAN,cAAqB,KAAK;AAAA,EACtB,YAAY,SAAsB;AACrC,UAAM,iCAAK,UAAL,EAAc,WAAW,CAAC,GAAI,QAAQ,aAAa,CAAC,GAAI,SAAS,EAAE,EAAC;AAE1E,SAAK,QAAQ,KAAK,QAAQ,IAAI;AAAA,EAClC;AACJ;;;ACHO,SAAS,eAAe,UAAmB,UAAkB,aAAmD,WAAuB;AAC1I,QAAM,OAAO,IAAI,KAAK;AAAA,IAClB,OAAO;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,iBAAiB;AAAA,MACjB,cAAc;AAAA,MACd,WAAW;AAAA,MACX,QAAQ;AAAA,IACZ;AAAA,IACA,WAAW;AAAA,MACP;AAAA,MACA;AAAA,MACA,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,IAChC;AAAA,EACJ,CAAC;AAED,QAAM,UAAoB,CAAC;AAC3B,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,QAAI;AACJ,UAAM,IAAI,IAAI,OAAO;AAAA,MACjB,OAAO;AAAA,QACH,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,iBAAiB;AAAA,QACjB,cAAc;AAAA,QACd,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,YAAY;AAAA,QACZ,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,gBAAgB;AAAA,QAChB,UAAU;AAAA,QACV,YAAY;AAAA,QACZ,OAAO;AAAA,QACP,YAAY;AAAA,MAEhB;AAAA,MACA,MAAM,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG,EAAE,CAAC;AAAA,MACtC,aAAa,MAAM;AACf,UAAE,IAAI,MAAM,YAAY;AACxB,oBAAY,CAA0B;AAAA,MAC1C;AAAA,MACA,WAAW,MAAM;AACb,UAAE,IAAI,MAAM,YAAY;AACxB,kBAAU;AAAA,MACd;AAAA,MACA,cAAc,MAAM;AAChB,UAAE,IAAI,MAAM,YAAY;AACxB,kBAAU;AAAA,MACd;AAAA,MACA,WAAW;AAAA,QACP,UAAU,IAAI;AAAA,UACV,KAAM,IAAI,KAAM,KAAK;AAAA,UACrB,KAAK,KAAK,MAAM,IAAI,CAAC,IAAI;AAAA,QAC7B;AAAA,QACA,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,MAChC;AAAA,IACJ,CAAC;AACD,SAAK,OAAO,QAAQ,CAAC,IAAI,CAAC;AAAA,EAC9B;AAIA,SAAO;AACX;;;AC9DO,IAAM,WAAN,cAAuB,QAAQ;AAAA,EAQ3B,YAAoB,QAAkB,YAAsD;AAC/F,UAAM,IAAI,QAAQ,KAAK,GAAG,GAAG;AAAA,MACzB,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,gBAAgB;AAAA,MAChB,UAAU;AAAA,IACd,GAAG,UAAU;AANU;AASvB,SAAK,OAAO,eAAe,IAAI,QAAQ,GAAG,CAAC,GAAG,GAAG,CAAC,QAAQ;AACtD,WAAK,SAAS,MAAM,IAAI,SAAS,CAAC;AAClC,UAAI,QAAQ,KAAK,QAAQ,GAAG;AACxB,aAAK,OAAO,OAAO,WAAW,CAAC,KAAK,IAAI;AAAA,MAC5C,WAAW,QAAQ,KAAK,QAAQ,GAAG;AAC/B,aAAK,OAAO,OAAO,WAAW,CAAC,GAAG,IAAI;AAAA,MAC1C,WAAW,QAAQ,KAAK,QAAQ,GAAG;AAC/B,aAAK,OAAO,OAAO,WAAW,CAAC,KAAK,IAAI;AAAA,MAC5C;AAAA,IACJ,GAAG,MAAM;AACL,WAAK,OAAO,OAAO,WAAW,CAAC,KAAK,IAAI;AAAA,IAC5C,CAAC,CAAC;AAAA,EACN;AAAA,EA3BA,IAAI,SAAS;AACT,WAAO,KAAK,OAAO,OAAO;AAAA,EAC9B;AAAA,EACA,IAAI,WAAW;AACX,WAAO,KAAK,OAAO;AAAA,EACvB;AAAA,EAwBA,KAAK,KAAuB;AACxB,UAAM,KAAK,GAAG;AAEd,QAAI,KAAK,KAAK,OAAO,OAAO,QAAM,OAAK;AACvC,QAAI,IAAI,MAAM;AACV,WAAK,SAAS;AAAA,QACV,QAAQ,QAAQ,YAAK,WAAW,KAAK,IAAI,IAAI,QAAQ,OAAS,GAAG,IAAI,KAAK,IAAI,IAAI,QAAQ,OAAQ,GAAG,IAAI,CAAC,IAAI,GAAC;AAAA,MACnH,CAAC;AAAA,IACL,OAAO;AACH,WAAK,SAAS;AAAA,QACV,QAAQ;AAAA,MACZ,CAAC;AAAA,IACL;AAAA,EACJ;AAAA,EAEA,WAAW,YAA8C;AACrD,UAAM,WAAW,UAAU;AAE3B,QAAI,MAAM,SAAS,GAAG;AAClB,WAAK,IAAI,MAAM,QAAQ;AACvB,WAAK,IAAI,MAAM,SAAS;AAAA,IAC5B,OAAO;AACH,WAAK,IAAI,MAAM,QAAQ;AACvB,WAAK,IAAI,MAAM,SAAS;AAAA,IAC5B;AAAA,EAEJ;AACJ;;;AClDO,IAAM,OAAN,cAAmB,KAAK;AAAA,EAEpB,YAAY,SAAsB;AApB7C;AAqBQ,UAAM;AAAA,MACF,WAAW,QAAQ;AAAA,IACvB,CAAC;AACD,SAAK,WAAW;AAChB,QAAI,SAAS;AACb,QAAI,UAAU,SAAS;AACnB,gBAAU,KAAK,KAAK,QAAQ,KAAK,IAAI,QAAQ,SAAS,CAAC;AACvD,gBAAU,KAAK,KAAK,QAAQ,KAAK,IAAI,QAAQ,SAAS,CAAC;AACvD,UAAI,QAAQ,MAAM;AACd,gBAAQ,QAAQ,MAAM,WAAW;AAAA,MACrC;AAAA,IACJ,OAAO;AACH,iBAAU,aAAQ,YAAR,YAAmB;AAC7B,iBAAU,aAAQ,YAAR,YAAmB;AAAA,IACjC;AAEA,YAAQ,aAAY,aAAQ,cAAR,YAAqB,IAAI,QAAQ,GAAG,CAAC;AACzD,YAAQ,aAAY,aAAQ,cAAR,YAAqB,IAAI,QAAQ,GAAG,CAAC;AAEzD,aAAS,IAAI,GAAG,IAAI,SAAS,KAAK;AAC9B,eAAS,IAAI,GAAG,IAAI,SAAS,KAAK;AAC9B,cAAM,IAAI,IAAI;AAAA,UACV,IAAI,QAAQ,SAAS,KAAK,IAAI,MAAM,IAAI,QAAQ,UAAU,IAAI,MAAM,IAAI,MAAM,IAAI,QAAQ,UAAU,IAAI;AAAA,UACxG,IAAI,QAAQ,SAAS,KAAK,IAAI,MAAM,IAAI,QAAQ,UAAU,IAAI,MAAM,IAAI,MAAM,IAAI,QAAQ,UAAU,IAAI;AAAA,QAC5G;AACA,aAAK,OAAO,IAAI,KAAK,kCACd,QAAQ,UAAY;AAAA,UACnB,WAAW,kCACJ,aAAQ,QAAQ,cAAhB,YAA6B,CAAC,IAD1B;AAAA,YAEP,WAAU,yBAAQ,QAAQ,cAAhB,mBAA2B,aAA3B,mBAAqC;AAAA,cAC3C;AAAA,kBADM,YAEL;AAAA,UACT;AAAA,QACJ,EACH,CAAC;AAAA,MACN;AAAA,IACJ;AAAA,EAEJ;AACJ;;;ACxDO,SAAS,SAAS,UAAmB,WAAmB,GAAG,SAAkB,OAAO;AACvF,SAAO,IAAI,KAAK;AAAA,IACZ,OAAO;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,iBAAiB;AAAA,MACjB,QAAQ;AAAA,MACR,cAAc,SAAS,cAAc;AAAA,IACzC;AAAA,IACA,WAAW;AAAA,MACP;AAAA,MACA;AAAA,MACA,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,MAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,IAC5B;AAAA,EACJ,CAAC;AACL;;;AChBO,SAAS,SAAS,UAAmB,WAAmB,GAAG,SAAiB,IAAI,QAAgB,IAAI;AACvG,QAAM,QAAQ,IAAI,KAAK;AAAA,IACnB,OAAO;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,iBAAiB;AAAA,MACjB,cAAc;AAAA,MACd,WAAW;AAAA,IACf;AAAA,IACA,WAAW;AAAA,MACP;AAAA,MACA;AAAA,MACA,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,MAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,IAC5B;AAAA,EACJ,CAAC;AAED,WAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC7B,UAAM,OAAO,QAAQ,IAAI,QAAQ,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC;AACnD,UAAM,IAAI,QAAQ,IAAI,QAAQ,IAAI,CAAC,GAAG,IAAI,KAAK;AAC/C,MAAE,UAAU,SAAS,IAAI,QAAQ,EAAE,UAAU,MAAM,IAAI,MAAM,EAAE,UAAU,MAAM,IAAI,GAAG,CAAC;AACvF,UAAM,OAAO,CAAC;AAAA,EAClB;AAEA,SAAO;AACX;AAEO,SAAS,QAAQ,UAAmB,WAAmB,GAAG;AAC7D,QAAM,OAAO,IAAI,KAAK;AAAA,IAClB,OAAO;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,QAAQ;AAAA,IAEZ;AAAA,IACA,WAAW;AAAA,MACP;AAAA,MACA;AAAA,MACA,OAAO,IAAI,QAAQ,MAAM,KAAK,OAAO,IAAI,KAAK,OAAO,KAAK,OAAO,IAAI,GAAG;AAAA,MACxE,QAAQ,IAAI,QAAQ,GAAG,GAAG;AAAA,MAC1B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,IAC5B;AAAA,EACJ,CAAC;AACD,OAAK,OAAO,IAAI,KAAK;AAAA,IACjB,OAAO;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,cAAc;AAAA,MACd,iBAAiB;AAAA,MACjB,WAAW;AAAA,IACf;AAAA,IACA,WAAW;AAAA,MACP,UAAU;AAAA,MACV,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,MAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,IAC5B;AAAA,EACJ,CAAC,CAAC;AAEF,SAAO;AACX;AAGO,SAAS,iBAAiB,UAAmB,WAAmB,GAAG,SAAiB,IAAI,QAAgB,IAAI;AAC/G,QAAM,QAAQ,IAAI,KAAK;AAAA,IACnB,OAAO;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,iBAAiB;AAAA,MACjB,cAAc;AAAA,MACd,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,WAAW;AAAA,IACf;AAAA,IACA,WAAW;AAAA,MACP;AAAA,MACA;AAAA,MACA,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,MAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,IAC5B;AAAA,EACJ,CAAC;AAED,QAAM,OAAO,IAAI,KAAK;AAAA,IAClB,OAAO;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,iBAAiB;AAAA,MACjB,cAAc;AAAA,MACd,WAAW;AAAA,IACf;AAAA,IACA,WAAW;AAAA,MACP,UAAU,IAAI,QAAQ,GAAG,CAAC;AAAA,MAC1B,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,MAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,IAC5B;AAAA,EACJ,CAAC,CAAC;AAEF,QAAM,OAAO,UAAU,IAAI,QAAQ,IAAI,EAAE,GAAG,EAAE,CAAC;AAC/C,QAAM,OAAO,UAAU,IAAI,QAAQ,IAAI,EAAE,GAAG,GAAG,CAAC;AAChD,QAAM,OAAO,UAAU,IAAI,QAAQ,IAAI,EAAE,GAAG,GAAG,CAAC;AAChD,QAAM,OAAO,UAAU,IAAI,QAAQ,IAAI,EAAE,GAAG,CAAC,CAAC;AAC9C,QAAM,OAAO,UAAU,IAAI,QAAQ,IAAI,EAAE,GAAG,GAAG,CAAC;AAEhD,SAAO;AACX;AAEO,SAAS,UAAU,UAAmB,UAAkB;AAC3D,QAAM,OAAO,IAAI,KAAK;AAAA,IAClB,OAAO;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,iBAAiB;AAAA,MACjB,cAAc;AAAA,MACd,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,WAAW;AAAA,IAEf;AAAA,IACA,WAAW;AAAA,MACP;AAAA,MACA;AAAA,MACA,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,MAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,IAC5B;AAAA,EACJ,CAAC;AAED,OAAK,OAAO,IAAI,KAAK;AAAA,IACjB,OAAO;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,iBAAiB;AAAA,MACjB,cAAc;AAAA,MACd,WAAW;AAAA,MACX,QAAQ;AAAA,IAEZ;AAAA,IACA,WAAW;AAAA,MACP,UAAU,IAAI,QAAQ,GAAG,EAAE;AAAA,MAC3B,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,MAC5B,MAAM,IAAI,QAAQ,IAAI,CAAC;AAAA,IAC3B;AAAA,EACJ,CAAC,CAAC;AAEF,SAAO;AACX;AAEO,SAAS,SAAS,UAAmB,UAAkB;AAC1D,QAAM,OAAO,IAAI,KAAK;AAAA,IAClB,OAAO;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,iBAAiB;AAAA,MACjB,cAAc;AAAA,MACd,QAAQ;AAAA,IACZ;AAAA,IACA,WAAW;AAAA,MACP;AAAA,MACA;AAAA,MACA,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,MAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,IAC5B;AAAA,EACJ,CAAC;AAED,OAAK,OAAO,IAAI,KAAK;AAAA,IACjB,OAAO;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,iBAAiB;AAAA,MACjB,cAAc;AAAA,MACd,QAAQ;AAAA,IACZ;AAAA,IACA,WAAW;AAAA,MACP,UAAU,IAAI,QAAQ,GAAG,CAAC;AAAA,MAC1B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,IAC5B;AAAA,EACJ,CAAC,CAAC;AAEF,SAAO;AACX;AAGO,SAAS,YAAY,UAAmB,UAAkB;AAC7D,QAAM,OAAO,IAAI,KAAK;AAAA,IAClB,OAAO;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,iBAAiB;AAAA,MACjB,cAAc;AAAA,MACd,WAAW;AAAA,MACX,QAAQ;AAAA,IACZ;AAAA,IACA,WAAW;AAAA,MACP;AAAA,MACA;AAAA,MACA,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,MAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,IAC5B;AAAA,EACJ,CAAC;AAyBD,OAAK,OAAO,IAAI,KAAK;AAAA,IACjB,OAAO;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,iBAAiB;AAAA,MACjB,cAAc;AAAA,MACd,WAAW;AAAA,IACf;AAAA,IACA,WAAW;AAAA,MACP,UAAU,IAAI,QAAQ,IAAI,CAAC;AAAA,MAC3B,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,MAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,IAC5B;AAAA,EACJ,CAAC,CAAC;AAIF,SAAO;AACX;AAGO,SAAS,UAAU,UAAmB,UAAkB;AAC3D,QAAM,OAAO,IAAI,KAAK;AAAA,IAClB,OAAO;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,QAAQ;AAAA,IAEZ;AAAA,IACA,WAAW;AAAA,MACP;AAAA,MACA;AAAA,MACA,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,MAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,IAC5B;AAAA,EACJ,CAAC;AAED,OAAK,OAAO,IAAI,KAAK;AAAA,IACjB,OAAO;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,iBAAiB;AAAA,MACjB,cAAc;AAAA,IAElB;AAAA,IACA,WAAW;AAAA,MACP,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,MAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,MACxB,UAAU;AAAA,MACV,UAAU,IAAI,QAAQ,GAAG,EAAE;AAAA,IAC/B;AAAA,EACJ,CAAC,CAAC;AACF,OAAK,OAAO,IAAI,KAAK;AAAA,IACjB,OAAO;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,iBAAiB;AAAA,MACjB,cAAc;AAAA,IAElB;AAAA,IACA,WAAW;AAAA,MACP,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,MAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,MACxB,UAAU;AAAA,MACV,UAAU,IAAI,QAAQ,IAAI,EAAE;AAAA,IAChC;AAAA,EACJ,CAAC,CAAC;AACF,OAAK,OAAO,IAAI,KAAK;AAAA,IACjB,OAAO;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,iBAAiB;AAAA,MACjB,cAAc;AAAA,IAElB;AAAA,IACA,WAAW;AAAA,MACP,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,MAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,MACxB,UAAU,IAAI,QAAQ,IAAI,CAAC;AAAA,IAC/B;AAAA,EACJ,CAAC,CAAC;AACF,OAAK,OAAO,IAAI,KAAK;AAAA,IACjB,OAAO;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,iBAAiB;AAAA,MACjB,cAAc;AAAA,IAClB;AAAA,IACA,WAAW;AAAA,MACP,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,IAC5B;AAAA,EACJ,CAAC,CAAC;AAEF,SAAO;AACX;;;AC1TO,SAAS,QAAQ,UAAmB,UAAkB,UAAiB,GAAG,QAAsC,CAAC,GAAG;AACvH,QAAM,OAAO,IAAI,KAAK;AAAA,IAClB,OAAO;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,iBAAiB;AAAA,MACjB,QAAQ;AAAA,MACR,cAAc;AAAA,OACX;AAAA,IAEP,WAAW;AAAA,MACP;AAAA,MACA;AAAA,MACA,MAAM,IAAI,QAAQ,KAAK,GAAG;AAAA,MAC1B,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,IAChC;AAAA,EACJ,CAAC;AAED,MAAI,YAAY,GAAG;AAEf,SAAK,OAAO,UAAU,IAAI,QAAQ,IAAI,EAAE,GAAG,EAAE,CAAC;AAC9C,SAAK,OAAO,UAAU,IAAI,QAAQ,KAAK,EAAE,GAAG,CAAC,CAAC;AAAA,EAClD,OAAO;AACH,SAAK,OAAO,UAAU,IAAI,QAAQ,KAAK,EAAE,GAAG,CAAC,CAAC;AAAA,EAElD;AACA,OAAK,OAAO,YAAY,IAAI,QAAQ,KAAK,EAAE,GAAG,CAAC,CAAC;AAEhD,MAAI,KAAK,OAAO,IAAI;AAAK,SAAK,OAAO,SAAS,IAAI,QAAQ,IAAI,EAAE,GAAG,GAAG,KAAK,OAAO,IAAI,GAAG,CAAC;AAC1F,MAAI,KAAK,OAAO,IAAI;AAAK,SAAK,OAAO,SAAS,IAAI,QAAQ,IAAI,EAAE,GAAG,IAAI,KAAK,OAAO,IAAI,GAAG,CAAC;AAC3F,MAAI,KAAK,OAAO,IAAI;AAAK,SAAK,OAAO,SAAS,IAAI,QAAQ,KAAK,EAAE,GAAG,IAAI,KAAK,OAAO,IAAI,GAAG,CAAC;AAC5F,MAAI,KAAK,OAAO,IAAI;AAAK,SAAK,OAAO,SAAS,IAAI,QAAQ,KAAK,EAAE,GAAG,GAAG,KAAK,OAAO,IAAI,GAAG,CAAC;AAC3F,OAAK,OAAO,SAAS,IAAI,QAAQ,KAAK,EAAE,GAAG,CAAC,CAAC;AAE7C,SAAO;AACX;AAGO,IAAM,QAAN,cAAoB,KAAK;AAAA,EAE5B,YAAY,UAAkB;AAC1B,QAAI,KAAK,KAAK,UAAU,aAAa,UAAU;AAAA,IAE/C;AAAA,EACJ;AAAA,EAEA,YAAY,UAAmB;AAC3B,SAAK,UAAU,YAAY,QAAQ;AAAA,EACvC;AAAA,EAEA,cAAc;AACV,WAAO,KAAK,KAAK,UAAU;AAAA,EAC/B;AAAA,EAEA,YAAY,UAAmB,UAAkB,QAAsC,CAAC,GAAG;AACvF,UAAM;AAAA,MACF,OAAO;AAAA,QACH,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,YAAY;AAAA,SACT;AAAA,MAEP,WAAW;AAAA,QACP;AAAA,QACA;AAAA,QACA,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,MAC5B;AAAA,IACJ,CAAC;AAGD,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAExB,WAAK,OAAO,IAAI,KAAK;AAAA,QACjB,OAAO;AAAA,UACH,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,iBAAiB;AAAA,UACjB,QAAQ;AAAA,UACR,cAAc;AAAA,QAClB;AAAA,QACA,WAAW;AAAA,UACP,UAAU,IAAI,QAAQ,IAAI,EAAE;AAAA,UAC5B,UAAU,WAAW,KAAK,KAAK,MAAM;AAAA,UACrC,QAAQ,IAAI,QAAQ,GAAG,GAAG;AAAA,UAC1B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,QAC5B;AAAA,MACJ,CAAC,CAAC;AAAA,IACN;AACA,SAAK,OAAO,KAAK,OAAO,IAAI,KAAK;AAAA,MAC7B,OAAO;AAAA,QACH,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,iBAAiB;AAAA,QACjB,QAAQ;AAAA,QACR,cAAc;AAAA,QACd,YAAY;AAAA,MAChB;AAAA,MACA,WAAW;AAAA,QACP,UAAU,IAAI,QAAQ,GAAG,CAAC;AAAA,QAC1B,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,MAC5B;AAAA,IACJ,CAAC,CAAC;AAEF,SAAK,KAAK,OAAO,IAAI,KAAK;AAAA,MACtB,OAAO;AAAA,QACH,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,iBAAiB;AAAA,QACjB,cAAc;AAAA,QACd,WAAW;AAAA,MACf;AAAA,MACA,WAAW;AAAA,QACP,UAAU,IAAI,QAAQ,IAAI,CAAC;AAAA,QAC3B,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,MAC5B;AAAA,IACJ,CAAC,CAAC;AAAA,EACN;AACJ;;;ACzHO,IAAM,WAAN,MAAe;AAAA,EAMX,YAAoB,OAAuB,KAAqB,OAI1D,UAAmG,QAAgB,GAAG;AAJxG;AAAuB;AAAqB;AAI1D;AARb,SAAQ,QAA+B;AACvC,SAAQ,QAAgB;AACxB,SAAQ,YAA2B;AAO/B,SAAK,QAAQ;AAAA,EACjB;AAAA,EAEO,KAAK,KAAuB;AAC/B,UAAM,QAAQ,KAAK,MAAM,KAAK,KAAK;AAEnC,QAAI,KAAK,UAAU,WAAW;AAC1B,WAAK,KAAK,OAAO,GAAG;AAAA,IACxB;AAEA,QAAI,KAAK,UAAU,WAAW;AAC1B,WAAK,KAAK,KAAK;AAAA,IACnB;AAAA,EACJ;AAAA,EAEQ,KAAK,OAAkC;AAE3C,QAAI,KAAK,WAAW;AAChB,UAAI,KAAK,UAAU,GAAG;AAClB,aAAK,YAAY;AACjB,aAAK,KAAK;AAAA,MACd;AAAA,IACJ,OAAO;AACH,WAAK,SAAS,GAAG,IAAI,QAAQ,GAAG,CAAC,GAAG,WAAW,KAAK,KAAK;AAAA,IAC7D;AAAA,EACJ;AAAA,EAGQ,KAAK,OAAkC,KAAuB;AAClE,UAAM,WAAW,MAAM,GAAG,IAAI,KAAK,MAAM,UAAU,QAAQ,EAAE,UAAU,EAAE,MAAM,MAAM,KAAK;AAG1F,SAAK,MAAM,KAAK,KAAK,UAAU,MAAM,KAAK;AAE1C,SAAK,SAAS,MAAM,OAAO,UAAU,WAAW,KAAK,KAAK;AAG1D,QAAI,KAAK,MAAM,UAAU,SAAS,SAAS,MAAM,EAAE,IAAI,GAAG;AACtD,WAAK,QAAQ;AAEb,UAAI,OAAO,MAAM,cAAc,YAAY;AACvC,YAAI,MAAM,UAAU,GAAG;AACnB,eAAK,KAAK;AAAA,QACd,OAAO;AACH,eAAK,YAAY,MAAM;AAAA,QAC3B;AAAA,MACJ,OAAO;AACH,YAAI,MAAM,YAAY,GAAG;AACrB,eAAK,KAAK;AAAA,QACd,OAAO;AACH,eAAK,MAAM,IAAI,GAAG,YAAK,KAAG,UAAS,MAAM,WAAW,MAAM;AACtD,iBAAK,KAAK;AAAA,UACd,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,IACJ;AAAA,EAGJ;AAAA,EAEQ,OAAO;AACX,SAAK;AACL,QAAI,KAAK,SAAS,KAAK,MAAM,QAAQ;AACjC,WAAK,QAAQ;AAAA,IACjB;AACA,SAAK,QAAQ;AAAA,EACjB;AACJ;;;AC7EO,IAAM,SAAN,cAAqB,KAAK;AAAA,EAKtB,YAAY,OAAiC,QAAQ;AACxD,UAAM;AAAA,MACF,OAAO;AAAA,QACH,OAAO;AAAA,QACP,QAAQ;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,QACP,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,QACxB,UAAU,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC9B,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,MAChC;AAAA,IACJ,CAAC;AAbL,gBAAe,CAAC;AAChB,gBAAe,CAAC;AAgHhB,SAAQ,YAAoB;AAY5B,SAAQ,eAAiC,CAAC,GAAG,CAAC;AAe9C,SAAQ,YAA8B,CAAC,GAAG,CAAC;AA7HvC,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,YAAM,MAAM,KAAK,OAAO,IAAI,KAAK;AAAA,QAC7B,OAAO;AAAA,UACH,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,iBAAiB;AAAA,UACjB,cAAc;AAAA,QAClB;AAAA,QACA,WAAW;AAAA,UACP,UAAU,IAAI,QAAQ,IAAI,KAAK,IAAI,GAAG;AAAA,UACtC,QAAQ,IAAI,QAAQ,KAAK,CAAC;AAAA,UAC1B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,QAC5B;AAAA,MACJ,CAAC,CAAC;AACF,WAAK,KAAK,KAAK,GAAG;AAAA,IACtB;AAEA,SAAK,QAAQ,KAAK,OAAO,IAAI,KAAK;AAAA,MAC9B,OAAO;AAAA,QACH,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,iBAAiB;AAAA,QACjB,cAAc;AAAA,QACd,QAAQ;AAAA,MAEZ;AAAA,MACA,WAAW;AAAA,QACP,UAAU,IAAI,QAAQ,GAAG,CAAC;AAAA,QAC1B,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,MAC5B;AAAA,IACJ,CAAC,CAAC;AAEF,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,YAAM,MAAM,KAAK,MAAM,OAAO,IAAI,KAAK;AAAA,QACnC,OAAO;AAAA,UACH,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,iBAAiB;AAAA,UACjB,cAAc;AAAA,UACd,QAAQ;AAAA,QAEZ;AAAA,QACA,WAAW;AAAA,UACP,UAAU,IAAI,QAAQ,IAAI,IAAI,GAAG;AAAA,UACjC,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,UAC5B,UAAU,IAAI,MAAM;AAAA,UACpB,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,QAC5B;AAAA,MACJ,CAAC,CAAC;AACF,YAAM,OAAO,IAAI,OAAO,IAAI,KAAK;AAAA,QAC7B,OAAO;AAAA,UACH,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,iBAAiB;AAAA,UACjB,cAAc;AAAA,QAClB;AAAA,QACA,WAAW;AAAA,UACP,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,QAC5B;AAAA,MACJ,CAAC,CAAC;AACF,WAAK,KAAK,KAAK,GAAG;AAAA,IACtB;AAEA,QAAI,aAAa,CAAC;AAClB,QAAI,SAAS,QAAQ;AACjB,mBAAa;AAAA,QACT,WAAW;AAAA,MACf;AAAA,IACJ,WAAW,SAAS,QAAQ;AACxB,mBAAa;AAAA,QACT,WAAW;AAAA,MACf;AAAA,IACJ;AACA,SAAK,OAAO,KAAK,MAAM,OAAO,IAAI,KAAK;AAAA,MACnC,OAAO;AAAA,QACH,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,iBAAiB;AAAA,QACjB,cAAc;AAAA,QACd,QAAQ;AAAA,SACL;AAAA,MAEP,WAAW;AAAA,QACP,UAAU,IAAI,QAAQ,IAAI,EAAE;AAAA,QAC5B,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,MAC5B;AAAA,IACJ,CAAC,CAAC;AAEF,SAAK,WAAW;AAChB,SAAK,WAAW,CAAC,GAAG,CAAC;AAAA,EACzB;AAAA,EAEA,UAAU,OAAe;AACrB,SAAK,KAAK,UAAU,YAAY,MAAM,MAAM,OAAO,KAAK,EAAE,CAAC;AAAA,EAC/D;AAAA,EAGA,IAAI,WAAW;AACX,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,IAAI,SAAS,GAAW;AACpB,SAAK,YAAY,IAAI;AACrB,UAAM,QAAQ,KAAK,UAAU,KAAK,aAAa,IAAI,KAAK,YAAY,IAAI,KAAK,SAAS;AACtF,SAAK,KAAK,CAAC,EAAE,UAAU,SAAS,IAAI,QAAQ,GAAG,IAAK,QAAQ,CAAE,CAAC;AAC/D,SAAK,KAAK,CAAC,EAAE,UAAU,SAAS,IAAI,QAAQ,GAAG,KAAM,QAAQ,CAAE,CAAC;AAAA,EACpE;AAAA,EAGA,IAAI,YAAY,CAAC,GAAG,CAAC,GAAqB;AACtC,SAAK,eAAe,CAAC,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC;AACjE,SAAK,mBAAmB,KAAK;AAAA,EACjC;AAAA,EACA,IAAI,iBAAiB,CAAC,GAAG,CAAC,GAAqB;AAC3C,QAAI,OAAO,MAAM,MAAM,GAAG,IAAI,CAAC;AAC/B,QAAI,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC;AAChC,SAAK,KAAK,CAAC,EAAE,UAAU,SAAS,IAAI,QAAQ,GAAG,IAAI,CAAC;AACpD,SAAK,KAAK,CAAC,EAAE,UAAU,SAAS,IAAI,QAAQ,GAAG,KAAK,CAAC;AAAA,EACzD;AAAA,EACA,IAAI,cAAc;AACd,WAAO,KAAK;AAAA,EAChB;AAAA,EAGA,IAAI,SAAS,CAAC,GAAG,CAAC,GAAqB;AACnC,SAAK,YAAY,CAAC,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC;AAC9D,SAAK,gBAAgB,KAAK;AAAA,EAC9B;AAAA,EACA,IAAI,WAAW;AACX,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAI,cAAc,CAAC,GAAG,CAAC,GAAqB;AACxC,QAAI,OAAO,MAAM,MAAM,GAAG,IAAI,CAAC;AAC/B,QAAI,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC;AAChC,SAAK,KAAK,CAAC,EAAE,UAAU,YAAY,OAAO,EAAE;AAC5C,SAAK,KAAK,CAAC,EAAE,UAAU,YAAY,QAAQ,EAAE;AAAA,EACjD;AACJ;;;AC7JO,IAAM,SAAN,cAAqB,KAAK;AAAA,EAItB,YAAY,EAAE,kBAAkB,IAAI,QAAQ,GAAG,CAAC,GAAG,kBAAkB,GAAG,OAAO,QAAQ,YAAY,IAAI,IAAmH,CAAC,GAAG;AACjO,UAAM;AAAA,MACF,WAAW;AAAA,QACP,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC5B,MAAM,IAAI,QAAQ,GAAG,CAAC;AAAA,MAC1B;AAAA,MACA,OAAO;AAAA,QACH,OAAO;AAAA,QACP,QAAQ;AAAA,MACZ;AAAA,IACJ,CAAC;AAED,SAAK,OAAO,KAAK,SAAS,IAAI,OAAO,IAAI,CAAC;AAC1C,SAAK,OAAO,cAAc,CAAC,GAAG,CAAC;AAC/B,SAAK,YAAY;AAAA,EACrB;AAAA,EAGO,eAAe,aAAsB;AACxC,SAAK,eAAe;AAAA,EACxB;AAAA,EAEA,IAAW,cAAc;AACrB,WAAO,KAAK;AAAA,EAChB;AAAA,EAIA,OAAO,aAAsB;AACzB,SAAK,UAAU;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMQ,2BAA2B,cAAsB,aAA6B;AAClF,QAAI,OAAO,cAAc;AAGzB,WAAO,OAAO;AAAK,cAAQ;AAC3B,WAAO,OAAO;AAAM,cAAQ;AAE5B,WAAO;AAAA,EACX;AAAA,EAEO,KAAK,KAAuB;AAC/B,UAAM,KAAK,GAAG;AACd,UAAM,QAAQ,KAAK,UAAU,KAAK,QAAQ,IAAI,KAAK,UAAU,QAAQ,EAAE,MAAM,IAAI,KAAK,UAAU;AAEhG,QAAI,KAAK,gBAAgB,KAAK,UAAU,SAAS,SAAS,KAAK,YAAY,IAAI,IAAI;AAC/E,WAAK,KAAK,KAAK,KAAK,aAAa,IAAI,KAAK,UAAU,QAAQ,EAAE,UAAU,GAAG,KAAK,SAAS;AACzF,WAAK,UAAU,YAAY,KAAK,UAAU,SAAS,IAAI,KAAK,YAAY,EAAE,MAAM,CAAC;AACjF,WAAK,OAAO,UAAU,MAAM,MAAM,QAAQ,KAAK,UAAU,UAAU,KAAK,EAAE,CAAC;AAAA,IAC/E,OAAO;AAEH,YAAM,YAAY,KAAK,2BAA2B,KAAK,UAAU,UAAU,KAAK;AAEhF,UAAI,YAAY,IAAI;AAChB,aAAK,UAAU,YAAY,QAAQ,EAAE;AAAA,MACzC,WAAW,YAAY,KAAK;AACxB,aAAK,UAAU,YAAY,QAAQ,EAAE;AAAA,MACzC;AAEA,WAAK,KAAK;AAAA,IACd;AAAA,EACJ;AAAA,EAEU,OAAO;AACb,SAAK,OAAO,WAAW;AACvB,SAAK,OAAO,cAAc,KAAK,OAAO;AACtC,SAAK,OAAO,WAAW,KAAK,OAAO;AAAA,EACvC;AAAA,EAEU,UAAU,OAAe;AAC/B,SAAK,OAAO,YAAY,QAAQ;AAChC,UAAM,WAAW,KAAK,IAAI,KAAK,OAAO,WAAW,KAAK,EAAE;AACxD,UAAM,UAAU,CAAC;AACjB,SAAK,OAAO,mBAAmB,CAAC,UAAU,MAAM,OAAO,WAAW,MAAM,KAAK;AAC7E,SAAK,OAAO,gBAAgB,CAAC,GAAE,CAAC;AAAA,EACpC;AAAA,EAEA,KAAK,KAAuB,WAAoB,OAAe;AAG3D,UAAM,kBAAkB,QAAM,IAAI,cAAY;AAC9C,SAAK,UAAU,YAAY,KAAK,UAAU,SAAS,IAAI,UAAU,UAAU,EAAE,MAAM,eAAe,CAAC,CAAC;AACpG,SAAK,UAAU,eAAe;AAAA,EAClC;AACJ;;;AC3FO,IAAM,OAAN,cAAmB,OAAO;AAAA,EAWtB,YAAY,MAAgB,UAAmB,UAAkB,OAAiC,QAAQ;AAC7G,UAAM,EAAE,iBAAiB,UAAU,iBAAiB,UAAU,MAAM,WAAW,IAAI,CAAC;AATxF,SAAQ,WAAmB;AAC3B,SAAQ,iBAAyB;AAEjC,SAAO,WAAmB;AAC1B,SAAO,cAAsB;AAE7B,SAAO,YAAoB;AAqD3B,SAAQ,YAAqB;AAY7B,SAAO,QAAgB;AA5DnB,SAAK,WAAW,IAAI,SAAS,MAAM,QAAQ;AAAA,MACvC,EAAE,IAAI,IAAI,QAAQ,KAAK,GAAG,GAAG,OAAO,KAAK,WAAW,IAAK;AAAA,MACzD,EAAE,IAAI,IAAI,QAAQ,KAAK,GAAG,GAAG,OAAO,KAAK,WAAW,IAAK;AAAA,MACzD,EAAE,IAAI,IAAI,QAAQ,KAAK,GAAG,GAAG,OAAO,KAAK,WAAW,IAAK;AAAA,MACzD,EAAE,IAAI,IAAI,QAAQ,KAAK,GAAG,GAAG,OAAO,KAAK,WAAW,IAAI;AAAA,MACxD;AAAA,QACI,IAAI,IAAI,QAAQ,KAAK,GAAG;AAAA,QAAG,OAAO;AAAA,QAAK,WAAW,MAAM;AACpD,cAAI,KAAK,SAAS,aAAa,KAAK,SAAS,QAAQ;AACjD,iBAAK,SAAS,aAAa,KAAK,SAAS;AACzC,iBAAK,WAAW;AAChB,iBAAK,WAAW;AAChB,iBAAK;AACL,mBAAO;AAAA,UACX;AACA,eAAK,YAAY,KAAK,OAAO;AAC7B,cAAI,KAAK,WAAW,KAAK,aAAa;AAClC,iBAAK,SAAS,YAAY,IAAI;AAAA,UAClC;AACA,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,MACA,EAAE,IAAI,IAAI,QAAQ,KAAK,GAAG,GAAG,OAAO,GAAG,WAAW,IAAM;AAAA,MACxD;AAAA,QACI,IAAI,IAAI,QAAQ,KAAK,GAAG;AAAA,QAAG,OAAO;AAAA,QAAG,WAAW,MAAM;AAClD,eAAK,WAAW;AAChB,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ,GAAG,CAAC,OAAO,UAAU,OAAO,UAAU;AAClC,WAAK,QAAQ;AACb,UAAI,UAAU,WAAW;AACrB,aAAK,iBAAiB,SAAS,MAAM;AACrC,aAAK,UAAU,KAAK;AAAA,MACxB;AACA,UAAI,UAAU,WAAW;AACrB,aAAK,KAAK;AAAA,MACd;AAAA,IACJ,GAAG,CAAC;AAEJ,SAAK,UAAU,YAAY,IAAI,QAAQ,KAAK,IAAI,CAAC;AAEjD,SAAK,QAAQ,SAAS,IAAI,QAAQ,IAAI,GAAG,GAAG,GAAG,IAAI;AACnD,SAAK,MAAM,UAAU,SAAS,IAAI,QAAQ,GAAG,GAAG,CAAC;AACjD,SAAK,OAAO,OAAO,KAAK,KAAK;AAE7B,SAAK,WAAW;AAAA,EACpB;AAAA,EAGA,IAAW,WAAoB;AAC3B,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAW,SAAS,OAAgB;AAChC,SAAK,YAAY;AACjB,SAAK,MAAM,UAAU;AACrB,QAAI,CAAC,OAAO;AACR,WAAK,OAAO,cAAc,CAAC,GAAG,CAAC;AAAA,IACnC;AAAA,EACJ;AAAA,EAIO,KAAK,KAAuB;AAE/B,SAAK,SAAS,KAAK,GAAG;AAEtB,QAAI,KAAK,IAAI,KAAK,WAAW,KAAK,cAAc,IAAI,GAAG;AACnD,UAAI,KAAK,WAAW,KAAK,iBAAiB,KAAK;AAC3C,aAAK,iBAAiB,KAAK,iBAAiB;AAAA,MAChD,WAAW,KAAK,WAAW,KAAK,iBAAiB,MAAM;AACnD,aAAK,iBAAiB,KAAK,iBAAiB;AAAA,MAChD;AAEA,WAAK,WAAW,MAAM,KAAK,KAAK,UAAU,KAAK,gBAAgB,IAAI;AACnE,WAAK,UAAU,YAAY,KAAK,QAAQ;AAAA,IAC5C;AAEA,QAAI,KAAK,UAAU;AACf,WAAK,OAAO,cAAc,CAAC,KAAK,KAAK,OAAO,YAAY,CAAC,CAAC;AAAA,IAC9D;AAAA,EACJ;AACJ;;;ACrGO,IAAM,SAAN,cAAqB,OAAO;AAAA,EACxB,YAAoB,QAAgB;AACvC,UAAM;AAAA,MACF,iBAAiB,IAAI,QAAQ,KAAK,GAAG;AAAA,MAAG,iBAAiB;AAAA,MAAI,MAAM;AAAA,MAAQ,WAAW;AAAA,IAC1F,CAAC;AAHsB;AAAA,EAI3B;AAAA,EAEO,eAAe,aAA4B;AAC9C,UAAM,WAAW,KAAK,OAAO;AAC7B,eAAW,WAAW,UAAU;AAC5B,UAAI,CAAC,eAEG,YAAY,IAAI,QAAQ,SAAS,KAAK,YAAY,IAAI,QAAQ,SAAS,IAAI,QAAQ,KAAK,KACxF,YAAY,IAAI,QAAQ,SAAS,KAAK,YAAY,IAAI,QAAQ,SAAS,IAAI,QAAQ,KAAK,GACzF;AACH;AAAA,MACJ;AAAA,IACJ;AACA,UAAM,eAAe,WAAW;AAAA,EACpC;AAEJ;;;ACpBO,IAAM,SAAN,cAAqB,OAAO;AAAA,EAe/B,YAAY,MAMR,CAAC,GAAW,OAAe;AAC3B,UAAM;AAAA,MACF,MAAM,IAAI;AAAA,MACV,WAAW,IAAI;AAAA,IACnB,CAAC;AAJW;AAlBhB,SAAQ,UAAmB;AAU3B,SAAO,oBAA4B;AAc/B,SAAK,OAAO,cAAc,IAAI,eAAe,CAAC,GAAG,CAAC;AAClD,SAAK,OAAO;AAAA,MACR,iBAAiB,IAAI,mBAAmB,IAAI,QAAQ,GAAG,CAAC;AAAA,MACxD,iBAAiB,IAAI,mBAAmB;AAAA,IAC5C;AACA,QAAI,KAAK,OAAO;AACZ,WAAK,UAAU,UAAU,KAAK,MAAM,KAAK,SAAS;AAAA,IACtD,OAAO;AACH,WAAK,UAAU,YAAY,KAAK,KAAK,eAAe;AACpD,WAAK,UAAU,YAAY,KAAK,KAAK,eAAe;AAAA,IACxD;AACA,SAAK,OAAO,WAAW;AACvB,SAAK,OAAO,WAAW,CAAC,KAAK,IAAI;AACjC,SAAK,OAAO,KAAK,CAAC,EAAE,SAAS;AAAA;AAAA,IAE7B,CAAC;AACD,SAAK,OAAO,KAAK,CAAC,EAAE,SAAS;AAAA;AAAA,IAE7B,CAAC;AAED,SAAK,SAAS;AAAA,MACV,YAAY;AAAA,IAChB,CAAC;AAAA,EACL;AAAA,EA9CA,IAAW,OAAO,QAAiB;AAC/B,SAAK,UAAU;AACf,SAAK,UAAU;AACf,SAAK,MAAM,KAAK,UAAU,YAAY,SAAS,KAAK,EAAE;AACtD,SAAK,MAAM,YAAY,SAAS,IAAI,QAAQ,KAAK,GAAG,IAAI,IAAI,QAAQ,KAAK,GAAG,CAAC;AAAA,EACjF;AAAA,EACA,IAAW,SAAS;AAChB,WAAO,KAAK;AAAA,EAChB;AAAA,EAwCA,KAAK,KAAuB;AACxB,UAAM,KAAK,GAAG;AAEd,QAAI,KAAK,OAAO;AACZ,WAAK,oBAAoB,KAAK,oBAAoB,KAAK,IAAI,MAAM,OAAO,KAAK,MAAM,IAAI,KAAK,iBAAiB;AAC7G,WAAK,OAAO,cAAc,CAAC,KAAK,mBAAmB,KAAK,iBAAiB;AACzE,WAAK,OAAO,KAAK,CAAC,EAAE,IAAI,MAAM,aAAa,KAAK,sBAAsB,IAAI,+BAA+B;AACzG,WAAK,OAAO,KAAK,CAAC,EAAE,IAAI,MAAM,aAAa,KAAK,sBAAsB,IAAI,+BAA+B;AACzG,WAAK,MAAM,KAAK,UAAU,YAAY,KAAK,SAAS,KAAK,EAAE;AAC3D,WAAK,MAAM,YAAY,KAAK,SAAS,IAAI,QAAQ,KAAK,GAAG,IAAI,IAAI,QAAQ,KAAK,GAAG,CAAC;AAElF,WAAK,UAAU,YAAY,KAAK,MAAM,KAAK,UAAU,SAAS,SAAS,IAAI,KAAK,KAAK,eAAe,CAAC;AACrG,WAAK,UAAU,YAAY,KAAK,MAAM,KAAK,UAAU,SAAS,WAAW,KAAK,KAAK,eAAe;AAAA,IACtG;AAAA,EACJ;AACJ;;;ACvDO,IAAM,SAAN,cAAqB,QAAQ;AAAA,EA+DzB,YAAoB,MAAgB,YAAsD;AAC7F,UAAM,IAAI,QAAQ,KAAK,GAAG,GAAG;AAAA,MACzB,iBAAiB;AAAA,MACjB,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,SAAS;AAAA,MACT,gBAAgB;AAAA,IACpB,GAAG,UAAU;AARU;AA7D3B,iBAAiB;AAIjB,SAAgB,WAGV;AAAA;AAAA,MAEE;AAAA,QACI,UAAU,IAAI,QAAQ,GAAG,CAAC;AAAA,QAC1B,MAAM,IAAI,QAAQ,IAAI,GAAG;AAAA,MAC7B;AAAA,MACA;AAAA,QACI,UAAU,IAAI,QAAQ,GAAG,CAAC;AAAA,QAC1B,MAAM,IAAI,QAAQ,KAAK,EAAE;AAAA,MAC7B;AAAA,MACA;AAAA,QACI,UAAU,IAAI,QAAQ,GAAG,GAAG;AAAA,QAC5B,MAAM,IAAI,QAAQ,KAAK,EAAE;AAAA,MAC7B;AAAA,MACA;AAAA,QACI,UAAU,IAAI,QAAQ,KAAK,CAAC;AAAA,QAC5B,MAAM,IAAI,QAAQ,IAAI,GAAG;AAAA,MAC7B;AAAA;AAAA,MAEA;AAAA,QACI,UAAU,IAAI,QAAQ,GAAG,GAAG;AAAA,QAC5B,MAAM,IAAI,QAAQ,KAAK,GAAG;AAAA,MAC9B;AAAA,MACA;AAAA,QACI,UAAU,IAAI,QAAQ,KAAK,CAAC;AAAA,QAC5B,MAAM,IAAI,QAAQ,KAAK,GAAG;AAAA,MAC9B;AAAA,MACA;AAAA,QACI,UAAU,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC9B,MAAM,IAAI,QAAQ,KAAK,GAAG;AAAA,MAC9B;AAAA;AAAA,MAEA;AAAA,QACI,UAAU,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC9B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,MAC5B;AAAA,MACA;AAAA,QACI,UAAU,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC9B,MAAM,IAAI,QAAQ,KAAK,EAAE;AAAA,MAC7B;AAAA;AAAA,MAEA;AAAA,QACI,UAAU,IAAI,QAAQ,IAAI,EAAE;AAAA,QAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,MAC5B;AAAA,MACA;AAAA,QACI,UAAU,IAAI,QAAQ,KAAK,EAAE;AAAA,QAC7B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,MAC5B;AAAA,IAEJ;AAuIJ,SAAO,SAAiB;AAzHpB,UAAM,OAAO,KAAK,OAAO,IAAI,KAAK;AAAA,MAC9B,OAAO;AAAA,QACH,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,UAAU;AAAA,MACd;AAAA,IACJ,CAAC,CAAC;AAEF,UAAM,QAAQ,KAAK,OAAO,IAAI,KAAK;AAAA,MAC/B,OAAO;AAAA,QACH,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,iBAAiB;AAAA,QACjB,WAAW;AAAA,QACX,UAAU;AAAA,QACV,cAAc;AAAA,QACd,QAAQ;AAAA,QACR,WAAW;AAAA,MACf;AAAA,IACJ,CAAC,CAAC;AAEF,UAAM,OAAO,IAAI,KAAK;AAAA,MAClB,UAAU,IAAI,QAAQ,IAAI,GAAG;AAAA,MAC7B,WAAW;AAAA,QACP,UAAU,IAAI,QAAQ,KAAK,IAAI;AAAA,QAC/B,UAAU;AAAA,MACd;AAAA,MACA,WAAW,IAAI,QAAQ,GAAG,CAAC;AAAA,MAC3B,WAAW,IAAI,QAAQ,GAAG,CAAC;AAAA,MAC3B,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,QACL,OAAO;AAAA,UACH,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,QAAQ;AAAA,UACR,WAAW;AAAA,UACX,iBAAiB;AAAA,UACjB,cAAc;AAAA,QAClB;AAAA,QACA,WAAW;AAAA,UACP,UAAU;AAAA,QACd;AAAA,MACJ;AAAA,IACJ,CAAC,CAAC;AAGF,SAAK,OAAO,KAAK,QAAQ,IAAI,MAAM,IAAI,QAAQ,KAAK,GAAG,GAAG,EAAE,CAAC;AAE7D,SAAK,OAAO,QAAQ,IAAI,QAAQ,KAAK,EAAE,GAAG,IAAI,GAAG,CACjD,CAAC,CAAC;AAEF,SAAK,SAAS,IAAI,OAAO,EAAE,iBAAiB,IAAI,QAAQ,IAAI,EAAE,GAAG,MAAM,QAAQ,aAAa,CAAC,GAAG,CAAC,EAAE,GAAG,KAAK,KAAK;AAChH,SAAK,OAAO,KAAK,MAAM;AAIvB,SAAK,OAAO,IAAI,MAAM,IAAI,QAAQ,KAAK,GAAG,GAAG,KAAK;AAAA,MAC9C,QAAQ;AAAA,IACZ,CAAC,CAAC;AAEF,SAAK,SAAS,IAAI,OAAO,IAAI;AAC7B,SAAK,OAAO,KAAK,MAAM;AAGvB,UAAM,IAAI,KAAK,OAAO,IAAI,MAAM,IAAI,QAAQ,KAAK,GAAG,GAAG,KAAK;AAAA,MACxD,QAAQ;AAAA,IACZ,CAAC,CAAC;AAEF,SAAK,OAAO,QAAQ,IAAI,QAAQ,KAAK,GAAG,GAAG,IAAI,GAAG;AAAA,MAC9C,QAAQ;AAAA,IACZ,CAAC,CAAC;AAEF,SAAK,OAAO,QAAQ,IAAI,QAAQ,KAAK,GAAG,GAAG,KAAK,GAAG;AAAA,MAC/C,QAAQ;AAAA,IACZ,CAAC,CAAC;AAEF,SAAK,OAAO,SAAS,IAAI,QAAQ,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;AACnD,SAAK,OAAO,SAAS,IAAI,QAAQ,KAAK,EAAE,GAAG,IAAI,GAAG,EAAE,CAAC;AAErD,SAAK,OAAO,iBAAiB,IAAI,QAAQ,KAAK,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;AAG9D,SAAK,OAAO,IAAI,OAAO,EAAE,iBAAiB,IAAI,QAAQ,KAAK,GAAG,GAAG,MAAM,QAAQ,iBAAiB,KAAK,aAAa,CAAC,GAAG,CAAC,EAAG,CAAC,CAAW;AACtI,SAAK,OAAO,IAAI,OAAO,EAAE,iBAAiB,IAAI,QAAQ,KAAK,GAAG,GAAG,MAAM,QAAQ,iBAAiB,KAAK,aAAa,CAAC,GAAG,CAAC,EAAE,CAAC,CAAW;AAGrI,SAAK,MAAM,IAAI,KAAK,MAAM,IAAI,QAAQ,KAAK,GAAG,GAAG,GAAG,MAAM;AAC1D,SAAK,OAAO,KAAK,GAAG;AAEpB,SAAK,UAAU,KAAK,OAAO,IAAI,KAAK;AAAA,MAChC,OAAO;AAAA,QACH,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,eAAe;AAAA,MACnB;AAAA,IACJ,CAAC,CAAC;AACF,SAAK,QAAQ,IAAI,iBAAiB,eAAe,CAAC,MAAM;AACpD,WAAK,QAAQ;AACb,WAAK,OAAO,eAAe,IAAI,QAAQ,EAAE,SAAS,EAAE,OAAO,CAAC;AAAA,IAChE,CAAC;AAED,SAAK,QAAQ,IAAI,iBAAiB,aAAa,CAAC,MAAM;AAClD,WAAK,QAAQ;AAAA,IACjB,CAAC;AACD,SAAK,QAAQ,IAAI,iBAAiB,gBAAgB,CAAC,MAAM;AACrD,WAAK,QAAQ;AAAA,IACjB,CAAC;AAED,SAAK,QAAQ,IAAI,iBAAiB,eAAe,CAAC,MAAM;AACpD,UAAI,KAAK,OAAO;AACZ,aAAK,OAAO,eAAe,IAAI,QAAQ,EAAE,SAAS,EAAE,OAAO,CAAC;AAAA,MAChE,OAAO;AACH,aAAK,OAAO,OAAO,IAAI,QAAQ,EAAE,SAAS,EAAE,OAAO,CAAC;AAAA,MACxD;AAAA,IACJ,CAAC;AAED,SAAK,QAAQ;AAAA,EACjB;AAAA,EAGA,IAAW,MAAM,OAAe;AAC5B,SAAK,SAAS,MAAM,MAAM,OAAO,GAAG,CAAC;AACrC,SAAK,QAAQ,SAAS;AAAA,MAClB,WAAW,uBAAwB,YAAK,WAAW,KAAK,MAAM,IAAI,MAAO,KAAG;AAAA,IAChF,CAAC;AACD,QAAI,KAAK,SAAS,GAAG;AACjB,WAAK,KAAK,SAAS,YAAY,IAAI;AAAA,IACvC;AAAA,EACJ;AAAA,EACA,IAAW,QAAQ;AACf,WAAO,KAAK;AAAA,EAChB;AAAA,EAEO,KAAK,KAAuB;AAC/B,UAAM,KAAK,GAAG;AAEd,SAAK,SAAS,IAAI,WAAW;AAE7B,QAAI,IAAI,QAAQ,MAAM,GAAG;AAErB,UAAI,KAAK,KAAK,QAAM,OAAK;AAEzB,UAAI,IAAI,MAAM;AACV,aAAK,SAAS;AAAA,UACV,QAAQ,QAAQ,YAAK,WAAW,KAAK,IAAI,IAAI,QAAQ,OAAS,GAAG,IAAI,KAAK,IAAI,IAAI,QAAQ,OAAQ,GAAG,IAAI,CAAC,IAAI,GAAC;AAAA,QACnH,CAAC;AACD,aAAK,QAAQ,SAAS;AAAA,UAClB,iBAAiB,iBAAiB,YAAK,IAAI,IAAI,QAAQ,IAAM,IAAI,KAAK,IAAI,IAAI,QAAQ,IAAK,IAAI,KAAK,WAAW,CAAC,IAAI,KAAG;AAAA,QAC3H,CAAC;AAAA,MACL,OAAO;AACH,aAAK,SAAS;AAAA,UACV,QAAQ;AAAA,QACZ,CAAC;AACD,aAAK,QAAQ,SAAS;AAAA,UAClB,iBAAiB;AAAA,QACrB,CAAC;AAAA,MACL;AAAA,IACJ;AAAA,EACJ;AAAA,EAEA,WAAW,YAA8C;AACrD,UAAM,WAAW,UAAU;AAG3B,QAAI,MAAM,SAAS,GAAG;AAClB,WAAK,IAAI,MAAM,QAAQ;AACvB,WAAK,IAAI,MAAM,SAAS;AAAA,IAC5B,OAAO;AACH,WAAK,IAAI,MAAM,QAAQ;AACvB,WAAK,IAAI,MAAM,SAAS;AAAA,IAC5B;AAAA,EAEJ;AACJ;;;ACvQO,IAAM,OAAN,cAAmB,KAAK;AAAA,EAC3B,YAAY,MAAc,OAAe,IAAI,QAAgB,SAAS,QAAiB,OAAO;AAC1F,UAAM;AAAA,MACF;AAAA,MACA,WAAW,QAAQ,CAAC,6BAA6B,OAAO,IAAI,CAAC,2BAA2B;AAAA,MACxF,OAAO;AAAA,QACH,UAAU,OAAO;AAAA,QACjB;AAAA,QACA,eAAe;AAAA,QACf,YAAY;AAAA,MAChB;AAAA,IACJ,CAAC;AAAA,EAEL;AAAA,EAEA,WAAW,MAAc;AACrB,SAAK,QAAQ,IAAI;AAAA,EACrB;AAAA,EAEA,SAAS,MAAc;AACnB,SAAK,IAAI,MAAM,WAAW,OAAO;AAAA,EACrC;AACJ;;;ACbO,IAAM,UAAN,MAAM,iBAAgB,QAAQ;AAAA,EAS1B,YAAoB,QAAkB,YAAsD;AAC/F,UAAM,IAAI,QAAQ,KAAK,CAAC,GAAG;AAAA,MACvB,SAAS;AAAA,MACT,eAAe;AAAA,MACf,YAAY;AAAA,MACZ,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,WAAW;AAAA,MACX,iBAAiB;AAAA,MACjB,WAAW;AAAA,MACX,UAAU;AAAA,MACV,KAAK;AAAA,MACL,eAAe;AAAA,MACf,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,QAAQ;AAAA,IACZ,GAAG,UAAU;AAhBU;AAP3B,SAAQ,QAMF,CAAC;AAmBH,SAAK,QAAQ,SAAQ,aAAa,gBAAgB,EAAE,GAAG,GAAG,KAAK,MAAM;AACjE,aAAO,OAAO,CAAC,KAAK,OAAO,SAAS,YAAY,CAAC;AAAA,IACrD,CAAC;AAED,SAAK,QAAQ,SAAQ,aAAa,oBAAoB,EAAE,GAAG,GAAG,MAAM,MAAM;AACtE,aAAO,MAAM,MAAM,IAAG,KAAK,OAAO,OAAO,IAAI,WAAW,KAAK,OAAO,OAAO,IAAI,aAAc,GAAG,CAAC;AAAA,IACrG,GAAG,CAAC,SAAS,UAAU;AACnB,cAAQ,SAAS,EAAE,iBAAiB,OAAO,YAAK,MAAM,OAAO,KAAK,OAAO,KAAK,GAAC,KAAI,YAAK,MAAM,MAAM,MAAM,MAAM,KAAK,GAAC,KAAI,YAAK,MAAM,MAAM,MAAM,MAAM,KAAK,GAAC,KAAK,CAAC;AAAA,IACvK,CAAC;AACD,SAAK,QAAQ,SAAQ,aAAa,8BAA8B,EAAE,GAAG,GAAG,KAAK,MAAM;AAC/E,aAAO,IAAI,KAAK,OAAO,OAAO;AAAA,IAClC,GAAG,CAAC,SAAS,UAAU;AAjD/B;AAkDY,cAAQ,SAAS,EAAE,iBAAiB,OAAO,YAAK,MAAM,OAAO,KAAK,OAAO,KAAK,GAAC,KAAI,YAAK,MAAM,MAAM,MAAM,MAAM,KAAK,GAAC,KAAI,YAAK,MAAM,MAAM,MAAM,MAAM,KAAK,GAAC,KAAK,CAAC;AACnK,oBAAQ,SAAS,CAAC,MAAlB,mBAAqB,QAAQ,CAAC,wBAAwB,2BAA2B,2BAA2B,4BAA4B,EAAE,KAAK,MAAO,QAAQ,GAAI,CAAC;AAAA,IACvK,CAAC;AAAA,EAEL;AAAA,EAEA,OAAO,aAAa,MAAc,OAAe,IAAI;AACjD,WAAO,IAAI,KAAK;AAAA,MACZ,eAAe;AAAA,MACf,YAAY;AAAA,MACZ,gBAAgB;AAAA,MAChB,OAAO;AAAA,QACH,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,iBAAiB;AAAA,QACjB,cAAc;AAAA,QACd,WAAW;AAAA,QACX,UAAU;AAAA,QACV,OAAO;AAAA,QACP,WAAW;AAAA,QACX,YAAY;AAAA,QACZ,WAAW;AAAA,QACX,YAAY;AAAA,QACZ,UAAU;AAAA,QACV,UAAU;AAAA,MACd;AAAA,MACA,UAAU;AAAA,QACN,IAAI,KAAK,MAAM,IAAI;AAAA,MACvB;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EAEA,QAAQ,SAAe,OAAe,QAAgB,QAAsB,QAAiD;AACzH,SAAK,OAAO,OAAO;AACnB,SAAK,MAAM,KAAK;AAAA,MACZ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EAEA,KAAK,KAAuB;AACxB,UAAM,KAAK,GAAG;AACd,QAAI,IAAI,QAAQ,OAAO,GAAG;AACtB,WAAK,MAAM,KAAK,CAAC,GAAG,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC,MAAM,UAAU;AAhGlF;AAiGgB,aAAK,QAAQ,KAAK,OAAO;AACzB,mBAAK,WAAL,8BAAc,KAAK,SAAS,KAAK;AACjC,aAAK,QAAQ,SAAS;AAAA;AAAA,UAElB,OAAO,KAAK,QAAQ,KAAK,SAAS,SAAS;AAAA,UAC3C,YAAY,KAAK,QAAQ,KAAK,SAAS,4FAA4F;AAAA,QACvI,CAAC;AACD,aAAK,QAAQ,SAAS;AAAA,UAClB,WAAW,KAAK,QAAQ,KAAK,SAAS,QAAQ;AAAA,UAC9C,SAAS,KAAK,QAAQ,KAAK,SAAS,MAAM;AAAA,UAC1C,OAAO,KAAK,QAAQ,KAAK,SAAS,SAAS;AAAA,QAC/C,CAAC;AAAA,MACL,CAAC;AAAA,IACL;AAAC;AAAA,EACL;AAEJ;;;AC3GO,IAAM,gBAAN,cAA4B,KAAK;AAAA,EAsB7B,YAAY,UAAmB,SAAqB;AACvD,UAAM;AAAA,MACF,OAAO;AAAA,QACH,QAAQ;AAAA,MAEZ;AAAA,MACA,WAAW;AAAA,QACP;AAAA,QACA,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC5B,MAAM,IAAI,QAAQ,KAAK,GAAG;AAAA,MAC9B;AAAA,IACJ,CAAC;AA7BL,SAAQ,OAAgB;AAgPxB,SAAO,SAAiB;AACxB,SAAQ,WAAoB;AAlNxB,QAAI,KAAc;AAClB,QAAI,KAAc;AAElB,SAAK,OAAO,IAAI,IAAI;AAAA,MAChB,UAAU,IAAI,QAAQ,MAAM,IAAI,KAAK,GAAG;AAAA,MAAG,UAAU;AAAA,MAAG,OAAO,IAAI,QAAQ,GAAG,CAAC;AAAA,MAAG,SAAS,CAAC,GAAG,YAAY,KAAK,MAAM,SAAS,QAAW,MAAM,KAAK,IAAI;AAAA,IAC7J,CAAC,CAAC;AACF,SAAK,OAAO,IAAI,IAAI;AAAA,MAChB,UAAU,IAAI,QAAQ,MAAM,IAAI,MAAM,GAAG;AAAA,MAAG,UAAU;AAAA,MAAG,OAAO,IAAI,QAAQ,GAAG,EAAE;AAAA,MAAG,SAAS,CAAC,GAAG,YAAY,KAAK,MAAM,SAAS,MAAM,EAAE;AAAA,IAC7I,CAAC,CAAC;AACF,SAAK,OAAO,IAAI,IAAI;AAAA,MAChB,UAAU,IAAI,QAAQ,MAAM,IAAI,KAAK,GAAG;AAAA,MAAG,UAAU;AAAA,MAAK,OAAO,IAAI,QAAQ,GAAG,CAAC;AAAA,MAAG,SAAS,CAAC,GAAG,YAAY,KAAK,MAAM,SAAS,QAAW,MAAM,KAAK,IAAI;AAAA,IAC/J,CAAC,CAAC;AACF,SAAK,OAAO,IAAI,IAAI;AAAA,MAChB,UAAU,IAAI,QAAQ,MAAM,IAAI,MAAM,GAAG;AAAA,MAAG,UAAU;AAAA,MAAG,OAAO,IAAI,QAAQ,IAAI,CAAC;AAAA,MAAG,SAAS,CAAC,GAAG,YAAY,KAAK,MAAM,SAAS,MAAM,EAAE;AAAA,IAC7I,CAAC,CAAC;AACF,SAAK,OAAO,IAAI,IAAI;AAAA,MAChB,UAAU,IAAI,QAAQ,MAAM,IAAI,MAAM,GAAG;AAAA,MAAG,UAAU;AAAA,MAAG,OAAO,IAAI,QAAQ,IAAI,CAAC;AAAA,MAAG,SAAS,CAAC,GAAG,YAAY,KAAK,MAAM,OAAO;AAAA,IACnI,CAAC,CAAC;AAKF,SAAK,OAAO,IAAI,KAAK;AAAA,MACjB,OAAO;AAAA,QACH,iBAAiB;AAAA,QACjB,cAAc;AAAA,MAElB;AAAA,MACA,WAAW;AAAA,QACP,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC5B,MAAM,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC1B,UAAU;AAAA,QACV,UAAU,IAAI,QAAQ,IAAI,EAAE;AAAA,MAChC;AAAA,IACJ,CAAC,CAAC;AAIF,SAAK,OAAO,KAAK,UAAU,IAAI,KAAK;AAAA,MAChC,OAAO;AAAA,QACH,iBAAiB;AAAA,MACrB;AAAA,MACA,WAAW;AAAA,QACP,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,QACxB,UAAU,IAAI,QAAQ,KAAK,GAAG;AAAA,MAClC;AAAA,IACJ,CAAC,CAAC;AACF,SAAK,OAAO,KAAK,UAAU,IAAI,KAAK;AAAA,MAChC,OAAO;AAAA,QACH,iBAAiB;AAAA,MACrB;AAAA,MACA,WAAW;AAAA,QACP,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,QACxB,UAAU,IAAI,QAAQ,KAAK,GAAG;AAAA,MAClC;AAAA,IACJ,CAAC,CAAC;AAIF,SAAK,OAAO,IAAI,KAAK;AAAA,MACjB,OAAO;AAAA,QACH,iBAAiB;AAAA,QACjB,cAAc;AAAA,QACd,QAAQ;AAAA,QACR,WAAW;AAAA,MACf;AAAA,MACA,WAAW;AAAA,QACP,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,QACxB,UAAU,IAAI,QAAQ,KAAK,GAAG;AAAA,MAClC;AAAA,IACJ,CAAC,CAAC;AAIF,SAAK,OAAO,IAAI,KAAK;AAAA,MACjB,OAAO;AAAA,QACH,iBAAiB;AAAA,QACjB,cAAc;AAAA,QACd,QAAQ;AAAA,QACR,WAAW;AAAA,MACf;AAAA,MACA,WAAW;AAAA,QACP,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,QACxB,UAAU,IAAI,QAAQ,KAAK,GAAG;AAAA,MAClC;AAAA,IACJ,CAAC,CAAC;AAEF,SAAK,OAAO,IAAI,KAAK;AAAA,MACjB,OAAO;AAAA,QACH,iBAAiB;AAAA,QACjB,cAAc;AAAA,QACd,QAAQ;AAAA,QACR,WAAW;AAAA,MACf;AAAA,MACA,WAAW;AAAA,QACP,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,QACxB,UAAU,IAAI,QAAQ,KAAK,GAAG;AAAA,MAClC;AAAA,IACJ,CAAC,CAAC;AAIF,SAAK,OAAO,IAAI,KAAK;AAAA,MACjB,OAAO;AAAA,QACH,iBAAiB;AAAA,QACjB,cAAc;AAAA,QACd,QAAQ;AAAA,MAEZ;AAAA,MACA,WAAW;AAAA,QACP,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC5B,MAAM,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC1B,UAAU;AAAA,QACV,UAAU,IAAI,QAAQ,GAAG,CAAC;AAAA,MAC9B;AAAA,IACJ,CAAC,CAAC;AACF,SAAK,SAAS,KAAK,OAAO,IAAI,KAAK;AAAA,MAC/B,OAAO;AAAA,QACH,iBAAiB;AAAA,QACjB,cAAc;AAAA,QACd,WAAW;AAAA,MACf;AAAA,MACA,WAAW;AAAA,QACP,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC5B,MAAM,IAAI,QAAQ,KAAK,EAAE;AAAA,QACzB,UAAU;AAAA,QACV,UAAU,IAAI,QAAQ,IAAI,EAAE;AAAA,MAChC;AAAA,MACA,UAAU;AAAA,QACN,IAAI,KAAK,EAAE,WAAW,EAAE,MAAM,IAAI,QAAQ,IAAI,EAAE,GAAG,UAAU,IAAI,QAAQ,KAAK,IAAI,GAAG,CAAC,EAAG,GAAG,OAAO,EAAE,YAAY,gBAAgB,iBAAiB,aAAa,cAAc,MAAM,EAAE,CAAC;AAAA,QACtL,IAAI,KAAK,EAAE,WAAW,EAAE,MAAM,IAAI,QAAQ,IAAI,EAAE,GAAG,UAAU,IAAI,QAAQ,KAAK,IAAI,GAAG,CAAC,EAAG,GAAG,OAAO,EAAE,YAAY,gBAAgB,iBAAiB,aAAa,cAAc,MAAM,EAAE,CAAC;AAAA,QACtL,IAAI,KAAK,EAAE,WAAW,EAAE,MAAM,IAAI,QAAQ,IAAI,EAAE,GAAG,UAAU,IAAI,QAAQ,KAAK,IAAI,GAAG,CAAC,EAAG,GAAG,OAAO,EAAE,YAAY,gBAAgB,iBAAiB,aAAa,cAAc,MAAM,EAAE,CAAC;AAAA,QACtL,IAAI,KAAK,EAAE,WAAW,EAAE,MAAM,IAAI,QAAQ,IAAI,EAAE,GAAG,UAAU,IAAI,QAAQ,KAAK,IAAI,GAAG,CAAC,EAAG,GAAG,OAAO,EAAE,YAAY,gBAAgB,iBAAiB,aAAa,cAAc,MAAM,EAAE,CAAC;AAAA,QACtL,IAAI,KAAK,EAAE,WAAW,EAAE,MAAM,IAAI,QAAQ,IAAI,EAAE,GAAG,UAAU,IAAI,QAAQ,KAAK,IAAI,GAAG,CAAC,EAAG,GAAG,OAAO,EAAE,YAAY,gBAAgB,iBAAiB,aAAa,cAAc,MAAM,EAAE,CAAC;AAAA,MAC1L;AAAA,IACJ,CAAC,CAAC;AACF,SAAK,OAAO,IAAI,KAAK;AAAA,MACjB,gBAAgB;AAAA,MAChB,YAAY;AAAA,MACZ,OAAO;AAAA,QACH,iBAAiB;AAAA,QACjB,cAAc;AAAA,QACd,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,YAAY;AAAA,MAChB;AAAA,MACA,WAAW;AAAA,QACP,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,QACxB,UAAU;AAAA,QACV,UAAU,IAAI,QAAQ,KAAK,EAAE;AAAA,MACjC;AAAA,MAEA,aAAa,CAAC,GAAG,YAAY;AACzB,gBAAQ,IAAI,MAAM,YAAY;AAC9B,QAAC,QAAQ,SAAS,CAAC,EAAW,SAAS,EAAE;AACzC,YAAI,KAAK,KAAK;AACV,eAAK,UAAU;AAAA,QACnB;AAAA,MACJ;AAAA,MACA,WAAW,CAAC,GAAG,YAAY;AACvB,gBAAQ,IAAI,MAAM,YAAY;AAC9B,QAAC,QAAQ,SAAS,CAAC,EAAW,SAAS,EAAE;AAAA,MAC7C;AAAA,MACA,UAAU;AAAA,QACN,IAAI,KAAK,UAAU,IAAI,SAAS,IAAI;AAAA,MACxC;AAAA,IACJ,CAAC,CAAC;AAGF,SAAK,OAAO,KAAK,WAAW,IAAI,IAAI;AAAA,MAChC,UAAU,IAAI,QAAQ,IAAI,GAAG;AAAA,MAAG,UAAU;AAAA,MAAG,OAAO,IAAI,QAAQ,GAAG,CAAC;AAAA,MAAG,SAAS,MAAM;AAClF,YAAI,KAAK,UAAU,GAAG;AAClB,eAAK,SAAS;AACd,eAAK,UAAU;AACf,eAAK,MAAM;AACX,kBAAQ;AAAA,QACZ;AAAA,MACJ;AAAA,IACJ,CAAC,CAAC;AAIF,SAAK,OAAO,IAAI,KAAK;AAAA,MACjB,OAAO;AAAA,QACH,iBAAiB;AAAA,QACjB,cAAc;AAAA,QACd,QAAQ;AAAA,MAEZ;AAAA,MACA,WAAW;AAAA,QACP,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC5B,MAAM,IAAI,QAAQ,KAAK,EAAE;AAAA,QACzB,UAAU;AAAA,QACV,UAAU,IAAI,QAAQ,GAAG,GAAG;AAAA,MAChC;AAAA,IACJ,CAAC,CAAC;AAEF,SAAK,UAAU;AACf,SAAK,MAAM;AAAA,EAEf;AAAA,EA5OA,IAAW,MAAM;AACb,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAW,IAAI,OAAgB;AAC3B,SAAK,OAAO;AACZ,SAAK,SAAS,UAAU;AACxB,SAAK,SAAS,WAAW;AAAA,EAE7B;AAAA,EACO,MAAM,SAAe,YAA4B,KAAkB;AACtE,QAAI,CAAC,KAAK,QAAQ,CAAC,cAAc,WAAW,IAAI;AAC5C,WAAK,MAAM;AACX,cAAQ,UAAU;AAClB;AAAA,IACJ;AAAA,EACJ;AAAA,EAiOA,IAAI,UAAU;AACV,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAI,QAAQ,OAAgB;AACxB,SAAK,QAAQ,UAAU;AACvB,SAAK,QAAQ,UAAU;AACvB,SAAK,WAAW;AAAA,EACpB;AAAA,EAEA,KAAK,KAAuB;AACxB,UAAM,KAAK,GAAG;AACd,QAAI,KAAK,SAAS;AACd,WAAK,UAAU,IAAI,WAAW;AAE9B,UAAI,KAAK,SAAS,GAAG;AACjB,aAAK,UAAU;AAAA,MACnB;AAEA,UAAI,KAAK,SAAS,KAAK;AACnB,aAAK,SAAS,WAAW;AAAA,MAC7B;AAAA,IACJ;AACA,SAAK,OAAO,SAAS,QAAQ,CAAC,GAAG,MAAM;AACnC,QAAE,IAAI,MAAM,UAAU,KAAK,SAAS,IAAI,MAAM,MAAM,MAAM;AAAA,IAC9D,CAAC;AAAA,EACL;AACJ;AAEO,IAAM,MAAN,cAAkB,KAAK;AAAA,EAGnB,YAAY,EAAE,WAAW,IAAI,QAAQ,GAAG,CAAC,GAAG,WAAW,GAAG,QAAQ,IAAI,QAAQ,GAAG,CAAC,GAAG,QAAQ,IAAuH,CAAC,GAAG;AAC3N,UAAM;AAAA,MACF,OAAO;AAAA,QACH,QAAQ;AAAA,QACR,QAAQ;AAAA,MACZ;AAAA,MACA,WAAW;AAAA,QACP,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,QACxB;AAAA,QACA;AAAA,MACJ;AAAA,MACA,aAAa;AAAA,IACjB,CAAC;AAdL,SAAQ,QAAgB,CAAC;AAwGzB,SAAQ,YAAqB;AAvFzB,SAAK,MAAM,KAAK,KAAK,OAAO,IAAI,KAAK;AAAA,MACjC,OAAO;AAAA,QACH,iBAAiB;AAAA,QACjB,QAAQ;AAAA,QACR,cAAc;AAAA,QACd,eAAe;AAAA,QACf,YAAY;AAAA,MAChB;AAAA,MACA,WAAW;AAAA,QACP,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC5B,MAAM,IAAI,QAAQ,IAAI,GAAG;AAAA,QACzB,UAAU,IAAI,QAAQ,IAAI,IAAI;AAAA,MAClC;AAAA,IACJ,CAAC,CAAC,CAAC;AACH,SAAK,MAAM,KAAK,KAAK,OAAO,IAAI,KAAK;AAAA,MACjC,OAAO;AAAA,QACH,iBAAiB;AAAA,QACjB,QAAQ;AAAA,QACR,cAAc;AAAA,QACd,eAAe;AAAA,QACf,YAAY;AAAA,MAChB;AAAA,MACA,WAAW;AAAA,QACP,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC5B,MAAM,IAAI,QAAQ,IAAI,GAAG;AAAA,QACzB,UAAU,IAAI,QAAQ,IAAI,IAAI;AAAA,MAClC;AAAA,IACJ,CAAC,CAAC,CAAC;AACH,SAAK,MAAM,KAAK,KAAK,OAAO,IAAI,KAAK;AAAA,MACjC,OAAO;AAAA,QACH,iBAAiB;AAAA,QACjB,QAAQ;AAAA,QACR,cAAc;AAAA,QACd,eAAe;AAAA,QACf,YAAY;AAAA,MAChB;AAAA,MACA,WAAW;AAAA,QACP,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC5B,MAAM,IAAI,QAAQ,IAAI,GAAG;AAAA,QACzB,UAAU,IAAI,QAAQ,IAAI,GAAG;AAAA,MACjC;AAAA,IACJ,CAAC,CAAC,CAAC;AACH,SAAK,MAAM,KAAK,KAAK,OAAO,IAAI,KAAK;AAAA,MACjC,OAAO;AAAA,QACH,iBAAiB;AAAA,QACjB,QAAQ;AAAA,QACR,cAAc;AAAA,QACd,eAAe;AAAA,QACf,YAAY;AAAA,MAChB;AAAA,MACA,WAAW;AAAA,QACP,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,QACxB,UAAU,IAAI,QAAQ,IAAI,GAAG;AAAA,MACjC;AAAA,IACJ,CAAC,CAAC,CAAC;AAEH,UAAM,MAAM,KAAK,OAAO,IAAI,KAAK;AAAA,MAC7B,OAAO;AAAA,QACH,iBAAiB;AAAA,QACjB,cAAc;AAAA,QACd,WAAW;AAAA,MACf;AAAA,MACA,WAAW;AAAA,QACP,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,QACxB,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ,CAAC,CAAC;AAEF,QAAI,OAAO,IAAI,KAAK;AAAA,MAChB,OAAO;AAAA,QACH,cAAc;AAAA,QACd,QAAQ;AAAA,QACR,WAAW;AAAA,QACX,aAAa;AAAA,MACjB;AAAA,MACA,WAAW;AAAA,QACP,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC5B,MAAM,IAAI,QAAQ,IAAI,EAAE;AAAA,QACxB,UAAU,IAAI,QAAQ,KAAK,CAAC;AAAA,MAChC;AAAA,IACJ,CAAC,CAAC;AAEF,SAAK,WAAW;AAAA,EACpB;AAAA,EAGA,IAAI,SAAS,OAAgB;AACzB,SAAK,MAAM,QAAQ,OAAK;AACpB,QAAE,IAAI,MAAM,UAAU,QAAQ,MAAM;AAAA,IACxC,CAAC;AACD,SAAK,YAAY;AAAA,EACrB;AAAA,EAEA,IAAI,WAAW;AACX,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,KAAK,KAAuB;AACxB,UAAM,KAAK,GAAG;AACd,QAAI,KAAK,UAAU;AACf,WAAK,MAAM,QAAQ,CAAC,GAAG,MAAM;AACzB,UAAE,IAAI,MAAM,OAAQ,KAAK,IAAI,IAAI,QAAQ,QAAU,OAAO,IAAI,GAAG,IAAI,IAAK;AAAA,MAC9E,CAAC;AAAA,IACL;AAAA,EACJ;AACJ;;;AC9YO,IAAM,SAAN,cAAqB,QAAQ;AAAA,EACzB,YAAoB,QAAkB,YAAsD;AAC/F,UAAM,IAAI,QAAQ,KAAK,GAAG,GAAG;AAAA,MACzB,iBAAiB;AAAA,MACjB,gBAAgB;AAAA,MAChB,UAAU;AAAA,IACd,GAAG,UAAU;AALU;AASvB,SAAK,OAAO,IAAI,KAAK;AAAA,MACjB,UAAU,IAAI,QAAQ,IAAI,GAAG;AAAA,MAC7B,WAAW;AAAA,QACP,UAAU,IAAI,QAAQ,GAAG,IAAI;AAAA,QAC7B,UAAU;AAAA,MACd;AAAA,MACA,WAAW,IAAI,QAAQ,GAAG,CAAC;AAAA,MAC3B,WAAW,IAAI,QAAQ,GAAG,CAAC;AAAA,MAC3B,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,QACL,OAAO;AAAA,UACH,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,QAAQ;AAAA,UACR,WAAW;AAAA,UACX,iBAAiB;AAAA,UACjB,cAAc;AAAA,QAClB;AAAA,QACA,WAAW,CACX;AAAA,MACJ;AAAA,IACJ,CAAC,CAAC;AAEF,UAAM,QAAQ,KAAK,OAAO,IAAI,KAAK;AAAA,MAC/B,OAAO;AAAA,QACH,iBAAiB;AAAA,QACjB,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,WAAW;AAAA,MAEf;AAAA,MACA,WAAW;AAAA,QACP,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC5B,MAAM,IAAI,QAAQ,KAAK,GAAG;AAAA,QAC1B,UAAU;AAAA,QACV,UAAU,IAAI,QAAQ,KAAK,GAAG;AAAA,MAClC;AAAA,IACJ,CAAC,CAAC;AACF,UAAM,OAAO,IAAI,KAAK;AAAA,MAClB,UAAU,IAAI,QAAQ,IAAI,GAAG;AAAA,MAC7B,WAAW;AAAA,QACP,UAAU,IAAI,QAAQ,KAAK,EAAE;AAAA,MACjC;AAAA,MACA,WAAW,IAAI,QAAQ,GAAG,CAAC;AAAA,MAC3B,WAAW,IAAI,QAAQ,GAAG,CAAC;AAAA,MAC3B,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,QACL,OAAO;AAAA,UACH,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,WAAW;AAAA,UACX,iBAAiB;AAAA,QACrB;AAAA,QACA,WAAW,CACX;AAAA,MACJ;AAAA,IACJ,CAAC,CAAC;AACF,SAAK,OAAO,IAAI,cAAc,IAAI,QAAQ,IAAI,GAAG,GAAG,MAAM;AACtD,WAAK,OAAO,OAAO,QAAQ;AAAA,IAC/B,CAAC,CAAC;AAAA,EACN;AAAA,EAEA,WAAW,YAA8C;AACrD,UAAM,WAAW,UAAU;AAE3B,QAAI,MAAM,SAAS,GAAG;AAClB,WAAK,IAAI,MAAM,QAAQ;AACvB,WAAK,IAAI,MAAM,SAAS;AAAA,IAC5B,OAAO;AACH,WAAK,IAAI,MAAM,QAAQ;AACvB,WAAK,IAAI,MAAM,SAAS;AAAA,IAC5B;AAAA,EACJ;AAEJ;;;AC1FO,IAAM,QAAN,cAAoB,QAAQ;AAAA,EAExB,YAAoB,QAAkB,YAAsD;AAC/F,UAAM,IAAI,QAAQ,KAAK,EAAE,GAAG;AAAA,MACxB,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,eAAe;AAAA,MACf,YAAY;AAAA,MACZ,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,WAAW;AAAA,MACX,iBAAiB;AAAA,MACjB,WAAW;AAAA,MACX,UAAU;AAAA,MACV,eAAe;AAAA,MACf,YAAY;AAAA,MACZ,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,SAAS;AAAA,IAEb,GAAG,UAAU;AArBU;AAAA,EAsB3B;AAEJ;;;AClBO,IAAM,OAAN,cAAmB,KAAK;AAAA,EAEpB,YAAY,SAAsB;AACrC,UAAM,iCAAK,UAAL,EAAc,WAAW,CAAC,GAAI,QAAQ,aAAa,CAAC,GAAI,OAAO,EAAE,EAAC;AAExE,SAAK,SAAS;AAAA,MACV,qBAAqB,QAAQ,WAAW;AAAA,MACxC,kBAAkB,QAAQ,QAAQ;AAAA,MAClC,KAAK,GAAG,eAAQ,KAAG;AAAA,MACnB,cAAc,QAAQ,gBAAgB;AAAA,MACtC,YAAY,QAAQ,cAAc;AAAA,MAClC,gBAAgB,QAAQ,kBAAkB;AAAA,MAC1C,cAAc,QAAQ,gBAAgB;AAAA,IAC1C,CAAC;AACD,SAAK,SAAS,QAAQ,SAAS,CAAC,CAAC;AAAA,EACrC;AAAA,EAEO,mBAAmB,SAAiB;AACvC,SAAK,SAAS;AAAA,MACV,qBAAqB;AAAA,IACzB,CAAC;AAAA,EACL;AAAA,EAEO,gBAAgB,MAAc;AACjC,SAAK,SAAS;AAAA,MACV,kBAAkB;AAAA,IACtB,CAAC;AAAA,EACL;AACJ;;;ACjCO,IAAM,WAAN,cAAuB,QAAQ;AAAA,EAI3B,YAAoB,QAAkB,YAAsD;AAC/F,UAAM,IAAI,QAAQ,KAAK,EAAE,GAAG;AAAA,MACxB,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,eAAe;AAAA,MACf,YAAY;AAAA,MACZ,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,WAAW;AAAA,MACX,iBAAiB;AAAA,MACjB,WAAW;AAAA,MACX,eAAe;AAAA,MACf,YAAY;AAAA,MACZ,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,UAAU;AAAA,IACd,GAAG,UAAU;AAjBU;AAmBvB,SAAK,OAAO,KAAK,QAAQ,IAAI,KAAK;AAAA,MAC9B,OAAO;AAAA,QACH,OAAO;AAAA,QACP,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,UAAU;AAAA,QACV,OAAO;AAAA,QACP,UAAU;AAAA,MACd;AAAA,MACA,MAAM;AAAA,IACV,CAAC,CAAC;AACF,SAAK,OAAO,KAAK,QAAQ,IAAI,KAAK;AAAA,MAC9B,OAAO;AAAA,QACH,OAAO;AAAA,QACP,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,UAAU;AAAA,QACV,OAAO;AAAA,QACP,UAAU;AAAA,QACV,YAAY;AAAA,MAChB;AAAA,IACJ,CAAC,CAAC;AAEF,SAAK,UAAU;AACf,SAAK,MAAM,QAAQ,WAAW;AAAA,EAClC;AAAA,EAEO,UAAU;AACb,SAAK,UAAU;AACf,SAAK,KAAK,OAAO,KAAK;AACtB,SAAK,OAAO,SAAS,UAAU,KAAK;AACpC,SAAK,OAAO,SAAS,mBAAmB,KAAK;AAC7C,SAAK,OAAO,eAAe,IAAI;AAC/B,SAAK,MAAM,QAAQ,GAAG,YAAK,OAAO,OAAO,IAAI,WAAS,WAAU,YAAK,OAAO,OAAO,IAAI,cAAc,IAAI,KAAK,KAAG,aAAY;AAAA,EACjI;AAAA,EAEO,KAAK,KAAuB;AAE/B,QAAI,KAAK,OAAO,SAAS,UAAU,GAAG;AAClC,WAAK,QAAQ;AAAA,IACjB;AAAA,EACJ;AAEJ;;;AC7DO,IAAM,cAAN,MAAkB;AAAA,EAKd,YAAoB,MAAY,SAAmB,MAAwB,MAAc,IAAI;AAAzE;AAAuD;AAHlF,SAAQ,UAAoB,CAAC,KAAK,KAAK,GAAG;AAC1C,SAAQ,OAAiB,CAAC,GAAG,KAAK,KAAK,EAAE;AAGrC,SAAK,UAAU;AACf,SAAK,OAAO;AACZ,SAAK,WAAW;AAAA,EACpB;AAAA,EAEA,eAAe,OAAe,OAAe;AACzC,SAAK,QAAQ,KAAK,IAAI;AAAA,EAC1B;AAAA,EAIA,WAAW,SAAmB;AAC1B,SAAK,UAAU;AAAA,EACnB;AAAA,EAEA,aAAa,OAAe,QAAgB;AACxC,SAAK,KAAK,KAAK,IAAI;AAAA,EACvB;AAAA,EAEA,iBAAiB,QAAgB,SAAmB,CAAC,GAAG;AACpD,SAAK,KAAK,QAAQ,CAAC,KAAK,UAAU;AAC/B,WAAK,aAAa,OAAO,OAAO,SAAS,KAAK,IAAI,MAAM,MAAM;AAAA,IACjE,CAAC;AAAA,EACL;AAAA,EAEA,mBAAmB,OAAe,SAAmB,CAAC,GAAG;AACrD,SAAK,QAAQ,QAAQ,CAAC,QAAQ,UAAU;AACrC,WAAK,eAAe,OAAO,OAAO,SAAS,KAAK,IAAI,SAAS,KAAK;AAAA,IACrE,CAAC;AAAA,EACL;AAAA,EAEA,QAAQ,MAAgB;AACpB,SAAK,OAAO;AAAA,EAChB;AAAA,EAEA,aAAa;AACT,QAAI,UAAoB,CAAC;AACzB,QAAI,aAAa;AACjB,SAAK,QAAQ,QAAQ,CAAC,OAAO,UAAU;AAEnC,UAAI,QAAQ,GAAG;AACX,YAAI,cAAc,UAAU,GAAG;AAC3B,kBAAQ,KAAK,KAAK,GAAG;AAAA,QACzB,OAAO;AACH,kBAAQ,KAAK,CAAC;AAAA,QAClB;AAAA,MACJ;AAEA,UAAI,UAAU,GAAG;AACb,qBAAa;AAAA,MACjB;AAEA,cAAQ,KAAK,KAAK;AAAA,IACtB,CAAC;AACD,WAAO;AAAA,EACX;AAAA,EACA,UAAU;AACN,QAAI,OAAiB,CAAC;AACtB,QAAI,UAAU;AACd,SAAK,KAAK,QAAQ,CAAC,OAAO,UAAU;AAEhC,UAAI,QAAQ,GAAG;AACX,YAAI,WAAW,UAAU,GAAG;AACxB,eAAK,KAAK,KAAK,GAAG;AAAA,QACtB,OAAO;AACH,eAAK,KAAK,CAAC;AAAA,QACf;AAAA,MACJ;AAEA,UAAI,UAAU,GAAG;AACb,kBAAU;AAAA,MACd;AAEA,WAAK,KAAK,KAAK;AAAA,IACnB,CAAC;AACD,WAAO;AAAA,EACX;AAAA,EAEA,UAAU;AACN,WAAO,IAAI,QAAQ,KAAK,WAAW,EAAE,OAAO,CAAC,GAAG,MAAM,IAAI,GAAG,CAAC,GAAG,KAAK,QAAQ,EAAE,OAAO,CAAC,GAAG,MAAM,IAAI,GAAG,CAAC,CAAC;AAAA,EAC9G;AAAA,EAEA,aAAa;AACT,SAAK,KAAK,mBAAmB,KAAK,WAAW,EAAE,KAAK,KAAK,IAAI,IAAI;AACjE,SAAK,KAAK,gBAAgB,KAAK,QAAQ,EAAE,KAAK,KAAK,IAAI,IAAI;AAAA,EAC/D;AACJ;AAEO,IAAM,WAAN,cAAuB,OAAO;AAAA,EA+F1B,YAAoB,MAAgB;AACvC,UAAM,MAAM;AADW;AAxF3B,SAAO,UAAmB,IAAI,QAAQ,MAAM,GAAG;AAC/C,SAAQ,YAMJ,CAEA;AAkBJ,SAAQ,UAAmB;AAgEvB,SAAK,OAAO,KAAK,OAAO,IAAI,KAAK;AAAA,MAC7B,gBAAgB;AAAA,MAChB,YAAY;AAAA,MACZ,KAAK;AAAA,MACL,OAAO;AAAA,QACH,OAAO,GAAG,YAAK,QAAQ,GAAC;AAAA,QACxB,QAAQ,GAAG,YAAK,QAAQ,GAAC;AAAA,QACzB,YAAY;AAAA,MAChB;AAAA,MACA,WAAW;AAAA,QACP,MAAM,KAAK;AAAA,QACX,QAAQ,IAAI,QAAQ,KAAK,GAAG;AAAA,MAChC;AAAA,IACJ,CAAC,GAAG,IAAI;AAER,SAAK,KAAK,OAAO,KAAK,QAAQ,IAAI,MAAM,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;AAC3D,SAAK,KAAK,OAAO,KAAK,WAAW,IAAI,SAAS,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;AACjE,SAAK,KAAK,OAAO,KAAK,WAAW,IAAI,SAAS,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;AACjE,SAAK,KAAK,OAAO,KAAK,SAAS,IAAI,OAAO,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI;AACnE,SAAK,KAAK,OAAO,KAAK,SAAS,IAAI,OAAO,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;AAC9D,SAAK,KAAK,OAAO,KAAK,WAAW,IAAI,SAAS,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;AACjE,SAAK,KAAK,OAAO,KAAK,UAAU,IAAI,QAAQ,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;AAC/D,SAAK,cAAc,IAAI,YAAY,KAAK,MAAM,CAAC,KAAK,KAAK,GAAG,GAAG,CAAC,GAAG,KAAK,KAAK,CAAC,GAAG,EAAE;AAInF,SAAK,QAAQ,KAAK;AAElB,WAAO,iBAAiB,UAAU,MAAM;AACpC,WAAK,SAAS,OAAO,aAAa,OAAO;AACzC,WAAK,eAAe,IAAI;AAAA,IAC5B,CAAC;AAED,SAAK,eAAe,IAAI;AAExB,SAAK;AAAA,MAAS;AAAA,MAAU;AAAA,MACpB,MAAM;AACF,eAAO,KAAK,OAAO,OAAO,UAAU,SAAS,SAAS,IAAI,QAAQ,KAAK,GAAG,CAAC,IAAI,OAC1E,CAAC,KAAK,OAAO,OAAO,eAAe,KAAK,OAAO,OAAO,YAAY,SAAS,IAAI,QAAQ,KAAK,GAAG,CAAC,IAAI;AAAA,MAC7G;AAAA,MACA,CAAC,UAAU;AACP,aAAK,eAAe;AACpB,aAAK,OAAO,OAAO,SAAS;AAC5B,aAAK,OAAO,OAAO,UAAU,CAAC;AAC9B,YAAI,OAAO;AACP,eAAK,OAAO,OAAO,eAAe,MAAS;AAC3C,eAAK,OAAO,OAAO,UAAU,YAAY,IAAI,QAAQ,KAAK,GAAG,CAAC;AAAA,QAClE;AAAA,MACJ;AAAA,IACJ;AACA,SAAK;AAAA,MAAS;AAAA,MAAmB;AAAA,MAC7B,MAAM;AACF,aAAK,eAAe;AACpB,eAAO,KAAK,OAAO,OAAO,UAAU,SAAS,SAAS,IAAI,QAAQ,KAAK,GAAG,CAAC,IAAI,QAC1E,CAAC,KAAK,OAAO,OAAO,eAAe,KAAK,OAAO,OAAO,YAAY,SAAS,IAAI,QAAQ,KAAK,GAAG,CAAC,IAAI;AAAA,MAC7G;AAAA,IACJ;AACA,SAAK;AAAA,MAAS;AAAA,MAAc;AAAA,MACxB,MAAM;AACF,eAAO,KAAK,OAAO,IAAI,QAAQ,KAAK,KAAK,OAAO,IAAI,QAAQ;AAAA,MAChE;AAAA,IACJ;AACA,SAAK;AAAA,MAAS;AAAA,MAAe;AAAA,MACzB,MAAM;AACF,eAAO,KAAK,OAAO,IAAI,QAAQ,KAAK,KAAK,OAAO,IAAI,QAAQ;AAAA,MAChE;AAAA,IACJ;AAAA,EACJ;AAAA,EAhJO,SAAS,OAAe,SAAkB,WAA2B,UAAqC;AAlIrH;AAmIQ,SAAK,UAAU,KAAK,IAAI;AAAA,MACpB,OAAO;AAAA,MACP;AAAA,MACA;AAAA,IACJ;AACA,qBAAK,UAAU,KAAK,GAAE,aAAtB,4BAAiC;AAAA,EACrC;AAAA,EAEO,SAAS,OAAe;AA3InC;AA4IQ,YAAO,UAAK,UAAU,KAAK,MAApB,mBAAuB;AAAA,EAClC;AAAA,EAIA,eAAe,QAAiB,OAAO;AAEnC,QAAI,KAAK,YAAY,MAAM,SAAS,KAAK,OAAO;AAC5C,WAAK,UAAU,MAAM,SAAS;AAC9B,UAAI,KAAK,SAAS;AAEd,aAAK,MAAM,WAAW,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAClC,aAAK,SAAS,WAAW,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACrC,aAAK,SAAS,WAAW,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACrC,aAAK,OAAO,WAAW,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACnC,aAAK,SAAS,WAAW,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACrC,aAAK,OAAO,WAAW,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC;AACpC,aAAK,QAAQ,WAAW,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACpC,aAAK,YAAY,WAAW,CAAC,GAAG,CAAC;AACjC,aAAK,YAAY,QAAQ,CAAC,GAAG,KAAK,KAAK,KAAK,GAAG,GAAG,CAAC;AAAA,MAEvD,OAAO;AAEH,aAAK,OAAO,WAAW,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACnC,aAAK,SAAS,WAAW,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACrC,aAAK,SAAS,WAAW,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACrC,aAAK,MAAM,WAAW,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAClC,aAAK,OAAO,WAAW,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACnC,aAAK,SAAS,WAAW,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACrC,aAAK,QAAQ,WAAW,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACpC,aAAK,YAAY,WAAW,CAAC,KAAK,KAAK,GAAG,CAAC;AAC3C,aAAK,YAAY,QAAQ,CAAC,GAAG,KAAK,KAAK,CAAC,CAAC;AAAA,MAC7C;AAAA,IAEJ;AAGA,QAAI,KAAK,SAAS;AACd,WAAK,YAAY,eAAe,GAAG,KAAK,SAAS,QAAQ,KAAK,KAAK,SAAS,iBAAiB,IAAI,MAAM,GAAG;AAC1G,WAAK,YAAY,aAAa,GAAG,KAAK,SAAS,QAAQ,IAAI,MAAM,CAAC;AAClE,WAAK,YAAY,aAAa,GAAG,KAAK,SAAS,QAAQ,IAAI,MAAM,CAAC;AAClE,WAAK,YAAY,aAAa,GAAG,KAAK,SAAS,QAAQ,KAAK,KAAK,SAAS,iBAAiB,IAAI,MAAM,GAAG;AACxG,WAAK,YAAY,aAAa,GAAG,KAAK,SAAS,iBAAiB,IAAI,MAAM,CAAC;AAC3E,WAAK,YAAY,WAAW;AAC5B,WAAK,YAAY,KAAK,YAAY,QAAQ,EAAE,IAAI,IAAI,QAAQ,IAAI,EAAE,CAAC,CAAC;AAAA,IAExE,OAAO;AACH,WAAK,YAAY,eAAe,GAAG,KAAK,SAAS,QAAQ,IAAI,MAAM,CAAC;AACpE,WAAK,YAAY,eAAe,GAAG,GAAG;AACtC,WAAK,YAAY,eAAe,GAAG,KAAK,SAAS,iBAAiB,IAAI,MAAM,CAAC;AAC7E,WAAK,YAAY,WAAW;AAC5B,WAAK,YAAY,KAAK,YAAY,QAAQ,EAAE,IAAI,IAAI,QAAQ,IAAI,EAAE,CAAC,CAAC;AAAA,IACxE;AAAA,EAGJ;AAAA,EAEA,YAAY,OAAgB,KAAK,SAAS;AACtC,UAAM,aAAa,IAAI,QAAQ,OAAO,YAAY,OAAO,WAAW;AACpE,UAAM,KAAK,WAAW,IAAI,KAAK;AAC/B,UAAM,KAAK,WAAW,IAAI,KAAK;AAC/B,SAAK,KAAK,UAAU,SAAS,IAAI,QAAQ,KAAK,IAAI,IAAI,EAAE,GAAG,KAAK,IAAI,IAAI,EAAE,CAAC,CAAC;AAAA,EAChF;AAAA,EA2EO,aAAa;AAChB,WAAO,OAAO,KAAK,SAAS,EAAE,QAAQ,UAAQ;AAC1C,YAAM,YAAY,KAAK;AACvB,UAAI,KAAK,WAAW;AAChB,aAAK,QAAQ,KAAK,UAAU;AAAA,MAChC;AACA,UAAI,KAAK,YAAY,cAAc,KAAK,OAAO;AAC3C,aAAK,SAAS,KAAK,KAAK;AAAA,MAC5B;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EAEO,KAAK,KAAuB;AAC/B,UAAM,KAAK,GAAG;AACd,SAAK,WAAW;AAEhB,SAAK,SAAS,KAAK,GAAG;AAAA,EAE1B;AAEJ;;;AC7RO,IAAM,QAAN,cAAoB,KAAK;AAAA,EACrB,YAAY,SAAuB;AACtC,UAAM,iCAAK,UAAL,EAAc,WAAW,CAAC,GAAI,QAAQ,aAAa,CAAC,GAAI,QAAQ,EAAE,EAAC;AACzE,SAAK,SAAS;AAAA,MACV,UAAU,GAAG,eAAQ,MAAI;AAAA,MACzB,OAAO,QAAQ;AAAA,MACf,YAAY,QAAQ;AAAA,MACpB,YAAY,QAAQ;AAAA,MACpB,WAAW,QAAQ;AAAA,MACnB,YAAY,QAAQ;AAAA,MACpB,eAAe,QAAQ;AAAA,IAC3B,CAAC;AAAA,EACL;AACJ;;;ACnBO,IAAM,OAAN,cAAmB,OAAO;AAAA,EACtB,YAAoB,MAAgB;AACvC,UAAM,MAAM;AADW;AAEvB,UAAM,SAAS,KAAK,OAAO,IAAI,KAAK;AAAA,MAChC,eAAe;AAAA,MACf,KAAK;AAAA,MACL,YAAY;AAAA,MACZ,gBAAgB;AAAA,MAChB,OAAO;AAAA,QACH,OAAO;AAAA,QACP,QAAQ;AAAA,MACZ;AAAA,IACJ,CAAC,CAAC;AACF,UAAM,OAAO,OAAO,OAAO,IAAI,KAAK;AAAA,MAChC,KAAK;AAAA,MACL,YAAY;AAAA,MACZ,gBAAgB;AAAA,IAEpB,CAAC,CAAC;AACF,UAAM,OAAO,OAAO,OAAO,IAAI,KAAK;AAAA,MAChC,KAAK;AAAA,MACL,YAAY;AAAA,MACZ,gBAAgB;AAAA,IACpB,CAAC,CAAC;AAGF,SAAK,OAAO,IAAI,MAAM,EAAE,MAAM,YAAY,MAAM,IAAI,OAAO,SAAS,QAAQ,QAAQ,MAAM,oBAAoB,CAAC,CAAC;AAChH,SAAK,OAAO,IAAI,OAAO,EAAE,MAAM,YAAY,OAAO,EAAE,iBAAiB,WAAW,OAAO,SAAS,cAAc,MAAM,GAAG,aAAa,MAAM;AACtI,WAAK,KAAK,MAAM;AAAA,IACpB,EAAE,CAAC,CAAC;AAAA,EACR;AACJ;;;ACjCO,IAAM,WAAN,cAAuBC,MAAK;AAAA,EAGxB,cAAc;AACjB,UAAM;AACN,SAAK,UAAU,IAAI,KAAK,IAAI,CAAC;AAC7B,SAAK,UAAU,KAAK,OAAO,IAAI,SAAS,IAAI,CAAC;AAAA,EAEjD;AAAA,EAEO,MAAM;AACT,SAAK,QAAQ,MAAM,EAAE,UAAU;AAC/B,SAAK,QAAQ,MAAM,EAAE,UAAU;AAAA,EACnC;AAAA,EAEO,QAAQ;AACX,SAAK,QAAQ,MAAM,EAAE,UAAU;AAC/B,SAAK,QAAQ,MAAM,EAAE,UAAU;AAAA,EACnC;AACJ;;;ACrBA,SAAS,iBAAiB,oBAAoB,YAAY;AAEtD,MAAI,SAAS,aAAa,aAAa;AACnC,UAAM,OAAO,SAAS,cAAc,MAAM;AAC1C,SAAK,OAAO;AACZ,aAAS,KAAK,YAAY,IAAI;AAAA,EAClC;AAEA,QAAM,IAAI,IAAI,SAAS;AACvB,IAAE,IAAI;AACN,WAAS,KAAK,YAAY,EAAE,GAAG;AAE/B,SAAO,gBAAgB,SAAU,OAAO;AACpC,UAAM,eAAe;AACrB,UAAM,gBAAgB;AACtB,WAAO;AAAA,EACX;AACJ,CAAC;",
  "names": ["v", "s", "Game", "Game"]
}
